// Generated by CoffeeScript 1.6.3
var data, longest_prefix, obj;

require('dirtyjs');

data = require("./data").data;

longest_prefix = function(obj) {
  var arr, i, str, x, _i, _ref;
  arr = Object.values(obj);
  x = 0;
  for (i = _i = 0, _ref = arr[0].length; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
    if (arr.every(function(str) {
      return str.at(i) === arr[0].at(i);
    })) {
      console.log("pass " + i);
      x = i;
    }
  }
  str = arr[0].substr(0, x);
  return {
    prefix: str,
    "infinitive": obj.infinitive.substr(str.length, obj.infinitive.length),
    "present": obj.present.substr(str.length, obj.present.length),
    "gerund": obj.gerund.substr(str.length, obj.gerund.length),
    "past": obj.past.substr(str.length, obj.past.length)
  };
};

obj = {
  "infinitive": "disconnect",
  "present": "disconnects",
  "gerund": "disconnecting",
  "past": "disconnected"
};

data = data.map(function(obj) {
  return longest_prefix(obj);
});

console.log(JSON.stringify(data, null, 2));
