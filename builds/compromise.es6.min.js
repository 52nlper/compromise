(function(d){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=d();else if("function"==typeof define&&define.amd)define([],d);else{var y;y="undefined"==typeof window?"undefined"==typeof global?"undefined"==typeof self?this:self:global:window,y.nlp=d()}})(function(){var d;return function P(j,$,z){function N(C,V){if(!$[C]){if(!j[C]){var E="function"==typeof require&&require;if(!V&&E)return E(C,!0);if(A)return A(C,!0);var q=new Error("Cannot find module '"+C+"'");throw q.code="MODULE_NOT_FOUND",q}var D=$[C]={exports:{}};j[C][0].call(D.exports,function(O){var M=j[C][1][O];return N(M?M:O)},D,D.exports,P,j,$,z)}return $[C].exports}for(var A="function"==typeof require&&require,_=0;_<z.length;_++)N(z[_]);return N}({1:[function(P,j){j.exports={author:"Spencer Kelly <spencermountain@gmail.com> (http://spencermounta.in)",name:"compromise",description:"natural language processing in the browser",version:"7.0.28",main:"./builds/compromise.js",repository:{type:"git",url:"git://github.com/nlp-compromise/compromise.git"},scripts:{test:"node ./scripts/test.js",browsertest:"node ./scripts/browserTest.js",build:"node ./scripts/build.js",demo:"node ./scripts/demo.js",watch:"node ./scripts/watch.js",filesize:"node ./scripts/filesize.js",coverage:"node ./scripts/coverage.js"},files:["builds/","docs/"],dependencies:{},devDependencies:{"babel-plugin-transform-es3-member-expression-literals":"^6.22.0","babel-plugin-transform-es3-property-literals":"^6.22.0","babel-preset-es2015":"6.9.0","babel-preset-stage-2":"^6.11.0",babelify:"7.3.0",babili:"0.0.11",browserify:"13.0.1","browserify-glob":"^0.2.0",chalk:"^1.1.3","codacy-coverage":"^2.0.0",derequire:"^2.0.3",efrt:"0.0.2",eslint:"^3.1.1",gaze:"^1.1.1","http-server":"0.9.0","nlp-corpus":"latest",nyc:"^8.4.0",shelljs:"^0.7.2","tap-min":"^1.1.0","tap-spec":"4.1.1",tape:"4.6.0","uglify-js":"2.7.0"},license:"MIT"}},{}],2:[function(P,j){"use strict";const z=P("../fns");j.exports=z.uncompress_suffixes(["ablaze","above","adult","ahead","aloof","arab","asleep","average","backwards","bad","blank","bogus","bottom","brisk","cagey","chief","civil","common","complex","cozy","crisp","devout","difficult","due","dumb","eerie","evil","excess","extra","fake","far","faux","fierce ","final","fit","foreign","fun","good","goofy","gratis","grey","groovy","gross","half","huge","humdrum","inside","kaput","left","level","lewd","magenta","makeshift","mammoth","medium","modern","moot","naive","nearby","next","nonstop","north","notable","offbeat","ok","online","offline","outside","overwrought","premium","pricey","pro","quaint","random","rear","rebel","ritzy","savvy","sexy","shut","shy","sleek","smug","solemn","south","stark","superb","taboo","teenage","top","tranquil","true","ultra","understood","unfair","unknown","upbeat","upstairs","vanilla","various","widespread","woozy","wrong","certain","highfalutin","main","vain"],{going:"easy,fore,on,out",ight:"overn,overwe,r,sl,upt",ated:"antiqu,intoxic,sophistic,unregul,unrel",rant:"aber,exube,flag,igno,vib",wing:"harro,kno,left-,right-",ted:"expec,impor,limi,spiri,talen,tes,unexpec,unpreceden",ish:"dan,fool,hell,lout,self,snobb,squeam,styl",ary:"dre,legend,necess,prim,sc,second,w,we",ite:"el,favor,fin,oppos,pet,pol,recond,tr",ely:"hom,lik,liv,lon,lov,tim,unlik",tly:"cos,ghas,ghos,nigh,sain,sprigh,unsigh",dly:"cowar,cud,frien,frien,kin,ma",ble:"a,dou,hum,nim,no,proba",rly:"bu,disorde,elde,hou,neighbo,yea",ped:"cram,pum,stereoty,stri,war",sed:"clo,disea,distres,unsupervi,u",lly:"chi,hi,jo,si,sme",per:"dap,impro,pro,su,up",ile:"fert,host,juven,mob,volat",led:"detai,disgrunt,fab,paralle,troub",ast:"e,l,p,steadf",ent:"abs,appar,b,pres",ged:"dama,deran,jag,rag",ded:"crow,guar,retar,undeci",est:"b,dishon,hon,quick",ial:"colon,impart,init,part",ter:"bet,lat,ou,ut",ond:"bey,bl,vagab",ady:"he,re,sh,ste",eal:"ether,id,r,surr",ard:"abo,awkw,stand,straightforw",ior:"jun,pr,sen,super",ale:"fem,m,upsc,wholes",ed:"advanc,belov,craz,determin,hallow,hook,inbr,justifi,nak,nuanc,sacr,subdu,unauthoriz,unrecogniz,wick",ly:"dai,earth,gris,heaven,low,meas,month,oi,prick,seem,s,ug,unru,week,wi,woman",al:"actu,coloss,glob,illeg,leg,leth,liter,loy,ov,riv,roy,univers,usu",dy:"baw,bloo,clou,gau,gid,han,mol,moo,stur,ti,tren,unti,unwiel",se:"adver,den,diver,fal,immen,inten,obe,perver,preci,profu",er:"clev,form,inn,oth,ov,she,slend,somb,togeth,und",id:"afra,hum,langu,plac,rab,sord,splend,stup,torp",re:"awa,bizar,di,enti,macab,me,seve,since,spa",en:"barr,brok,crav,op,sudd,unev,unwritt,wood",ic:"alcohol,didact,gener,hispan,organ,publ,symbol",ny:"ma,pho,pu,shi,skin,ti,za",st:"again,mo,populi,raci,robu,uttermo",ne:"do,go,insa,obsce,picayu,sere",nd:"behi,bla,bli,profou,undergrou,wou",le:"multip,sing,so,subt,who",pt:"abru,ade,a,bankru,corru,nondescri",ty:"faul,hef,lof,mea,sal,uppi",sy:"bu,chee,lou,no,ro",ct:"abstra,exa,imperfe,inta,perfe",et:"discre,secr,sovi,ups,viol",me:"part-ti,pri,sa,supre,welco",cy:"boun,fan,i,jui,spi",ry:"fur,sor,tawd,wi,w",te:"comple,concre,obsole,remo",ld:"ba,bo,go,mi",an:"deadp,republic,t,urb",ll:"a,i,overa,sti",ay:"everyd,g,gr,ok",or:"indo,maj,min,outdo",my:"foa,gloo,roo,sli",ck:"ba,qua,si,sli",rt:"cove,expe,hu,ove",ul:"fo,gainf,helpf,painf"})},{"../fns":7}],3:[function(P,j){"use strict";const z=P("../fns");j.exports=z.uncompress_suffixes(["absurd","aggressive","alert","alive","angry","attractive","awesome","beautiful","big","bitter","black","blue","bored","boring","brash","brave","brief","brown","calm","charming","cheap","check","clean","clear","close","cold","cool","cruel","curly","cute","dangerous","dear","dirty","drunk","dry","dull","eager","early","easy","efficient","empty","even","extreme","faint","fair","fanc","feeble","few","fierce","fine","firm","forgetful","formal","frail","free","full","funny","gentle","glad","glib","glad","grand","green","gruesome","handsome","happy","harsh","heavy","high","hollow","hot","hungry","impolite","important","innocent","intellegent","interesting","keen","kind","lame","large","late","lean","little","long","loud","low","lucky","lush","macho","mature","mean","meek","mellow","mundane","narrow","near","neat","new","nice","noisy","normal","odd","old","orange","pale","pink","plain","poor","proud","pure","purple","rapid","rare","raw","rich","rotten","round","rude","safe","scarce","scared","shallow","shrill","simple","slim","slow","small","smooth","solid","soon","sore","sour","square","stale","steep","strange","strict","strong","swift","tall","tame","tart","tender","tense","thin","thirsty","tired","true","vague","vast","vulgar","warm","weird","wet","wild","windy","wise","yellow","young"],{erate:"degen,delib,desp,lit,mod",icial:"artif,benef,off,superf",ntial:"esse,influe,pote,substa",teful:"gra,ha,tas,was",stant:"con,di,in,resi",hing:"astonis,das,far-reac,refres,scat,screec,self-loat,soot",eful:"car,grac,peac,sham,us,veng",ming:"alar,cal,glea,unassu,unbeco,upco",cial:"commer,cru,finan,ra,so,spe",ure:"insec,miniat,obsc,premat,sec,s",uent:"congr,fl,freq,subseq",rate:"accu,elabo,i,sepa",ific:"horr,scient,spec,terr",rary:"arbit,contempo,cont,tempo",ntic:"authe,fra,giga,roma",nant:"domi,malig,preg,reso",nent:"emi,immi,perma,promi",iant:"brill,def,g,luxur",ging:"dama,encoura,han,lon",iate:"appropr,immed,inappropr,intermed",rect:"cor,e,incor,indi",zing:"agoni,ama,appeti,free",ine:"div,femin,genu,mascul,prist,rout",ute:"absol,ac,c,m,resol",ern:"east,north,south,st,west",tful:"deligh,doub,fre,righ,though,wis",ant:"abund,arrog,eleg,extravag,exult,hesit,irrelev,miscre,nonchal,obeis,observ,pl,pleas,redund,relev,reluct,signific,vac,verd",ing:"absorb,car,coo,liv,lov,ly,menac,perplex,shock,stand,surpris,tell,unappeal,unconvinc,unend,unsuspect,vex,want",ate:"adequ,delic,fortun,inadequ,inn,intim,legitim,priv,sed,ultim"})},{"../fns":7}],4:[function(P,j){j.exports=["bright","broad","coarse","damp","dark","dead","deaf","deep","fast","fat","flat","fresh","great","hard","light","loose","mad","moist","quick","quiet","red","ripe","rough","sad","sharp","short","sick","smart","soft","stiff","straight","sweet","thick","tight","tough","weak","white","wide"]},{}],5:[function(P,j){"use strict";let N=["monday","tuesday","wednesday","thursday","friday","saturday","sunday","mon","tues","wed","thurs","fri","sat","sun"];for(let V=0;6>=V;V++)N.push(N[V]+"s");let A=["millisecond","minute","hour","day","week","month","year","decade"],_=A.length;for(let V=0;V<_;V++)A.push(A[V]),A.push(A[V]+"s");A.push("century"),A.push("centuries"),A.push("seconds");j.exports={days:N,months:["january","february","april","june","july","august","september","october","november","december","jan","feb","mar","apr","jun","jul","aug","sep","oct","nov","dec","sept","sep"],durations:A,relative:["yesterday","today","tomorrow","weekend","tonight"]}},{}],6:[function(P,j){j.exports=["all hallows eve","all saints day","all sts day","april fools","armistice day","australia day","bastille day","boxing day","canada day","christmas","christmas eve","cinco de mayo","emancipation day","groundhog day","halloween","16 de septiembre","dieciseis de septiembre","grito de dolores","all hallows eve","day of the dead","dia de muertos","harvey milk day","inauguration day","independence day","independents day","juneteenth","labour day","national freedom day","national nurses day","new years","new years eve","purple heart day","rememberance day","rosa parks day","saint andrews day","saint patricks day","saint stephens day","saint valentines day","st andrews day","st patricks day","st stephens day","st valentines day ","valentines day","veterans day","victoria day","womens equality day","xmas","epiphany","orthodox christmas day","orthodox new year","assumption of mary","all saints day","all souls day","feast of the immaculate conception","feast of our lady of guadalupe","kwanzaa","imbolc","beltaine","lughnassadh","samhain","martin luther king day","mlk day","presidents day","mardi gras","tax day","commonwealth day","mothers day","memorial day","fathers day","columbus day","indigenous peoples day","canadian thanksgiving","election day","thanksgiving","t-day","turkey day","black friday","cyber monday","ash wednesday","palm sunday","maundy thursday","good friday","holy saturday","easter","easter sunday","easter monday","orthodox good friday","orthodox holy saturday","orthodox easter","orthodox easter monday","ascension day","pentecost","whitsunday","whit sunday","whit monday","trinity sunday","corpus christi","advent","tu bishvat","tu bshevat","purim","passover","yom hashoah","lag baomer","shavuot","tisha bav","rosh hashana","yom kippur","sukkot","shmini atzeret","simchat torah","chanukah","hanukkah","isra and miraj","lailat al-qadr","eid al-fitr","id al-Fitr","eid ul-Fitr","ramadan","eid al-adha","muharram","the prophets birthday","ostara","march equinox","vernal equinox","litha","june solistice","summer solistice","mabon","september equinox","autumnal equinox","yule","december solstice","winter solstice","chinese new year","diwali"]},{}],7:[function(P,j,$){"use strict";$.extendObj=(z,N)=>{return Object.keys(N).forEach((A)=>{z[A]=N[A]}),z},$.uncompress_suffixes=function(z,N){let A=Object.keys(N),_=A.length;for(let C=0;C<_;C++){const V=N[A[C]].split(",");for(let E=0;E<V.length;E++)z.push(V[E]+A[C])}return z},$.uncompress_prefixes=function(z,N){let A=Object.keys(N),_=A.length;for(let C=0;C<_;C++){const V=N[A[C]].split(",");for(let E=0;E<V.length;E++)z.push(A[C]+V[E])}return z}},{}],8:[function(P,j){"use strict";j.exports={firstnames:P("./people/firstnames"),lastnames:P("./people/lastnames"),notable_people:P("./people/notable"),titles:P("./people/titles"),currencies:P("./values/currencies"),numbers:P("./values/numbers"),ordinalMap:P("./values/ordinalMap"),units:P("./values/units"),dates:P("./dates/dates"),holidays:P("./dates/holidays"),professions:P("./nouns/professions"),abbreviations:P("./nouns/abbreviations"),demonyms:P("./nouns/demonyms"),irregular_plurals:P("./nouns/irregular_plurals"),places:P("./nouns/places"),uncountables:P("./nouns/uncountables"),nouns:P("./nouns/nouns"),organizations:P("./organizations/organizations"),sportsTeams:P("./organizations/sportsTeams"),bands:P("./organizations/bands"),orgWords:P("./organizations/orgWords"),adjectives:P("./adjectives/adjectives"),superlatives:P("./adjectives/superlatives"),verbConverts:P("./adjectives/verbConverts"),irregular_verbs:P("./verbs/irregular_verbs"),verbs:P("./verbs/verbs"),misc:P("./misc/misc")}},{"./adjectives/adjectives":2,"./adjectives/superlatives":3,"./adjectives/verbConverts":4,"./dates/dates":5,"./dates/holidays":6,"./misc/misc":13,"./nouns/abbreviations":15,"./nouns/demonyms":16,"./nouns/irregular_plurals":17,"./nouns/nouns":18,"./nouns/places":19,"./nouns/professions":20,"./nouns/uncountables":21,"./organizations/bands":22,"./organizations/orgWords":23,"./organizations/organizations":24,"./organizations/sportsTeams":25,"./people/firstnames":28,"./people/lastnames":29,"./people/notable":31,"./people/titles":32,"./values/currencies":33,"./values/numbers":34,"./values/ordinalMap":35,"./values/units":36,"./verbs/irregular_verbs":37,"./verbs/verbs":39}],9:[function(P,j){"use strict";const z=P("./index"),N=P("./fns"),A=P("../result/subset/nouns/methods/pluralize"),_=P("../result/subset/adjectives/methods/index"),C=P("../result/subset/verbs/methods/toAdjective"),V=P("../result/subset/verbs/methods/conjugate/faster");let E={};const q=(F)=>{N.extendObj(E,F)},D=(F,W)=>{const G=F.length;for(let S=0;S<G;S++)E[F[S]]=W};D(z.uncountables,"Noun");let O=z.units.words.filter((F)=>1<F.length);D(O,"Unit"),D(z.dates.durations,"Duration"),q(z.abbreviations);let M=z.numbers.ordinal;D(Object.keys(M.ones),"Ordinal"),D(Object.keys(M.teens),"Ordinal"),D(Object.keys(M.tens),"Ordinal"),D(Object.keys(M.multiples),"Ordinal"),M=z.numbers.cardinal,D(Object.keys(M.ones),"Cardinal"),D(Object.keys(M.teens),"Cardinal"),D(Object.keys(M.tens),"Cardinal"),D(Object.keys(M.multiples),"Cardinal"),D(Object.keys(z.numbers.prefixes),"Cardinal"),D(Object.keys(z.irregular_plurals.toPlural),"Singular"),D(Object.keys(z.irregular_plurals.toSingle),"Plural"),D(z.dates.days,"WeekDay"),D(z.dates.months,"Month"),D(z.dates.relative,"RelativeDay"),D(z.holidays,"Holiday"),D(z.professions,"Actor"),D(z.demonyms,"Demonym"),D(z.sportsTeams,"SportsTeam"),D(z.bands,"Organization"),D(z.orgWords,"Noun"),Object.keys(z.irregular_verbs).forEach((F)=>{E[F]="Infinitive";let W=z.irregular_verbs[F];Object.keys(W).forEach((S)=>{W[S]&&(E[W[S]]=S)});let G=V(F);Object.keys(G).forEach((S)=>{G[S]&&!E[G[S]]&&(E[G[S]]=S)})}),z.verbs.forEach((F)=>{let W=V(F);Object.keys(W).forEach((G)=>{W[G]&&!E[W[G]]&&(E[W[G]]=G)}),E[C(F)]="Adjective"}),z.superlatives.forEach((F)=>{E[_.toNoun(F)]="Noun",E[_.toAdverb(F)]="Adverb",E[_.toSuperlative(F)]="Superlative",E[_.toComparative(F)]="Comparative"}),z.verbConverts.forEach((F)=>{E[_.toNoun(F)]="Noun",E[_.toAdverb(F)]="Adverb",E[_.toSuperlative(F)]="Superlative",E[_.toComparative(F)]="Comparative";const W=_.toVerb(F);E[W]="Verb";let G=V(W);Object.keys(G).forEach((S)=>{G[S]&&!E[G[S]]&&(E[G[S]]=S)})}),z.nouns.forEach((F)=>{E[F]="Singular";let W=A(F);E[W]="Plural"}),q(z.firstnames),D(z.notable_people.female,"FemaleName"),D(z.notable_people.male,"MaleName"),D(z.titles,"Singular"),D(z.lastnames,"LastName"),D(z.places.airports,"Place"),D(z.places.cities,"City"),D(z.places.countries,"Country"),D(z.organizations,"Organization"),D(z.adjectives,"Adjective"),D(z.verbConverts,"Adjective"),D(z.superlatives,"Adjective"),D(z.currencies,"Currency"),q(z.misc),delete E[""],delete E[" "],delete E[null],j.exports=E},{"../result/subset/adjectives/methods/index":61,"../result/subset/nouns/methods/pluralize":95,"../result/subset/verbs/methods/conjugate/faster":134,"../result/subset/verbs/methods/toAdjective":145,"./fns":7,"./index":8}],10:[function(P,j){j.exports=["a lot","a posteriori","abroad","ad nauseam","again","all but","all that","almost","alone","already","also","always","anymore","anyway","apart","aside","at best","at large","at least","at most","at worst","away","by far","by now","damn","de jure","de trop","directly","en masse","ever","for example","for good","for sure","forever","further","furthermore","hence","indeed","instead","just","just about","kinda","maybe","meanwhile","more","moreover","newly","no longer","not withstanding","of course","often","once","once again","once more","only","par excellence","per se","perhaps","point blank","quite","randomly","rather","really","several","so","somehow","sometimes","somewhat","soon","sort of","such","then","thus","too","totally","toward","twice","up to","upwards of","very","way","well","yes","yep"]},{}],11:[function(P,j){j.exports=["this","any","enough","each","whatever","every","these","another","plenty","whichever","neither","an","a","least","own","few","both","those","the","that","various","either","much","some","else","la","le","les","des","de","du","el"]},{}],12:[function(P,j){j.exports=["uh","uhh","uhm","uh huh","uh-oh","please","plz","ugh","sheesh","eww","pff","voila","oy","hi","hello","bye","goodbye","hey","hai","eep","hurrah","yuck","ow","duh","oh","hmm","yeah","whoa","ooh","whee","ah","bah","gah","yaa","phew","gee","ahem","eek","meh","yahoo","oops","d'oh","psst","argh","grr","nah","shhh","whew","mmm","ooo","yay","uh-huh","boo","wow","nope","haha","hahaha","lol","lols","lmao","lmfao","ya","hee","ohh","eh","yup","wtf","wtaf","et cetera","fuck","shit","damn","dang","damnit","dammit","hell","a la"]},{}],13:[function(P,j){"use strict";const z={here:"Noun",better:"Comparative",earlier:"Superlative","make sure":"Verb","keep tabs":"Verb",gonna:"Verb",cannot:"Verb",has:"Verb",sounds:"PresentTense",taken:"PastTense",msg:"Verb","a few":"Value","years old":"Unit",not:"Negative",non:"Negative",never:"Negative",no:"Negative","no doubt":"Noun","not only":"Adverb","how's":"QuestionWord"},N={Adjective:["so called","on board","vice versa","en route","upside down","up front","in front","in situ","in vitro","ad hoc","de facto","ad infinitum","for keeps","a priori","off guard","spot on","ipso facto","fed up","brand new","old fashioned","bona fide","well off","far off","straight forward","hard up","sui generis","en suite","avant garde","sans serif","gung ho","super duper","bourgeois"],Verb:["lengthen","heighten","worsen","lessen","awaken","frighten","threaten","hasten","strengthen","given","known","shown","seen","born"],Place:["new england","new hampshire","new jersey","new mexico","united states","united kingdom","great britain","great lakes","pacific ocean","atlantic ocean","indian ocean","arctic ocean","antarctic ocean","everglades"],Conjunction:["yet","therefore","or","while","nor","whether","though","tho","because","cuz","but","for","and","however","before","although","how","plus","versus","otherwise"],Time:["noon","midnight","now","morning","evening","afternoon","night","breakfast time","lunchtime","dinnertime","ago","sometime","eod","oclock"],Date:["eom","standard time","daylight time"],Condition:["if","unless","notwithstanding"],PastTense:["said","had","been","began","came","did","meant","went"],Gerund:["going","being","according","resulting","developing","staining"],Copula:["is","are","was","were","am"],Determiner:P("./determiners"),Preposition:P("./prepositions"),Modal:["can","may","could","might","will","ought to","would","must","shall","should","ought","shant","lets"],Possessive:["mine","something","none","anything","anyone","theirs","himself","ours","his","my","their","yours","your","our","its","herself","hers","themselves","myself","her"],Pronoun:["it","they","i","them","you","she","me","he","him","ourselves","us","we","thou","il","elle","yourself","'em","he's","she's"],QuestionWord:["where","why","when","who","whom","whose","what","which"],Adverb:P("./adverbs"),Expression:P("./expressions"),Person:["father","mother","mom","dad","mommy","daddy","sister","brother","aunt","uncle","grandfather","grandmother","cousin","stepfather","stepmother","boy","girl","man","woman","guy","dude","bro","gentleman","someone"]},A=Object.keys(N);for(let _=0;_<A.length;_++){const C=N[A[_]];for(let V=0;V<C.length;V++)z[C[V]]=A[_]}j.exports=z},{"./adverbs":10,"./determiners":11,"./expressions":12,"./prepositions":14}],14:[function(P,j){j.exports=["'o","a'","about","across","after","along","amid","amidst","among","amongst","apropos","around","as","as long as","at","atop","barring","below","besides","between","by","chez","circa","despite","down","during","except","from","in","into","mid","midst","notwithstanding","o'","of","off","on","onto","out","per","qua","sans","since","so that","than","through","throughout","thru","till","to","towards","unlike","until","up","upon","versus","via","vis-a-vis","w/o","whereas","with","within","without","-"]},{}],15:[function(P,j){"use strict";let z={Noun:["arc","al","exp","fy","pd","pl","plz","tce","bl","ma","ba","lit","ex","eg","ie","ca","cca","vs","etc","esp","ft","bc","ad","md","corp","col"],Organization:["dept","univ","assn","bros","inc","ltd","co","yahoo","joomla","jeopardy"],Place:["rd","st","dist","mt","ave","blvd","cl","ct","cres","hwy","ariz","cal","calif","colo","conn","fla","fl","ga","ida","ia","kan","kans","minn","neb","nebr","okla","penna","penn","pa","dak","tenn","tex","ut","vt","va","wis","wisc","wy","wyo","usafa","alta","ont","que","sask"],Date:["jan","feb","mar","apr","jun","jul","aug","sep","sept","oct","nov","dec","circa"],Honorific:["adj","adm","adv","asst","atty","bldg","brig","capt","cmdr","comdr","cpl","det","dr","esq","gen","gov","hon","jr","llb","lt","maj","messrs","mister","mlle","mme","mr","mrs","ms","mstr","op","ord","phd","prof","pvt","rep","reps","res","rev","sen","sens","sfc","sgt","sir","sr","supt","surg"]},N={};const A=Object.keys(z);for(let _=0;_<A.length;_++){const C=z[A[_]];for(let V=0;V<C.length;V++)N[C[V]]=A[_]}j.exports=N},{}],16:[function(P,j){j.exports=["afghan","albanian","algerian","angolan","argentine","armenian","australian","aussie","austrian","bangladeshi","basque","belarusian","belgian","bolivian","bosnian","brazilian","bulgarian","cambodian","cameroonian","canadian","chadian","chilean","chinese","colombian","congolese","croatian","cuban","czech","dominican","danish","egyptian","british","estonian","ethiopian","ecuadorian","finnish","french","gambian","georgian","german","greek","ghanaian","guatemalan","haitian","hungarian","honduran","icelandic","indian","indonesian","iranian","iraqi","irish","israeli","italian","ivorian","jamaican","japanese","jordanian","kazakh","kenyan","korean","kuwaiti","lao","latvian","lebanese","liberian","libyan","lithuanian","namibian","malagasy","macedonian","malaysian","mexican","mongolian","moroccan","dutch","nicaraguan","nigerian","nigerien","norwegian","omani","panamanian","paraguayan","pakistani","palestinian","peruvian","philippine","filipino","polish","portuguese","qatari","romanian","russian","rwandan","samoan","saudi","scottish","senegalese","serbian","singaporean","slovak","somalian","sudanese","swedish","swiss","syrian","taiwanese","trinidadian","thai","tunisian","turkmen","ugandan","ukrainian","american","hindi","spanish","venezuelan","vietnamese","welsh","zambian","zimbabwean","english","african","european","asian","californian"]},{}],17:[function(P,j){"use strict";let z=[["child","_ren"],["person","people"],["leaf","leaves"],["database","_s"],["quiz","_zes"],["stomach","_s"],["sex","_es"],["move","_s"],["shoe","_s"],["goose","geese"],["phenomenon","phenomena"],["barracks","_"],["deer","_"],["syllabus","syllabi"],["index","indices"],["appendix","appendices"],["criterion","criteria"],["man","men"],["rodeo","_s"],["epoch","_s"],["zero","_s"],["avocado","_s"],["halo","_s"],["tornado","_s"],["tuxedo","_s"],["sombrero","_s"],["addendum","addenda"],["alga","_e"],["alumna","_e"],["alumnus","alumni"],["bacillus","bacilli"],["cactus","cacti"],["beau","_x"],["ch\xE2teau","_x"],["chateau","_x"],["tableau","_x"],["corpus","corpora"],["curriculum","curricula"],["echo","_es"],["embargo","_es"],["foot","feet"],["genus","genera"],["hippopotamus","hippopotami"],["larva","_e"],["libretto","libretti"],["loaf","loaves"],["matrix","matrices"],["memorandum","memoranda"],["mosquito","_es"],["opus","opera"],["ovum","ova"],["ox","_en"],["radius","radii"],["referendum","referenda"],["thief","thieves"],["tooth","teeth"]];z=z.map(function(_){return _[1]=_[1].replace("_",_[0]),_});const N=z.reduce((_,C)=>{return _[C[1]]=C[0],_},{}),A=z.reduce((_,C)=>{return _[C[0]]=C[1],_},{});j.exports={toSingle:N,toPlural:A}},{}],18:[function(P,j){j.exports=["egg","bottle","cottage","kitty","doggy","ad hominem","banking","body","breakfast","ceiling","city","credit card","death","dinner","door","economy","energy","event","everything","example","fl oz","friend","funding","god","glacier","canary","grand slam","head start","home","house","lunch","nothing","number","others","part","patent","problem","purpose","room","student","stuff","super bowl","system","there","thing","things","tragedy","us dollar","world","world series"]},{}],19:[function(P,j){"use strict";const z=P("../fns");let N=["andorra","antarctica","antigua and barbuda","aruba","bahamas","bangladesh","barbados","belgium","belize","bermuda","bonaire","brazil","brunei","burkina faso","burundi","burma","cape verde","chile","comoros","congo-brazzaville","cuba","curacao","cote d'ivoire","denmark","djibouti","dominica","east timor","ecuador","egypt","el salvador","fiji","france","french guiana","germany","gibraltar","greece","grenada","guam","guinea-bissau","guadeloupe","guernsey","haiti","honduras","hungary","hong kong","isle of man","iraq","israel","ivory coast","italy","jamaica","jersey","kenya","kiribati","kosovo","kuwait","laos","lesotho","libya","luxembourg","macao","malawi","mali","malta","martinique","mayotte","moldova","mozambique","montserrat","montenegro","nauru","niue","netherlands","nicaragua","niger","palau","panama","peru","samoa","san marino","saint helena","sint maarten","singapore","sri lanka","suriname","sweden","timor-leste","trinidad and tobago","tonga","tokelau","turkey","tuvalu","u.s.a.","united kingdom","u.k.","usa","ussr","vanuatu","vietnam","vatican city","wales","wallis and futuna","yemen","zimbabwe","spain","benin","bahrain","saint martin","liechtenstein"];N=z.uncompress_suffixes(N,{sland:"christmas i,norfolk i,bouvet i",slands:"british virgin i,u.s. virgin i,turks and caicos i,pitcairn i,northern mariana i,marshall i,cayman i,faroe i,falkland i,cook i,cocos i,keeling i,solomon i",istan:"pak,uzbek,afghan,tajik,turkmen",ublic:"czech rep,dominican rep,central african rep",uinea:"g,papua new g,equatorial g",land:"thai,po,switzer,fin,republic of ire,ire,new zea,swazi,ice,eng,scot,green",ania:"tanz,rom,maurit,lithu,alb",rica:"ame,united states of ame,south af,costa ",mbia:"colo,za,ga",eria:"nig,alg,lib",nia:"arme,macedo,slove,esto",sia:"indone,rus,malay,tuni",ina:"ch,argent,bosnia and herzegov",tan:"kazakhs,kyrgyzs,bhu",ana:"gh,botsw,guy",bia:"saudi ara,ser,nami",lia:"austra,soma,mongo",rea:"south ko,north ko,erit",dan:"su,south su,jor",ria:"sy,aust,bulga",co:"mexi,mona,puerto ri,moroc",ia:"ind,ethiop,cambod,boliv,slovak,georg,croat,latv,saint luc,micrones,french polynes,czech",an:"jap,ir,taiw,azerbaij,om",da:"ugan,cana,rwan",us:"belar,mauriti,cypr",al:"nep,seneg,portug",go:"dr con,to,trinidad-toba",la:"anguil,venezue,ango,guatema",es:"united stat,philippin,united arab emirat,seychell,maldiv",on:"camero,leban,gab",ar:"myanm,madagasc,qat",ay:"paragu,norw,urugu",ne:"ukrai,sierra leo,palesti"});let _=["aalborg","abu dhabi","ahmedabad","almaty","antwerp","aqaba","ashdod","ashgabat","athens","auckland","bogota","brussels","calgary","cape town","cebu","curitiba","doha","dushanbe","frankfurt","genoa","ghent","giza","graz","guangzhou","haifa","hanoi","helsinki","ho chi minh","homs","i\u0307zmir","jakarta","kiev","kingston","klaipeda","kobe","kosice","krakow","la plata","luxembourg","medell\xEDn","mexico","miskolc","montevideo","montreal","moscow","nagoya","nis","odessa","oslo","ottawa","palermo","paris","perth","phnom penh","phoenix","port elizabeth","poznan","prague","reykjavik","riga","rome","rosario","seville","skopje","stockholm","stuttgart","sydney","tbilisi","tegucigalpa","the hague","thessaloniki","tokyo","toulouse","trondheim","tunis","turku","utrecht","warsaw","winnipeg","wroclaw","zagreb","tianjin","berlin","turin","dublin"];_=z.uncompress_suffixes(_,{burg:"saint peters,yekaterin,ham,til,gothen,salz",ton:"hous,edmon,welling,hamil",ion:"herakl",ana:"hav,tir",ara:"guadalaj,ank,timiso",an:"tehr,mil,durb,bus,tain,abidj,amm,yerev",ia:"philadelph,brasil,alexandr,pretor,valenc",on:"ly,lond,yang,inche,daeje,lisb",en:"shenzh,eindhov,pils,copenhag,berg",ng:"beiji,chittago,pyongya,kaohsiu,taichu",es:"los angel,nant,napl,buenos air,f",la:"pueb,mani,barranquil,kampa,guatema",or:"salvad,san salvad,ulan bat,marib",us:"damasc,pirae,aarh,vilni",as:"carac,patr,burg,kaun",va:"craio,petah tik,gene,bratisla",ai:"shangh,mumb,chenn,chiang m",ne:"colog,melbour,brisba,lausan",er:"manchest,vancouv,tangi",ka:"dha,osa,banja lu",ro:"rio de janei,sappo,cai",am:"birmingh,amsterd,rotterd",ur:"kuala lump,winterth,kopavog",ch:"muni,zuri,christchur",na:"barcelo,vien,var",ma:"yokoha,li",ul:"istanb,seo,kab",to:"toron,qui,por",iv:"khark,lv,tel av",sk:"gdan,min"});_=z.uncompress_prefixes(_,{"new ":"delhi,york,taipei",san:"a'a,tiago, jose",ta:"ipei,mpere,llinn,rtu",ba:"ngalore,ngkok,ku,sel",li:"verpool,ege,nz,massol",ma:"rseille,ndalay,drid,lmo",be:"rn,lgrade,irut",ka:"rachi,raj,ndy",da:"egu,kar,ugavpils",ch:"icago",co:"lombo,nstanta,rk",bu:"rsa,charest,dapest"});j.exports={countries:N,cities:_,airports:["atl","pek","lhr","hnd","ord","lax","cdg","dfw","cgk","dxb","fra","hkg","den","bkk","ams","jfk","ist","sfo","clt","las","phx","iax","kul","mia","icn","muc","syd","fco","mco","bcn","yyz","lgw","phl"]}},{"../fns":7}],20:[function(P,j){j.exports=["accountant","administrator","advisor","agent","architect","artist","assistant","attendant","bricklayer","butcher","carpenter","clerk","deputy","dietician","engineer","farmer","firefighter","fireman","gardener","getor","hairdresser","housekeeper","instructor","journalist","lawyer","mechanic","minister","musician","nurse","officer","operator","photographer","plumber","policeman","politician","practitioner","president","programmer","psychologist","receptionist","researcher","roofer","sailor","scientist","secretary","security guard","soldier","supervisor","surgeon","technician","therapist"]},{}],21:[function(P,j){j.exports=["advice","aircraft","art","baggage","bass","beef","bison","blood","bread","butter","cake","cash","celcius","chaos","cheese","chewing","civics","clothing","coal","coffee","conduct","confusion","cotton","currency","economics","education","electricity","enjoyment","entertainment","equipment","ethics","everybody","everyone","fahrenheit","fiction","fish","flour","food","forgiveness","fowl","fruit","fun","furniture","gold","golf","gossip","grass","ground","gum","gymnastics","hair","halibut","happiness","hertz","history","hockey","homework","honey","hospitality","ice","impatience","importance","information","itself","jewelry","justice","kelvin","knowledge","laughter","leather","leisure","lightning","liquid","literature","luck","luggage","machinery","mail","mathematics","measles","meat","milk","mist","money","moose","mumps","music","news","noise","oil","oxygen","paper","patience","peace","peanut","pepper","petrol","physics","plastic","pork","power","pressure","progress","rain","recognition","recreation","relaxation","research","rice","sadness","safety","salmon","salt","sand","scenery","series","sheep","shopping","silk","silver","snow","soap","soccer","softness","space","spacecraft","species","speed","steam","steel","sugar","sunshine","tea","tennis","thunder","time","toothpaste","traffic","trouble","trousers","trout","tuna","vinegar","violence","warmth","water","weather","wildlife","wine","wood","wool"]},{}],22:[function(P,j){j.exports=["abba","ac/dc","aerosmith","bee gees","coldplay","creedence clearwater revival","def leppard","depeche mode","destiny's child","duran duran","fleetwood mac","green day","guns n roses","joy division","metallica","moody blues","motley crue","new kids on the block","pink floyd","r.e.m.","radiohead","red hot chili peppers","sex pistols","soundgarden","spice girls","the beach boys","the beatles","the black eyed peas","the byrds","the carpenters","the guess who","the hollies","the rolling stones","the smashing pumpkins","the supremes","the who","thin lizzy","u2","van halen"]},{}],23:[function(P,j){j.exports=["administration","agence","agences","agencies","agency","aircraft","airlines","airways","army","assoc","associates","association","assurance","authority","autorite","aviation","bank","banque","board","boys","brands","brewery","brotherhood","brothers","building society","bureau","cafe","caisse","capital","care","cathedral","center","central bank","centre","chemicals","choir","chronicle","church","circus","clinic","clinique","club","co","coalition","coffee","collective","college","commission","committee","communications","community","company","comprehensive","computers","confederation","conference","conseil","consulting","containers","corporation","corps","council","crew","daily news","data","departement","department","department store","departments","design","development","directorate","division","drilling","education","eglise","electric","electricity","energy","ensemble","enterprise","enterprises","entertainment","estate","etat","evening news","faculty","federation","financial","fm","foundation","fund","gas","gazette","girls","government","group","guild","health authority","herald","holdings","hospital","hotel","hotels","inc","industries","institut","institute","institute of technology","institutes","insurance","international","interstate","investment","investments","investors","journal","laboratory","labs","liberation army","limited","local authority","local health authority","machines","magazine","management","marine","marketing","markets","media","memorial","mercantile exchange","ministere","ministry","military","mobile","motor","motors","musee","museum","news","news service","observatory","office","oil","optical","orchestra","organization","partners","partnership","people's party","petrol","petroleum","pharmacare","pharmaceutical","pharmaceuticals","pizza","plc","police","polytechnic","post","power","press","productions","quartet","radio","regional authority","regional health authority","reserve","resources","restaurant","restaurants","savings","school","securities","service","services","social club","societe","society","sons","standard","state police","state university","stock exchange","subcommittee","syndicat","systems","telecommunications","telegraph","television","times","tribunal","tv","union","university","utilities","workers"]},{}],24:[function(P,j){"use strict";j.exports=["20th century fox","3m","7-eleven","abc","academy of sciences","acer","activision","adidas","aig","al jazeera","al qaeda","alcatel-lucent","alcatel","altair","amc","amd","american express","amt","amtrak","anheuser-busch","aol","apple computers","applebee's","arby's","argos","armco","ashland oil","associated press","at&t","avis","avon","ayer","banana republic","basf","baskin robbins","baxter","bayer","bbc","bechtel","ben & jerry's","berkshire hathaway","bf goodrich","bfgoodrich","black & decker","blockbuster video","bloomingdale","blue cross","bmw","bni","boeing","bombardier","boston globe","boston pizza","bp","capital one","cadbury","carl's jr","cbc","chevron","chevy","chick fil-a","china daily","cia","cisco systems","cisco","citigroup","cnn","coca cola","colgate","comcast","compaq","coors","costco","craigslist","daimler","dea","dell","der spiegel","disney","doj","dow jones","dunkin donuts","dupont","ebay","esa","eu","exxon mobil","exxonmobil","facebook","fannie mae","fbi","fda","fedex","fiat","financial times","firestone","ford","frito-lay","g8","general electric","general motors","ghq","glaxo smith kline","glencore","goldman sachs","goodyear","google","gucci","h & m","hasbro","hewlett-packard","hitachi","hizbollah","home depot","honda","hsbc","hyundai","ibm","ihop","ing","intel","interpol","itv","jiffy lube","johnson & johnson","jpmorgan chase","jpmorgan","jsa","katv","kfc","kkk","kmart","kodak","l'oreal","la presse","la-z-boy","lenovo","lexis","lexmark","lg","little caesars","mac's milk","mattel","mazda","mcdonald's","mcdonalds","medicaid","medicare","mercedes-benz","mercedes","microsoft","mitas","mitsubishi","mlb","mobil","monsanto","motel 6","motorola","mtv","myspace","nandos","nasa","nascar","nasdaq","national academy of sciences","nato","natwest","nba","nbc","nestle","nestl\xE9","netflix","new york times","newsweek","nfl","nhl","nhs","nike","nintendo","nissan","nokia","notre dame","novartis","nsa","nwa","old navy","opec","orange julius","oxfam","pan am","panasonic","panda express","pbs","pepsico","petrobras","petrochina","petronas","peugeot","pfizer","philip morris","pizza hut","premier oil","procter & gamble","prudential","quantas","quizno's","rbc","rbs","re/max","readers digest","red bull","red cross","red lobster","revlon","royal bank","royal dutch shell","ryanair","safeway","sainsbury's","samsung","sears","siemens","sony","starbucks","statoil","subaru","t mobile","taco bell","td bank","telefonica","telus","tesco","tesla motors","tgi fridays","the daily mail","tim hortons","tmz","toshiba","toyota","toys r us","twitter","ubs","unesco","unilever","united nations","ups","usa today","usps","verizon","vh1","visa","vodafone","volkswagen","volvo","wal-mart","walgreens","wall street journal","walmart","warner bros","wells fargo","westfield","westinghouse","world trade organization","yahoo!","yamaha","ymca","youtube","ywca"]},{}],25:[function(P,j){j.exports=["washington nationals","toronto blue jays","texas rangers","tampa bay rays","st. louis cardinals","seattle mariners","san francisco giants","san diego padres","pittsburgh pirates","philadelphia phillies","oakland athletics","new york yankees","new york mets","minnesota twins","milwaukee brewers","miami marlins","los angeles dodgers","kansas city royals","houston astros","detroit tigers","colorado rockies","cleveland indians","cincinnati reds","chicago white sox","chicago cubs","boston red sox","baltimore orioles","atlanta braves","arizona diamondbacks","diamondbacks","braves","orioles","white sox","astros","royals","dodgers","marlins","brewers","mets","yankees","phillies","padres","giants","mariners","cardinals","blue jays","boston celtics","brooklyn nets","new york knicks","philadelphia 76ers","toronto raptors","chicago bulls","cleveland cavaliers","detroit pistons","indiana pacers","milwaukee bucks","atlanta hawks","charlotte hornets","miami heat","orlando magic","washington wizards","dallas mavericks","houston rockets","memphis grizzlies","new orleans pelicans","san antonio spurs","denver nuggets","minnesota timberwolves","portland trail blazers","oklahoma city thunder","utah jazz","golden state warriors","los angeles clippers","los angeles lakers","phoenix suns","sacramento kings","76ers","knicks","mavericks","lakers","celtics","buffalo bills","miami dolphins","new england patriots","new york jets","baltimore ravens","cincinnati bengals","cleveland browns","pittsburgh steelers","houston texans","indianapolis colts","jacksonville jaguars","tennessee titans","denver broncos","kansas city chiefs","oakland raiders","san diego chargers","dallas cowboys","new york giants","philadelphia eagles","washington redskins","chicago bears","detroit lions","green bay packers","minnesota vikings","atlanta falcons","carolina panthers","new orleans saints","tampa bay buccaneers","arizona cardinals","st. louis rams","san francisco 49ers","seattle seahawks","chicago fire","columbus crew sc","d.c. united","montreal impact","new england revolution","new york city fc","new york red bulls","philadelphia union","colorado rapids","fc dallas","houston dynamo","la galaxy","portland timbers","real salt lake","san jose earthquakes","seattle sounders","sporting kansas city","vancouver whitecaps","atlanta united","minnesota united","blackburn rovers","leicester city","manchester city","manchester united","aston villa","cardiff city","newcastle united","queens park rangers","sheffield united","stoke city","tottenham hotspur","west ham united"]},{}],26:[function(P,j){j.exports=["casey","jamie","lee","jaime","jessie","morgan","rene","robin","devon","kerry","alexis","guadalupe","blair","kasey","jean","marion","aubrey","shelby","jan","shea","jade","kenyatta","kelsey","shay","lashawn","trinity","regan","jammie","cassidy","cheyenne","reagan","shiloh","marlo","andra","devan","rosario","lee","mel"]},{}],27:[function(P,j){"use strict";const z=P("../fns");let A=["abigail","aicha","alya","andrea","annika","beatriz","bettye","brandi","brooke","carol","celeste","chelsea","cheryl","chloe","claire","cleo","constanza","consuelo","crystal","dominique","dorothea","eleanor","eliza","erika","fay","faye","fern","gail","genevieve","gertrude","gladys","heidi","ingrid","jade","jill","jo","jodie","joni","kate","katie","kathryn","kay","kim","krystal","latoya","laxmi","leigh","lindsay","lupe","lynn","mae","malika","margo","marguerite","marisol","maritza","maude","maya","mildred","miriam","monique","mrignayani","naomi","nell","nikki","olga","paige","pam","parvati","pearl","reba","robyn","rosalind","shania","sheryl","sue","sybil","tami","tamika","therese","toni","gisele","caitlin","erin","karin","kristin"];A=z.uncompress_suffixes(A,{stine:"chri,erne,ju,kri",rlene:"a,cha,da,ma",eline:"ad,ang,jacqu,mad",nette:"an,antoi,jean,ly",elia:"ad,am,ang,cec,c,corn,d,of,sh",anne:",di,je,jo,le,mari,rox,sus,suz",elle:"dani,est,gabri,isab,jan,mich,rach,roch",ella:"d,est,isab,lu,marc,st",rina:"kata,kat,ma,sab,t",icia:"al,fel,let,patr,tr",ette:"bernad,b,claud,paul,yv",leen:"ai,cath,col,ei,kath",ndra:"alexa,cassa,ke,sa,so",elma:",s,th,v",anda:"am,mir,w,yol",etta:",henri,lor,ros",isha:"al,ke,lat,tr",tina:"cris,mar,,valen",inda:"bel,l,luc,mel",arla:"c,d,k,m",lena:"e,je,,magda",ine:"carol,cather,cel,ela,franc,gerald,jan,jasm,jeann,joseph,kathar,kather,lorra,max,nad,paul",ice:"al,beatr,bern,cand,clar,eun,jan,patr",ela:"andj,ang,carm,gabri,graci,l,manu,pam",ara:"barb,c,cl,k,l,tam,t,z",ora:"c,d,fl,isid,len,l,n,teod",ina:"am,catal,d,georg,g,josef,n",ita:"an,arp,bon,juan,kav,margar,r",nna:"dea,do,gle,je,joha,lado,sha",lyn:"caro,eve,gwendo,jac,jacque,joce,mari",ica:"angel,er,jess,mil,mon,patr,veron",ene:"adri,hel,imog,ir,jol,lor",ana:"adri,d,jov,ju,l,sus",nda:"bre,gle,ly,rho,ro",nia:"anto,euge,so,to,virgi",ley:"ash,kel,kimber,les,shir",sha:"lata,mar,nata,ta",ian:"jill,lill,mar,viv",isa:"al,el,l,lu",ann:",jo,le,mary",ise:"den,el,elo,lou",ida:"a,,rach,sa",nya:"lato,so,ta,to",ssa:"aly,mari,meli,vane",tha:"ber,mar,saman,tabi",ia:"cecil,claud,cynth,dam,georg,glor,jul,luc,lyd,marc,mar,nad,oliv,silv,sof,soph,sylv,victor",la:"eu,kay,lei,leo,li,lo,pau,priscil,shei,ursu,vio,wil",na:"de,ed,leo,lor,mo,myr,ramo,re,shau,shaw,shee,ver",le:"ade,camil,caro,ceci,ga,gay,lucil,mab,myrt,nicho,nico",en:"carm,dore,ell,gretch,gw,hel,kar,kirst,krist,laur,maure",ra:"aud,barb,deb,elvi,javie,lau,may,my,pet,ve",ma:"al,em,er,fati,ir,kari,nai,nor,wil",el:"eth,isab,laur,mab,marib,muri,racha,rach,raqu",ta:"alber,al,chris,ek,kris,mandakran,mar,rober",ey:"audr,brittn,courtn,linds,stac,trac,whitn",ri:"je,kanyakuma,ka,ker,sha,she,ter",ne:"corin,daph,ja,laver,lyn,simo,yvon",th:"be,edi,elisabe,elizabe,judi,meredi,ru",ah:"aish,beul,debor,hann,le,rebek,sar",is:"delor,dor,jan,lo,mav,phyll",da:"a,fre,frie,hil,matil,priyamva",ce:"canda,constan,floren,gra,joy",es:"agn,delor,dolor,franc,merced",er:"amb,est,esth,heath,jennif",et:"bridg,harri,jan,margar,margr",ca:"bian,blan,francis,rebec",ja:"an,khadi,mari,son",sa:"el,ro,tere,there",ee:"aim,d,desir,ren",va:"a,el,e,i",on:"alis,man,shann,shar",an:"meag,meg,megh,sus"});for(let C=0,V;C<A.length;C++)V=A[C],V.match(/[^ea]y$/)&&A.push(V.replace(/y$/,"i")),V.match(/ll/)&&A.push(V.replace(/ll/,"l")),V.match(/nn/)&&A.push(V.replace(/nn/,"n")),V.match(/ah/)&&A.push(V.replace(/ah/,"a")),V.match(/t$/)&&A.push(V.replace(/t$/,"tte")),V.match(/ey$/)&&A.push(V.replace(/ey$/,"y")),V.match(/ie$/)&&A.push(V.replace(/ie$/,"y")),V.match(/ne$/)&&A.push(V.replace(/ne$/,"na")),V.match(/ss/)&&A.push(V.replace(/ss/,"s")),V.match(/rr/)&&A.push(V.replace(/rr/,"r"));A=A.concat(["amy","becky","betty","beverly","cathy","dolly","dorothy","hilary","hillary","kimberly","rosemary","sally","shelly","trudy","tammy","wendy","ruby","susi"]),j.exports=A},{"../fns":7}],28:[function(P,j){"use strict";let z=P("./male"),N=P("./female"),A=P("./ambiguous");const _={};for(let C=0;C<z.length;C++)_[z[C]]="MaleName";for(let C=0;C<N.length;C++)_[N[C]]="FemaleName";for(let C=0;C<A.length;C+=1)_[A[C]]="FirstName";j.exports=_},{"./ambiguous":26,"./female":27,"./male":30}],29:[function(P,j){j.exports=["lee","li","zhang","wang","nguyen","garcia","gonzalez","hernandez","smirnov","muller","wong","cheung","liu","lau","chen","chan","yang","yeung","huang","zhao","chiu","wu","zhou","chow","xu","tsui","zhu","hu","guo","gao","kwok","luo","devi","singh","kumar","kaur","sato","suzuki","takahashi","tanaka","watanabe","ito","yamamoto","nakamura","kobayashi","kato","yoshida","yamada","sasaki","yamaguchi","saito","matsumoto","inoue","kimura","hayashi","shimizu","yamazaki","ikeda","hashimoto","yamashita","ishikawa","nakajima","maeda","fujita","ogawa","harris","thompson","martinez","robinson","rodriguez","walker","wright","lopez","carter","perez","roberts","turner","phillips","parker","evans","edwards","collins","sanchez","morris","rogers","bailey","rivera","cooper","richardson","cox","torres","peterson","ramirez","brooks","sanders","bennett","barnes","henderson","coleman","jenkins","perry","powell","patterson","hughes","flores","simmons","foster","bryant","hayes","smith","jones","williams","miller","taylor","wilson","davis","clark","moore","anderson","lewis","jackson","adams","tryniski","campbell","gruber","huber","wagner","pichler","steiner","mammadov","aliyev","hasanov","ivanou","ivanov","kazlov","peeters","janssens","dimitrov","horvat","neilson","jensen","hansen","pedersen","andersen","christensen","larsen","vassiljev","petrov","kuznetsov","mihhailov","pavlov","semjonov","andrejev","aleksejev","johansson","nyman","lindholm","karlsson","andersson","dubois","durand","leroy","moreau","lefebvre","lefevre","roux","fournier","mercier","schmidt","schneider","fischer","meyer","weber","schulz","becker","hoffmann","kovacs","szabo","toth","nagy","byrne","murray","sullivan","rossi","russo","esposito","ricci","marino","klein","nowak","silva","santos","fernandez","ruiz","jimenez","alvarez","moreno","mu\xF1oz","alonso","gutierrez","romero","navarro","dominguez","gil","vazquez","serrano","ramos","blanco","sanz","castro","suarez","ortega","rubio","molina","delgado","morales","ortiz","marin","iglesias","boyko","davies","clarke","johnson","oliveira","sosa","rojas","munoz","diaz","gomez","xiao","tian","bahk","pahk","chung","jung","joung","chong","cheong","choung","choi","che","choy","chwe","yeun","yun","jhang","chang","cheon","kwon","soung","bhang","bahng","pahng","phang","kahn","tran","pham","huynh","hoang","phan","patel","mozart","bach","beethoven","nixon","vivaldi","obama","reagan","lenin","stalin","hitler","mussolini","kennedy","lincoln","gandhi","thatcher","orwell","darwin","einstein","picasso","edison","roosevelt","tolstoy","hemingway","hitchcock","messi","beckham","cohen"]},{}],30:[function(P,j){"use strict";const z=P("../fns");let N=["abu","adolfo","anthony","arthur","billy","bobby","bob","buddy","bradford","bret","caleb","clifford","craig","derek","doug","dwight","eli","elliot","enrique","felipe","felix","francisco","frank","george","glenn","greg","gregg","hans","hugh","ira","isaac","kermit","leo","levi","lorenzo","percy","philip","phillip","regis","rex","ricky","shaun","shaquille","shawn","steve","timothy","ty","wilbur","williams","woodrow","wolfgang","youssef","mahmoud","mustafa","hamza","tareq","ali","beshoi","mark","moe","habib","moussa","adama","osama","abdoulaye","modibo","mustapha","aziz","mateo","santino","davi","jacob","vicente","alonso","maximiliano","jose","jeronimo","joshua","ajani","amir","arnav","suraj","bruno","yousouf","wei","hao","yi","lei","aarav","reyansh","arjun","abulfazl","reza","kathem","ori","yosef","itai","moshe","ichika","itsuki","tatsuki","asahi","haruki","tomoharu","yuuma","taichi","saqib","abubakr","ergi","marc","eric","enzo","pol","alex","marti","jakob","paul","leevi","aputsiaq","inunnguaq","inuk","francesco","andrea","mattia","matteo","tommaso","nikola","ilija","marko","luka","antoni","jakub","franciszek","filip","stanislaw","mikolaj","yusuf","berat","emir","ahmet","mehmet","leroy","roy","troy","floyd","lloyd","carl","earl","karl","raul","saul","earnest","ernest","forrest","arnold","harold","andrew","mathew","matthew","elliott","matt","scott","marty","monty","scotty","clay","jay","murray","monte","pete","elwood","jarrod","claude","clyde","wade","alfredo","reynaldo","wilfredo","clark","kirk","chase","jesse","cedric","dominic","josh","rocky","rodolfo","roosevelt","roscoe","ross","jeff","jeremy","jerome","jess","toby","todd","tom","tony","darryl","daryl","dave","joe","john","jorge","malcolm","marco","max","alfonso","alonzo","guillermo","gustavo","yassin","hussein","benjamin","martin","joaquin","hossein","colin","franklin","marlin","darwin","edwin","erwin","darin","darrin","efrain","quentin"];N=z.uncompress_suffixes(N,{rence:"cla,lau,law,te,ter",lbert:"a,de,e,gi,wi",berto:"al,gil,hum,ro",ustin:"ag,j,a,d",rick:"e,frede,rode,der,fred,kend,pat,",ardo:"bern,leon,ricc,edu,ger,ric",lvin:"e,ke,me,a,ca",nnie:"do,lo,ro,be,joh",bert:",her,hu,nor,ro",than:"e,na,johna,jona",ando:"arm,fern,orl,rol",land:"cleve,gar,le,ro",arry:"b,g,h,l",lton:"a,car,e,mi",ian:"sebast,j,,maximil,krist,adr,br,christ,dam,fab,jul",ton:"an,clin,quin,bur,clay,clif,pres,wins",ter:"car,pe,ches,les,sylves,dex,wal",ard:"bern,edw,ger,how,leon,rich,will",ell:"darn,darr,low,mitch,russ,terr,wend",son:"jack,ma,harri,ja,nel,ty,wil",aan:"ish,arm,viv,ay,vih,nom",ron:"a,aa,by,came,my,",lan:"mi,a,al,dy,har,no",man:"abdulrah,us,her,nor,sher,ro",mon:"ra,szy,da,si,solo",uel:"mig,sam,eman,emman,man",don:"bran,,el,gor,shel",med:"moha,muha,ah,moham,muham",ald:"don,regin,ron,ger,jer",vin:"er,ir,mar,de,ke",rey:"ca,co,geoff,jeff",ett:"br,ever,garr,emm",ael:"raf,ism,mich,raph",mmy:"ji,sa,ti,to",las:"nico,dal,doug,nicho",red:"alf,f,wilf,ja",nny:"be,da,joh,ke",ius:"cornel,dar,demetr,jul",ley:"brad,har,stan,wes",mar:"o,ou,am,la",iel:"gabr,dan,ar,nathan",ane:"souleym,d,du,sh",ent:"br,k,tr,vinc",an:"hass,ju,log,ary,roh,has,eit,yonat,ro,zor,drag,dej,stef,iv,emirh,ev,brend,d,jord,bry,de,esteb,ry,se,st,steph",er:"ik,javi,alexand,oliv,aleksand,om,christoph,kristoph,luth,elm,grov,hom,jasp,rodg,rog,spenc,tyl,xavi",en:"jayd,jad,aid,dev,eym,b,reub,rub,darr,lor,warr,all,dami,gl,k,ow,steph,stev",ie:"j,jimm,samm,tomm,bill,charl,will,ern,arch,edd,frank,fredd,lou,regg,robb",is:"alex,lu,lou,math,chr,curt,den,denn,ell,franc,lew,morr,ot,trav,will",el:"abd,ang,no,jo,ro,ab,darr,fid,lion,marc,mich,russ",ry:"jer,per,ter,co,grego,ro,ga,zacha,hen,jeffe,jeff",ce:"lan,terran,van,bru,bry,hora,mauri,roy,walla",ne:"deway,dway,way,antoi,blai,jermai,euge,ge,tyro",to:"mina,yuu,haru,haruhi,haya,beni,ernes,ot",or:"heit,vict,ig,hect,juni,salvad,tayl,trev",as:"mati,tom,luc,thom,luk,tobi,jon,eli",io:"anton,emil,jul,rogel,gregor,ignac,mar,serg",le:"gabrie,doy,ky,ly,da,mer,orvil",al:"bil,,h,jam,miche,ne,rand",dy:"fred,ted,an,bra,co,gra,ru",ad:"muhamm,mohamm,moham,mur,br,ch,conr",ey:"dew,harv,jo,mick,rick,rodn,sidn",am:"li,willi,no,ad,abrah,grah,s",ah:"abdall,no,elij,jeremi,abdull,mic",on:"bry,j,jonath,le,marl,vern",il:"ne,nikh,cec,em,ph,virg",im:"j,t,ibrah,kar,hal,sel",go:"santia,thia,die,rodri,domin,hu",ar:"ces,hyd,aleksand,pet,edg,osc",os:"kiroll,carl,mil,am,marc,sant",ro:"ped,alejand,alessand,alva,artu,rami",nd:"arma,edmu,desmo,edmo,raymo",ck:"ja,chu,domini,ma,ni",ta:"hina,haru,sou,ara,kana",ou:"l,mamad,mahamad,sek,ry",ph:"ral,randol,rudol,jose,joes",ik:"er,adv,mal,min,sal",rt:"cu,ku,ba,stewa,stua",us:"mathe,jes,marc,ruf",lo:"ange,pab,abdul,nii",es:"jam,andr,charl,mos",id:"rach,dav,zah,shah",nt:"brya,cli,gra,lamo",re:"and,pier,salvato,theodo",ng:"irvi,sterli,fe,yo",ed:"khal,,n,t",ke:"bla,ja,lu,mi",th:"hea,kei,kenne,se",ll:"carro,kenda,marsha,randa",di:"fa,meh,mah,jor"}),j.exports=N},{"../fns":7}],31:[function(P,j,$){$.male=["messiaen","saddam hussain","virgin mary","van gogh","mitt romney","barack obama","kanye west","mubarek","lebron james","emeril lagasse","rush limbaugh","carson palmer","ray romano","ronaldinho","valentino rossi","rod stewart","kiefer sutherland","denzel washington","dick wolf","tiger woods","adolf hitler","hulk hogan","ashton kutcher","kobe bryant","cardinal wolsey","slobodan milosevic"],$.female=["jk rowling","oprah winfrey","reese witherspoon","tyra banks","halle berry","paris hilton","scarlett johansson"]},{}],32:[function(P,j){j.exports=["lord","lady","king","queen","prince","princess","dutchess","president","excellency","professor","chancellor","father","pastor","brother","sister","doctor","captain","commander","general","lieutenant","reverend","rabbi","ayatullah","councillor","secretary","sultan","mayor","congressman","congresswoman"]},{}],33:[function(P,j){"use strict";let N=["denar","dobra","forint","kwanza","kyat","lempira","pound sterling","riel","yen","zloty","dollar","cent","penny","dime","dinar","euro","lira","pound","pence","peso","baht","sterling","rouble","shekel","sheqel","yuan","franc","rupee","shilling","krona","dirham","bitcoin"];const A={yen:"yen",baht:"baht",riel:"riel",penny:"pennies"};let _=N.length;for(let C=0;C<_;C++)A[N[C]]?N.push(A[N[C]]):N.push(N[C]+"s");j.exports=["usd","cad","aud","gbp","krw","inr","hkd","dkk","cny","xaf","xof","eur","jpy","\u20AC","$","\xA5","\xA3","\u043B\u0432","\u20A1","kn","kr","\xA2","Ft","Rp","\uFDFC","\u20AD","\u0434\u0435\u043D","\u20A8","z\u0142","lei","\u0440\u0443\u0431","\u0E3F"].concat(N)},{}],34:[function(P,j){j.exports={cardinal:{ones:{zero:0,one:1,two:2,three:3,four:4,five:5,six:6,seven:7,eight:8,nine:9},teens:{ten:10,eleven:11,twelve:12,thirteen:13,fourteen:14,fifteen:15,sixteen:16,seventeen:17,eighteen:18,nineteen:19},tens:{twenty:20,thirty:30,forty:40,fifty:50,sixty:60,seventy:70,eighty:80,ninety:90},multiples:{hundred:100,thousand:1000,grand:1000,million:1000000,billion:1000000000,trillion:1000000000000,quadrillion:1000000000000000,quintillion:1000000000000000000,sextillion:1e+21,septillion:1e+24}},ordinal:{ones:{zeroth:0,first:1,second:2,third:3,fourth:4,fifth:5,sixth:6,seventh:7,eighth:8,ninth:9},teens:{tenth:10,eleventh:11,twelfth:12,thirteenth:13,fourteenth:14,fifteenth:15,sixteenth:16,seventeenth:17,eighteenth:18,nineteenth:19},tens:{twentieth:20,thirtieth:30,fourtieth:40,fiftieth:50,sixtieth:60,seventieth:70,eightieth:80,ninetieth:90},multiples:{hundredth:100,thousandth:1000,millionth:1000000,billionth:1000000000,trillionth:1000000000000,quadrillionth:1000000000000000,quintillionth:1000000000000000000,sextillionth:1e+21,septillionth:1e+24}},prefixes:{yotta:1,zetta:1,exa:1,peta:1,tera:1,giga:1,mega:1,kilo:1,hecto:1,deka:1,deci:1,centi:1,milli:1,micro:1,nano:1,pico:1,femto:1,atto:1,zepto:1,yocto:1,square:1,cubic:1,quartic:1}}},{}],35:[function(P,j){"use strict";const z=P("./numbers");let N={},A={};Object.keys(z.ordinal).forEach((_)=>{let C=Object.keys(z.ordinal[_]),V=Object.keys(z.cardinal[_]);for(let E=0;E<C.length;E++)N[V[E]]=C[E],A[C[E]]=V[E]}),j.exports={toOrdinal:N,toCardinal:A}},{"./numbers":34}],36:[function(P,j){"use strict";const z={Temperature:{"\xB0c":"Celsius","\xB0f":"Fahrenheit",k:"Kelvin","\xB0re":"Reaumur","\xB0n":"Newton","\xB0ra":"Rankine"},Volume:{"m\xB3":"cubic meter",m3:"cubic meter","dm\xB3":"cubic decimeter",dm3:"cubic decimeter","cm\xB3":"cubic centimeter",cm3:"cubic centimeter",l:"liter",dl:"deciliter",cl:"centiliter",ml:"milliliter","in\xB3":"cubic inch",in3:"cubic inch","ft\xB3":"cubic foot",ft3:"cubic foot","yd\xB3":"cubic yard",yd3:"cubic yard",gal:"gallon",bbl:"petroleum barrel",pt:"pint",qt:"quart",tbl:"tablespoon",tsp:"teaspoon",tbsp:"tablespoon",cup:"cup","fl oz":"fluid ounce"},Distance:{km:"kilometer",m:"meter",dm:"decimeter",cm:"centimeter",mm:"millimeter",mi:"mile",ft:"foot",yd:"yard"},Weight:{t:"tonne",kg:"kilogram",hg:"hectogram",g:"gram",dg:"decigram",cg:"centigram",mg:"milligram",µg:"microgram",carat:"carat",grain:"grain",oz:"ounce",lb:"pound",ton:"tonne"},Area:{"km\xB2":"square kilometer",km2:"square kilometer","m\xB2":"square meter",m2:"square meter","dm\xB2":"square decimeter",dm2:"square decimeter","cm\xB2":"square centimeter",cm2:"square centimeter","mm\xB2":"square millimeter",mm2:"square millimeter",ha:"hectare","mile\xB2":"square mile",mile2:"square mile","in\xB2":"square inch",in2:"square inch","yd\xB2":"square yard",yd2:"square yard","ft\xB2":"square foot","sq ft":"square feet",ft2:"square foot",acre:"acre"},Frequency:{hz:"hertz"},Speed:{"km/h":"kilometer per hour",kmph:"kilometer per hour",mps:"meter per second","m/s":"meter per second",mph:"mile per hour","mi/h":"mile per hour",knot:"knot"},Data:{b:"byte",kb:"kilobyte",mb:"megabyte",gb:"gigabyte",tb:"terabyte",pt:"petabyte",eb:"exabyte",zb:"zettabyte",yb:"yottabyte"},Energy:{j:"joule",pa:"pascal",w:"watt",n:"newton",wb:"weber",h:"henry",c:"coulomb",v:"volt",f:"farad",s:"siemens",o:"ohm",lx:"lux",lm:"lumen"},Time:{year:"year",week:"week",day:"day",h:"hour",min:"minute",s:"second",ms:"millisecond",µs:"microsecond",nanosecond:"nanosecond",picosecond:"picosecond",femtosecond:"femtosecond",attosecond:"attosecond"}};let N={};Object.keys(z).forEach((A)=>{Object.keys(z[A]).forEach((_)=>{1<_.length&&(N[_]=!0);let C=z[A][_];N[C]=!0,N[C+"s"]=!0})}),N=Object.keys(N),j.exports={words:N,units:z}},{}],37:[function(P,j){"use strict";const z=P("./participles");let N={take:{PerfectTense:"have taken",pluPerfectTense:"had taken",FuturePerfect:"will have taken"},can:{Gerund:"",PresentTense:"can",PastTense:"could",FutureTense:"can",PerfectTense:"could",pluPerfectTense:"could",FuturePerfect:"can",Actor:""},free:{Gerund:"freeing",Actor:""},arise:{PastTense:"arose",Participle:"arisen"},babysit:{PastTense:"babysat",Actor:"babysitter"},be:{PastTense:"was",Participle:"been",PresentTense:"is",Actor:"",Gerund:"am"},is:{PastTense:"was",PresentTense:"is",Actor:"",Gerund:"being"},beat:{Gerund:"beating",Actor:"beater",Participle:"beaten"},begin:{Gerund:"beginning",PastTense:"began"},ban:{PastTense:"banned",Gerund:"banning",Actor:""},bet:{Actor:"better"},bite:{Gerund:"biting",PastTense:"bit"},bleed:{PastTense:"bled"},breed:{PastTense:"bred"},bring:{PastTense:"brought"},broadcast:{PastTense:"broadcast"},build:{PastTense:"built"},buy:{PastTense:"bought"},choose:{Gerund:"choosing",PastTense:"chose"},cost:{PastTense:"cost"},deal:{PastTense:"dealt"},die:{PastTense:"died",Gerund:"dying"},dig:{Gerund:"digging",PastTense:"dug"},draw:{PastTense:"drew"},drink:{PastTense:"drank",Participle:"drunk"},drive:{Gerund:"driving",PastTense:"drove"},eat:{Gerund:"eating",PastTense:"ate",Actor:"eater",Participle:"eaten"},fall:{PastTense:"fell"},feed:{PastTense:"fed"},feel:{PastTense:"felt",Actor:"feeler"},fight:{PastTense:"fought"},find:{PastTense:"found"},fly:{PastTense:"flew",Participle:"flown"},blow:{PastTense:"blew",Participle:"blown"},forbid:{PastTense:"forbade"},forget:{Gerund:"forgeting",PastTense:"forgot"},forgive:{Gerund:"forgiving",PastTense:"forgave"},freeze:{Gerund:"freezing",PastTense:"froze"},get:{PastTense:"got"},give:{Gerund:"giving",PastTense:"gave"},go:{PastTense:"went",PresentTense:"goes"},hang:{PastTense:"hung"},have:{Gerund:"having",PastTense:"had",PresentTense:"has"},hear:{PastTense:"heard"},hide:{PastTense:"hid"},hold:{PastTense:"held"},hurt:{PastTense:"hurt"},lay:{PastTense:"laid"},lead:{PastTense:"led"},leave:{PastTense:"left"},lie:{Gerund:"lying",PastTense:"lay"},light:{PastTense:"lit"},lose:{Gerund:"losing",PastTense:"lost"},make:{PastTense:"made"},mean:{PastTense:"meant"},meet:{Gerund:"meeting",PastTense:"met",Actor:"meeter"},pay:{PastTense:"paid"},read:{PastTense:"read"},ring:{PastTense:"rang"},rise:{PastTense:"rose",Gerund:"rising",pluPerfectTense:"had risen",FuturePerfect:"will have risen"},run:{Gerund:"running",PastTense:"ran"},say:{PastTense:"said"},see:{PastTense:"saw"},sell:{PastTense:"sold"},shine:{PastTense:"shone"},shoot:{PastTense:"shot"},show:{PastTense:"showed"},sing:{PastTense:"sang",Participle:"sung"},sink:{PastTense:"sank",pluPerfectTense:"had sunk"},sit:{PastTense:"sat"},slide:{PastTense:"slid"},speak:{PastTense:"spoke",PerfectTense:"have spoken",pluPerfectTense:"had spoken",FuturePerfect:"will have spoken"},spin:{Gerund:"spinning",PastTense:"spun"},stand:{PastTense:"stood"},steal:{PastTense:"stole",Actor:"stealer"},stick:{PastTense:"stuck"},sting:{PastTense:"stung"},stream:{Actor:"streamer"},strike:{Gerund:"striking",PastTense:"struck"},swear:{PastTense:"swore"},swim:{PastTense:"swam"},swing:{PastTense:"swung"},teach:{PastTense:"taught",PresentTense:"teaches"},tear:{PastTense:"tore"},tell:{PastTense:"told"},think:{PastTense:"thought"},understand:{PastTense:"understood"},wake:{PastTense:"woke"},wear:{PastTense:"wore"},win:{Gerund:"winning",PastTense:"won"},withdraw:{PastTense:"withdrew"},write:{Gerund:"writing",PastTense:"wrote",Participle:"written"},tie:{Gerund:"tying",PastTense:"tied"},ski:{PastTense:"skiied"},boil:{Actor:"boiler"},miss:{PresentTense:"miss"},act:{Actor:"actor"},compete:{Gerund:"competing",PastTense:"competed",Actor:"competitor"},being:{Gerund:"are",PastTense:"were",PresentTense:"are"},imply:{PastTense:"implied",PresentTense:"implies"},ice:{Gerund:"icing",PastTense:"iced"},develop:{PastTense:"developed",Actor:"developer",Gerund:"developing"},wait:{Gerund:"waiting",PastTense:"waited",Actor:"waiter"},aim:{Actor:"aimer"},spill:{PastTense:"spilt"},drop:{Gerund:"dropping",PastTense:"dropped"},log:{Gerund:"logging",PastTense:"logged"},rub:{Gerund:"rubbing",PastTense:"rubbed"},smash:{PresentTense:"smashes"},suit:{Gerund:"suiting",PastTense:"suited",Actor:"suiter"}};[["break",{PastTense:"broke"}],["catch",{PastTense:"caught"}],["do",{PastTense:"did",PresentTense:"does"}],["bind",{PastTense:"bound"}],["spread",{PastTense:"spread"}]].forEach((_)=>{N[_[0]]=_[1]}),Object.keys(z).forEach((_)=>{N[_]?N[_].Participle=z[_]:N[_]={Participle:z[_]}}),j.exports=N},{"./participles":38}],38:[function(P,j){j.exports={become:"become",begin:"begun",bend:"bent",bet:"bet",bite:"bitten",bleed:"bled",brake:"broken",bring:"brought",build:"built",burn:"burned",burst:"burst",buy:"bought",choose:"chosen",cling:"clung",come:"come",creep:"crept",cut:"cut",deal:"dealt",dig:"dug",dive:"dived",draw:"drawn",dream:"dreamt",drive:"driven",eat:"eaten",fall:"fallen",feed:"fed",fight:"fought",flee:"fled",fling:"flung",forget:"forgotten",forgive:"forgiven",freeze:"frozen",got:"gotten",give:"given",go:"gone",grow:"grown",hang:"hung",have:"had",hear:"heard",hide:"hidden",hit:"hit",hold:"held",hurt:"hurt",keep:"kept",kneel:"knelt",know:"known",lay:"laid",lead:"led",leap:"leapt",leave:"left",lend:"lent",light:"lit",loose:"lost",make:"made",mean:"meant",meet:"met",pay:"paid",prove:"proven",put:"put",quit:"quit",read:"read",ride:"ridden",ring:"rung",rise:"risen",run:"run",say:"said",see:"seen",seek:"sought",sell:"sold",send:"sent",set:"set",sew:"sewn",shake:"shaken",shave:"shaved",shine:"shone",shoot:"shot",shut:"shut",seat:"sat",slay:"slain",sleep:"slept",slide:"slid",sneak:"snuck",speak:"spoken",speed:"sped",spend:"spent",spill:"spilled",spin:"spun",spit:"spat",split:"split",spring:"sprung",stink:"stunk",strew:"strewn",sware:"sworn",sweep:"swept",thrive:"thrived",undergo:"undergone",upset:"upset",weave:"woven",weep:"wept",wind:"wound",wring:"wrung"}},{}],39:[function(P,j){"use strict";const z=P("../fns");j.exports=z.uncompress_suffixes(["abandon","accept","add","added","adopt","aid","appeal","applaud","archive","ask","assign","associate","assume","attempt","avoid","ban","become","bomb","cancel","claim","claw","come","control","convey","cook","copy","cut","deem","defy","deny","describe","design","destroy","die","divide","do","doubt","drag","drift","drop","echo","embody","enjoy","envy","excel","fall","fail","fix","float","flood","focus","fold","get","goes","grab","grasp","grow","happen","head","help","hold fast","hope","include","instruct","invest","join","keep","know","learn","let","lift","link","load","loan","look","make due","mark","melt","minus","multiply","name","need","occur","overcome","overlap","overwhelm","owe","pay","plan","plug","plus","pop","pour","proclaim","put","rank","reason","reckon","relax","repair","reply","reveal","revel","risk","rub","ruin","sail","seek","seem","send","set","shout","sleep","sneak","sort","spoil","stem","step","stop","study","take","talk","thank","took","trade","transfer","trap","travel","tune","undergo","undo","uplift","walk","watch","win","wipe","work","yawn","yield"],{prove:",im,ap,disap",serve:",de,ob,re",ress:"exp,p,prog,st,add,d",lect:"ref,se,neg,col,e",sist:"in,con,per,re,as",tain:"ob,con,main,s,re",mble:"rese,gru,asse,stu",ture:"frac,lec,tor,fea",port:"re,sup,ex,im",ate:"rel,oper,indic,cre,h,activ,estim,particip,d,anticip,evalu",use:",ca,over,ref,acc,am,pa",ive:"l,rece,d,arr,str,surv,thr,rel",are:"prep,c,comp,sh,st,decl,d,sc",ine:"exam,imag,determ,comb,l,decl,underm,def",nce:"annou,da,experie,influe,bou,convi,enha",ain:"tr,rem,expl,dr,compl,g,str",ent:"prev,repres,r,res,rel,inv",age:"dam,mess,man,encour,eng,discour",rge:"su,cha,eme,u,me",ise:"ra,exerc,prom,surpr,pra",ect:"susp,dir,exp,def,rej",ter:"en,mat,cen,ca,al",end:",t,dep,ext,att",est:"t,sugg,prot,requ,r",ock:"kn,l,sh,bl,unl",nge:"cha,excha,ra,challe,plu",ase:"incre,decre,purch,b,ce",ish:"establ,publ,w,fin,distingu",mit:"per,ad,sub,li",ure:"fig,ens,end,meas",der:"won,consi,mur,wan",ave:"s,sh,w,cr",ire:"requ,des,h,ret",tch:"scra,swi,ma,stre",ack:"att,l,p,cr",ion:"ment,quest,funct,envis",ump:"j,l,p,d",ide:"dec,prov,gu,s",ush:"br,cr,p,r",eat:"def,h,tr,ch",ash:"sm,spl,w,fl",rry:"ca,ma,hu,wo",ear:"app,f,b,disapp",er:"answ,rememb,off,suff,cov,discov,diff,gath,deliv,both,empow,with",le:"fi,sett,hand,sca,whist,enab,smi,ming,ru,sprink,pi",st:"exi,foreca,ho,po,twi,tru,li,adju,boa,contra,boo",it:"vis,ed,depos,sp,awa,inhib,cred,benef,prohib,inhab",nt:"wa,hu,pri,poi,cou,accou,confro,warra,pai",ch:"laun,rea,approa,sear,tou,ar,enri,atta",ss:"discu,gue,ki,pa,proce,cro,glo,dismi",ll:"fi,pu,ki,ca,ro,sme,reca,insta",rn:"tu,lea,conce,retu,bu,ea,wa,gove",ce:"redu,produ,divor,noti,for,repla",te:"contribu,uni,tas,vo,no,constitu,ci",rt:"sta,comfo,exe,depa,asse,reso,conve",ck:"su,pi,che,ki,tri,wre",ct:"intera,restri,predi,attra,depi,condu",ke:"sta,li,bra,overta,smo,disli",se:"collap,suppo,clo,rever,po,sen",nd:"mi,surrou,dema,remi,expa,comma",ve:"achie,invol,remo,lo,belie,mo",rm:"fo,perfo,confi,confo,ha",or:"lab,mirr,fav,monit,hon",ue:"arg,contin,val,iss,purs",ow:"all,foll,sn,fl,borr",ay:"pl,st,betr,displ,portr",ze:"recogni,reali,snee,ga,emphasi",ip:"cl,d,gr,sl,sk",re:"igno,sto,interfe,sco",ng:"spri,ba,belo,cli",ew:"scr,vi,revi,ch",gh:"cou,lau,outwei,wei",ly:"app,supp,re,multip",ge:"jud,acknowled,dod,alle",en:"list,happ,threat,strength",ee:"fors,agr,disagr,guarant",et:"budg,regr,mark,targ",rd:"rega,gua,rewa,affo",am:"dre,j,sl,ro",ry:"va,t,c,bu"})},{"../fns":7}],40:[function(P,j,$){"use strict";const z=P("./tags/colors"),N={reset:"\x1B[0m",red:"\x1B[31m",green:"\x1B[32m",yellow:"\x1B[33m",blue:"\x1B[34m",magenta:"\x1B[35m",cyan:"\x1B[36m",black:"\x1B[30m"};"undefined"==typeof j&&Object.keys(N).forEach((A)=>{N[A]=""}),$.ensureString=(A)=>{if("string"==typeof A)return A;return"number"==typeof A?""+A:""},$.ensureObject=(A)=>{return"object"==typeof A?null===A||A instanceof Array?{}:A:{}},$.endsWith=function(A,_){return A&&A.substr(-_.length)===_},$.startsWith=function(A,_){return A&&_&&A.substr(0,_.length)===_},$.titleCase=(A)=>{return A.charAt(0).toUpperCase()+A.substr(1)},$.flatten=function(A){let _=[];return A.forEach(function(C){_=_.concat(C)}),_},$.copy=(A)=>{let _={};return A=$.ensureObject(A),Object.keys(A).forEach((C)=>{_[C]=A[C]}),_},$.extend=(A,_)=>{A=$.copy(A);let C=Object.keys(_);for(let V=0;V<C.length;V++)A[C[V]]=_[C[V]];return A},$.green=function(A){return N.green+A+N.reset},$.red=function(A){return N.red+A+N.reset},$.blue=function(A){return N.blue+A+N.reset},$.magenta=function(A){return N.magenta+A+N.reset},$.cyan=function(A){return N.cyan+A+N.reset},$.yellow=function(A){return N.yellow+A+N.reset},$.black=function(A){return N.black+A+N.reset},$.printTag=function(A){return z[A]?$[z[A]](A):A},$.printTerm=function(A){let _=Object.keys(A.tag);for(let C=0;C<_.length;C++)if(z[_[C]]){let V=z[_[C]];return $[V](A.plaintext)}return N.reset+A.plaintext+N.reset},$.leftPad=function(A,_,C){for(C=C||" ",A=A.toString();A.length<_;)A+=C;return A}},{"./tags/colors":194}],41:[function(P,j){(function(z){"use strict";const N=P("./result/build"),A=P("../package.json"),_=P("./log"),C=function(V,E,q){return N(V,E,q)};C.version=A.version,C.lexicon=function(){return P("./data/lexicon")},C.verbose=function(V){_.enable(V)},"undefined"==typeof self?"undefined"==typeof window?"undefined"!=typeof z&&(z.nlp=C):window.nlp=C:self.nlp=C,"function"==typeof d&&d.amd&&d(C),"undefined"!=typeof j&&(j.exports=C)}).call(this,"undefined"==typeof global?"undefined"==typeof self?"undefined"==typeof window?{}:window:self:global)},{"../package.json":1,"./data/lexicon":9,"./log":42,"./result/build":43}],42:[function(P,j){"use strict";const z=P("../fns");let N=!1;j.exports={enable:(A)=>{A===void 0&&(A=!0),N=A},here:(A)=>{(!0===N||N===A)&&console.log("  "+A)},tell:(A,_)=>{(!0===N||N===_)&&("object"==typeof A&&(A=JSON.stringify(A)),A="    "+A,console.log(A))},tagAs:(A,_,C)=>{if(!0===N||"tagger"===N){let V=A.normal||"["+A.silent_term+"]";V=z.yellow(V),V=z.leftPad("'"+V+"'",20),V+="  ->   "+z.printTag(_),V=z.leftPad(V,54),console.log("       "+V+"("+z.cyan(C||"")+")")}}}},{"../fns":40}],43:[function(P,j){"use strict";const z=P("./index"),N=P("./tokenize"),A=P("./paths").Terms,_=P("../term/methods/normalize/normalize").normalize,C=P("../tags"),V=function(D){return D=D||{},Object.keys(D).reduce((O,M)=>{O[M]=D[M];let F=_(M);return M!==F&&(O[F]=D[M]),O},{})},E=function(D){console.log(D),console.log(C)};j.exports=(D,O,M)=>{let F=N(D);O=V(O);let W=F.map((S)=>A.fromString(S,O));M&&E(M);let G=new z(W,O,null,M);return G.list.forEach((S)=>{S.refText=G}),G}},{"../tags":196,"../term/methods/normalize/normalize":203,"./index":44,"./paths":56,"./tokenize":150}],44:[function(P,j){"use strict";class z{constructor(A,_,C,V){this.list=A||[],this.reference=C,this.tagSet=V}get found(){return 0<this.list.length}get length(){return this.list.length}get isA(){return"Text"}get parent(){return this.reference||this}set parent(A){return this.reference=A,this}all(){return this.parent}index(){return this.list.map((A)=>A.index())}data(){return this.list.map((A)=>{return{normal:A.out("normal"),text:A.out("text")}})}debug(A){return out(this,"debug",A)}get whitespace(){return{before:(A)=>{return this.list.forEach((_)=>{_.whitespace.before(A)}),this},after:(A)=>{return this.list.forEach((_)=>{_.whitespace.after(A)}),this}}}}j.exports=z,z=P("./methods/array")(z),z=P("./methods/loops")(z),z=P("./methods/match")(z),z=P("./methods/out")(z),z=P("./methods/sort")(z),z=P("./methods/split")(z),z=P("./methods/tag")(z),z=P("./methods/normalize")(z);const N={acronyms:P("./subset/acronyms"),adjectives:P("./subset/adjectives"),adverbs:P("./subset/adverbs"),clauses:P("./subset/clauses"),contractions:P("./subset/contractions"),dates:P("./subset/dates"),hashTags:P("./subset/hashTags"),nouns:P("./subset/nouns"),organizations:P("./subset/organizations"),people:P("./subset/people"),phoneNumbers:P("./subset/phoneNumbers"),places:P("./subset/places"),questions:P("./subset/sentences/questions"),quotations:P("./subset/quotations"),sentences:P("./subset/sentences"),statements:P("./subset/sentences/statements"),terms:P("./subset/terms"),topics:P("./subset/topics"),urls:P("./subset/urls"),values:P("./subset/values"),verbs:P("./subset/verbs"),ngrams:P("./subset/ngrams"),startGrams:P("./subset/ngrams/startGrams"),endGrams:P("./subset/ngrams/endGrams")};Object.keys(N).forEach((A)=>{z.prototype[A]=function(_,C){let V=N[A],E=V.find(this,_,C);return new N[A](E.list,this.lexicon,this.parent)}})},{"./methods/array":45,"./methods/loops":46,"./methods/match":47,"./methods/normalize":48,"./methods/out":49,"./methods/sort":52,"./methods/split":54,"./methods/tag":55,"./subset/acronyms":57,"./subset/adjectives":59,"./subset/adverbs":67,"./subset/clauses":69,"./subset/contractions":73,"./subset/dates":75,"./subset/hashTags":82,"./subset/ngrams":86,"./subset/ngrams/endGrams":83,"./subset/ngrams/startGrams":87,"./subset/nouns":89,"./subset/organizations":98,"./subset/people":100,"./subset/phoneNumbers":102,"./subset/places":103,"./subset/quotations":105,"./subset/sentences":106,"./subset/sentences/questions":107,"./subset/sentences/statements":110,"./subset/terms":113,"./subset/topics":115,"./subset/urls":116,"./subset/values":117,"./subset/verbs":130}],45:[function(P,j){"use strict";const z=P("../../terms");j.exports=(A)=>{const _={clone:function(){let C=this.list.map((V)=>{return V.clone()});return new A(C)},term:function(C){let V=this.list.map((E)=>{let q=[],D=E.terms[C];return D&&(q=[D]),new z(q,this.lexicon,this.refText,this.refTerms)});return new A(V,this.lexicon,this.parent)},firstTerm:function(){return this.match("^.")},lastTerm:function(){return this.match(".$")},slice:function(C,V){return this.list=this.list.slice(C,V),this},get:function(C){if(!C&&0!==C||!this.list[C])return new A([],this.lexicon,this.parent);let V=this.list[C];return new A([V],this.lexicon,this.parent)},first:function(C){return C||0===C?new A(this.list.slice(0,C),this.lexicon,this.parent):this.get(0)},last:function(C){if(!C&&0!==C)return this.get(this.list.length-1);let V=this.list.length;return new A(this.list.slice(V-C,V),this.lexicon,this.parent)},concat:function(){for(let C=0,V;C<arguments.length;C++)V=arguments[C],"object"==typeof V&&("Text"===V.isA&&V.list&&(this.list=this.list.concat(V.list)),"Terms"===V.isA&&this.list.push(V));return this},flatten:function(){let C=[];if(this.list.forEach((E)=>{C=C.concat(E.terms)}),!C.length)return new A(null,this.lexicon,this.parent);let V=new z(C,this.lexicon,this,null);return new A([V],this.lexicon,this.parent)}};return Object.keys(_).forEach((C)=>{A.prototype[C]=_[C]}),A}},{"../../terms":216}],46:[function(P,j){"use strict";let z=["toTitleCase","toUpperCase","toLowerCase","toCamelCase","hyphenate","dehyphenate","insertBefore","insertAfter","insertAt","replace","replaceWith","delete"];j.exports=(A)=>{return z.forEach((_)=>{A.prototype[_]=function(){let V=arguments;return this.list.forEach((E)=>{E[_].apply(E,V)}),this}}),A}},{}],47:[function(P,j){"use strict";j.exports=(N)=>{const A={match:function(_,C){let V=[];this.list.forEach((q)=>{let D=q.match(_,C);D.list.forEach((O)=>{V.push(O)})});let E=this.parent||this;return new N(V,this.lexicon,E)},not:function(_,C){let V=[];this.list.forEach((q)=>{let D=q.not(_,C);V=V.concat(D.list)});let E=this.parent||this;return new N(V,this.lexicon,E)},if:function(_,C){let V=[];for(let q=0,D;q<this.list.length;q++)D=this.list[q].match(_,C),D.found&&V.push(this.list[q]);let E=this.parent||this;return new N(V,this.lexicon,E)},ifNo:function(_,C){let V=[];for(let q=0,D;q<this.list.length;q++)D=this.list[q].match(_,C),D.found||V.push(this.list[q]);let E=this.parent||this;return new N(V,this.lexicon,E)}};return A.and=A.match,Object.keys(A).forEach((_)=>{N.prototype[_]=A[_]}),N}},{}],48:[function(P,j){"use strict";const z={whitespace:!0,case:!0,numbers:!0,punctuation:!0,unicode:!0,contractions:!0},N={whitespace:(_)=>{return _.terms().list.forEach((C,V)=>{let E=C.terms[0];0<V?E.whitespace.before=" ":0===V&&(E.whitespace.before=""),E.whitespace.after=""}),_},case:(_)=>{return _.list.forEach((C)=>{C.terms.forEach((V,E)=>{0===E||V.tag.Person||V.tag.Place||V.tag.Organization?C.toTitleCase():C.toLowerCase()})}),_},numbers:(_)=>{return _.values().toNumber()},punctuation:(_)=>{return _.list.forEach((C)=>{C.terms[0]._text=C.terms[0]._text.replace(/^¿/,"");for(let E=0,q;E<C.terms.length-1;E++)q=C.terms[E],q._text=q._text.replace(/[:;,]$/,"");let V=C.terms[C.terms.length-1];V._text=V._text.replace(/\.+$/,"."),V._text=V._text.replace(/!+$/,"!"),V._text=V._text.replace(/\?+!?$/,"?")}),_},contractions:(_)=>{return _.contractions().expand()}};j.exports=(_)=>{return _.prototype.normalize=function(C){return C=C||z,Object.keys(C).forEach((V)=>{N[V]&&N[V](this)}),this},_}},{}],49:[function(P,j){"use strict";const z=P("./topk"),N=P("./offset"),A={text:(C)=>{return C.list.reduce((V,E)=>{return V+=E.out("text"),V},"")},normal:(C)=>{return C.list.map((V)=>{let E=V.out("normal"),q=V.last();if(q){let D=q.endPunctuation();("."===D||"!"===D||"?"===D)&&(E+=D)}return E}).join(" ")},root:(C)=>{return C.list.map((V)=>{return V.out("root")}).join(" ")},offsets:(C)=>{return N(C)},grid:(C)=>{return C.list.reduce((V,E)=>{return V+=E.out("grid"),V},"")},color:(C)=>{return C.list.reduce((V,E)=>{return V+=E.out("color"),V},"")},array:(C)=>{return C.list.reduce((V,E)=>{return V.push(E.out("normal")),V},[])},json:(C)=>{return C.list.reduce((V,E)=>{let q=E.terms.map((D)=>{return{text:D.text,normal:D.normal,tags:D.tag}});return V.push(q),V},[])},html:(C)=>{let V=C.list.reduce((E,q)=>{let D=q.terms.reduce((O,M)=>{return O+="\n    "+M.out("html"),O},"");return E+="\n  <span>"+D+"\n  </span>"},"");return"<span> "+V+"\n</span>"},terms:(C)=>{let V=[];return C.list.forEach((E)=>{E.terms.forEach((q)=>{V.push({text:q.text,normal:q.normal,tags:Object.keys(q.tag)})})}),V},debug:(C)=>{return console.log("===="),C.list.forEach((V)=>{console.log("   --"),V.debug()}),C},topk:(C)=>{return z(C)}};A.plaintext=A.text,A.normalized=A.normal,A.colors=A.color,A.tags=A.terms,A.offset=A.offsets,A.frequency=A.topk,A.freq=A.topk,A.arr=A.array;j.exports=(C)=>{return C.prototype.out=function(V){return A[V]?A[V](this):A.text(this)},C.prototype.debug=function(){return A.debug(this)},C}},{"./offset":50,"./topk":51}],50:[function(P,j){"use strict";const z=(A,_)=>{let C=0;for(let V=0;V<A.list.length;V++)for(let E=0,q;E<A.list[V].terms.length;E++){if(q=A.list[V].terms[E],q.uid===_.uid)return C;C+=q.whitespace.before.length+q._text.length+q.whitespace.after.length}return null};j.exports=(A)=>{let _=A.all();return A.list.map((C)=>{return{text:C.out("text"),normal:C.out("normal"),offset:z(_,C.terms[0]),length:C.out("text").length}})}},{}],51:[function(P,j){"use strict";j.exports=function(N,A){let _={};N.list.forEach((V)=>{let E=V.out("root");_[E]=_[E]||0,_[E]+=1});let C=[];return Object.keys(_).forEach((V)=>{C.push({normal:V,count:_[V]})}),C.forEach((V)=>{V.percent=parseFloat((100*(V.count/N.list.length)).toFixed(2))}),C=C.sort((V,E)=>{return V.count>E.count?-1:1}),A&&(C=C.splice(0,A)),C}},{}],52:[function(P,j){"use strict";const z=P("./methods");j.exports=(A)=>{const _={sort:function(C){return C=C||"alphabetical",C=C.toLowerCase(),C&&"alpha"!==C&&"alphabetical"!==C?"chron"===C||"chronological"===C?z.chron(this,A):"length"===C?z.lengthFn(this,A):"freq"===C||"frequency"===C?z.freq(this,A):"wordcount"===C?z.wordCount(this,A):this:z.alpha(this,A)},reverse:function(){return this.list=this.list.reverse(),this},unique:function(){let C={};return this.list=this.list.filter((V)=>{let E=V.out("root");return!C[E]&&(C[E]=!0,!0)}),this}};return Object.keys(_).forEach((C)=>{A.prototype[C]=_[C]}),A}},{"./methods":53}],53:[function(P,j,$){"use strict";const z=function(N){return N=N.sort((A,_)=>{return A.index>_.index?1:A.index===_.index?0:-1}),N.map((A)=>A.ts)};$.alpha=function(N){return N.list.sort((A,_)=>{if(A===_)return 0;if(A.terms[0]&&_.terms[0]){if(A.terms[0].root>_.terms[0].root)return 1;if(A.terms[0].root<_.terms[0].root)return-1}return A.out("root")>_.out("root")?1:-1}),N},$.chron=function(N){let A=N.list.map((_)=>{return{ts:_,index:_.termIndex()}});return N.list=z(A),N},$.lengthFn=function(N){let A=N.list.map((_)=>{return{ts:_,index:_.chars()}});return N.list=z(A).reverse(),N},$.wordCount=function(N){let A=N.list.map((_)=>{return{ts:_,index:_.length}});return N.list=z(A),N},$.freq=function(N){let A={};N.list.forEach((C)=>{let V=C.out("root");A[V]=A[V]||0,A[V]+=1});let _=N.list.map((C)=>{let V=A[C.out("root")]||0;return{ts:C,index:-1*V}});return N.list=z(_),N}},{}],54:[function(P,j){"use strict";j.exports=(N)=>{const A={splitAfter:function(_,C){let V=[];return this.list.forEach((E)=>{E.splitAfter(_,C).forEach((q)=>{V.push(q)})}),this.list=V,this},splitBefore:function(_,C){let V=[];return this.list.forEach((E)=>{E.splitBefore(_,C).forEach((q)=>{V.push(q)})}),this.list=V,this},splitOn:function(_,C){let V=[];return this.list.forEach((E)=>{E.splitOn(_,C).forEach((q)=>{V.push(q)})}),this.list=V,this}};return Object.keys(A).forEach((_)=>{N.prototype[_]=A[_]}),N}},{}],55:[function(P,j){"use strict";j.exports=(N)=>{const A={tag:function(_,C){return this.list.forEach((V)=>{V.tagAs(_,C,this.tagSet)}),this},unTag:function(_,C){return this.list.forEach((V)=>{V.unTag(_,C,this.tagSet)}),this},canBe:function(_){return this.list.forEach((C)=>{C.terms=C.terms.filter((V)=>{return V.canBe(_,this.tagSet)})}),this}};return Object.keys(A).forEach((_)=>{N.prototype[_]=A[_]}),N}},{}],56:[function(P,j){j.exports={fns:P("../fns"),log:P("../log"),data:P("../data"),Terms:P("../terms"),tags:P("../tags")}},{"../data":8,"../fns":40,"../log":42,"../tags":196,"../terms":216}],57:[function(P,j){"use strict";const z=P("../../index");j.exports=class extends z{data(){return this.terms().list.map((A)=>{let _=A.terms[0],C=_.text.toUpperCase().replace(/\./g).split("");return{periods:C.join("."),normal:C.join(""),text:_.text}})}static find(A,_){return A=A.match("#Acronym"),"number"==typeof _&&(A=A.get(_)),A}}},{"../../index":44}],58:[function(P,j){"use strict";const z=P("../../paths").Terms,N=P("./methods");j.exports=class extends z{constructor(_,C,V,E){super(_,C,V,E)}data(){const _=this.out("normal");return{comparative:N.toComparative(_),superlative:N.toSuperlative(_),adverbForm:N.toAdverb(_),nounForm:N.toNoun(_),verbForm:N.toVerb(_),normal:_,text:this.out("text")}}}},{"../../paths":56,"./methods":61}],59:[function(P,j){"use strict";const z=P("../../index"),N=P("./adjective");j.exports=class extends z{data(){return this.list.map((_)=>{return _.data()})}static find(_,C){return _=_.match("#Adjective"),"number"==typeof C&&(_=_.get(C)),_.list=_.list.map((V)=>{return new N(V.terms,V.lexicon,V.refText,V.refTerms)}),_}}},{"../../index":44,"./adjective":58}],60:[function(P,j){"use strict";const z=P("../../../../data"),N={};z.superlatives.forEach((A)=>{N[A]=!0}),z.verbConverts.forEach((A)=>{N[A]=!0}),j.exports=N},{"../../../../data":8}],61:[function(P,j){"use strict";j.exports={toNoun:P("./toNoun"),toSuperlative:P("./toSuperlative"),toComparative:P("./toComparative"),toAdverb:P("./toAdverb"),toVerb:P("./toVerb")}},{"./toAdverb":62,"./toComparative":63,"./toNoun":64,"./toSuperlative":65,"./toVerb":66}],62:[function(P,j){"use strict";j.exports=function(N){const A={idle:"idly","public":"publicly",vague:"vaguely",day:"daily",icy:"icily",single:"singly",female:"womanly",male:"manly",simple:"simply",whole:"wholly",special:"especially",straight:"straight",wrong:"wrong",fast:"fast",hard:"hard",late:"late",early:"early",well:"well",good:"well",little:"little",long:"long",low:"low",best:"best",latter:"latter",bad:"badly"},C=[{reg:/al$/i,repl:"ally"},{reg:/ly$/i,repl:"ly"},{reg:/(.{3})y$/i,repl:"$1ily"},{reg:/que$/i,repl:"quely"},{reg:/ue$/i,repl:"uly"},{reg:/ic$/i,repl:"ically"},{reg:/ble$/i,repl:"bly"},{reg:/l$/i,repl:"ly"}],V=[/airs$/,/ll$/,/ee.$/,/ile$/];if({foreign:1,black:1,modern:1,next:1,difficult:1,degenerate:1,young:1,awake:1,back:1,blue:1,brown:1,orange:1,complex:1,cool:1,dirty:1,done:1,empty:1,fat:1,fertile:1,frozen:1,gold:1,grey:1,gray:1,green:1,medium:1,parallel:1,outdoor:1,unknown:1,undersized:1,used:1,welcome:1,yellow:1,white:1,fixed:1,mixed:1,"super":1,guilty:1,tiny:1,able:1,unable:1,same:1,adult:1}[N])return null;if(A[N])return A[N];if(3>=N.length)return null;for(let E=0;E<V.length;E++)if(N.match(V[E]))return null;for(let E=0;E<C.length;E++)if(N.match(C[E].reg))return N.replace(C[E].reg,C[E].repl);return N+"ly"}},{}],63:[function(P,j){"use strict";const z=P("./convertable"),N={grey:"greyer",gray:"grayer",green:"greener",yellow:"yellower",red:"redder",good:"better",well:"better",bad:"worse",sad:"sadder",big:"bigger"},A={overweight:1,main:1,nearby:1,asleep:1,weekly:1,secret:1,certain:1},_=[{reg:/y$/i,repl:"ier"},{reg:/([aeiou])t$/i,repl:"$1tter"},{reg:/([aeou])de$/i,repl:"$1der"},{reg:/nge$/i,repl:"nger"}],C=[/ght$/,/nge$/,/ough$/,/ain$/,/uel$/,/[au]ll$/,/ow$/,/old$/,/oud$/,/e[ae]p$/],V=[/ary$/,/ous$/];j.exports=function(q){if(A.hasOwnProperty(q))return null;if(N.hasOwnProperty(q))return N[q];for(let D=0;D<_.length;D++)if(q.match(_[D].reg))return q.replace(_[D].reg,_[D].repl);if(z[q]!==void 0)return q.match(/e$/)?q+"r":q+"er";for(let D=0;D<V.length;D++)if(q.match(V[D]))return"more "+q;for(let D=0;D<C.length;D++)if(q.match(C[D]))return q+"er";return"more "+q}},{"./convertable":60}],64:[function(P,j){"use strict";j.exports=function(N){const A={clean:"cleanliness",naivety:"naivety",hurt:"hurt"};if(!N)return"";if(A.hasOwnProperty(N))return A[N];if(N.match(" "))return N;if(N.match(/w$/))return N;const _=[{reg:/y$/,repl:"iness"},{reg:/le$/,repl:"ility"},{reg:/ial$/,repl:"y"},{reg:/al$/,repl:"ality"},{reg:/ting$/,repl:"ting"},{reg:/ring$/,repl:"ring"},{reg:/bing$/,repl:"bingness"},{reg:/sing$/,repl:"se"},{reg:/ing$/,repl:"ment"},{reg:/ess$/,repl:"essness"},{reg:/ous$/,repl:"ousness"}];for(let C=0;C<_.length;C++)if(N.match(_[C].reg))return N.replace(_[C].reg,_[C].repl);return N.match(/s$/)?N:N+"ness"}},{}],65:[function(P,j){"use strict";const z=P("./convertable"),N={nice:"nicest",late:"latest",hard:"hardest",inner:"innermost",outer:"outermost",far:"furthest",worse:"worst",bad:"worst",good:"best",big:"biggest"},A={overweight:1,ready:1},_=[{reg:/y$/i,repl:"iest"},{reg:/([aeiou])t$/i,repl:"$1ttest"},{reg:/([aeou])de$/i,repl:"$1dest"},{reg:/nge$/i,repl:"ngest"}],C=[/ght$/,/nge$/,/ough$/,/ain$/,/uel$/,/[au]ll$/,/ow$/,/oud$/,/...p$/],V=[/ary$/],E=function(D){return D.match(/e$/)?D+"st":D+"est"};j.exports=function(D){if(N.hasOwnProperty(D))return N[D];for(let O=0;O<_.length;O++)if(D.match(_[O].reg))return D.replace(_[O].reg,_[O].repl);if(z.hasOwnProperty(D))return E(D);if(A.hasOwnProperty(D))return"most "+D;for(let O=0;O<V.length;O++)if(D.match(V[O]))return"most "+D;for(let O=0;O<C.length;O++)if(D.match(C[O]))return N.hasOwnProperty(D)?N[D]:E(D);return"most "+D}},{"./convertable":60}],66:[function(P,j){"use strict";const z=P("../../../../data"),N={red:"redden",sad:"sadden",fat:"fatten"},A=z.verbConverts.reduce((C,V)=>{return C[V]=!0,C},{});j.exports=(C)=>{return A[C]?N[C]?N[C]:C.match(/e$/)?C+"n":C+"en":C}},{"../../../../data":8}],67:[function(P,j){"use strict";const z=P("../../index"),N=P("./toAdjective");j.exports=class extends z{data(){return this.terms().list.map((_)=>{let C=_.terms[0];return{adjectiveForm:N(C.normal),normal:C.normal,text:C.text}})}static find(_,C){return _=_.match("#Adverb+"),"number"==typeof C&&(_=_.get(C)),_}}},{"../../index":44,"./toAdjective":68}],68:[function(P,j){"use strict";const z={idly:"idle",sporadically:"sporadic",basically:"basic",grammatically:"grammatical",alphabetically:"alphabetical",economically:"economical",conically:"conical",politically:"political",vertically:"vertical",practically:"practical",theoretically:"theoretical",critically:"critical",fantastically:"fantastic",mystically:"mystical",pornographically:"pornographic",fully:"full",jolly:"jolly",wholly:"whole"},N=[{reg:/bly$/i,repl:"ble"},{reg:/gically$/i,repl:"gical"},{reg:/([rsdh])ically$/i,repl:"$1ical"},{reg:/ically$/i,repl:"ic"},{reg:/uly$/i,repl:"ue"},{reg:/ily$/i,repl:"y"},{reg:/(.{3})ly$/i,repl:"$1"}];j.exports=function(_){if(z.hasOwnProperty(_))return z[_];for(let C=0;C<N.length;C++)if(_.match(N[C].reg))return _.replace(N[C].reg,N[C].repl);return _}},{}],69:[function(P,j){"use strict";const z=P("../../index");j.exports=class extends z{static find(A,_){return A=A.splitAfter("#ClauseEnd"),"number"==typeof _&&(A=A.get(_)),A}}},{"../../index":44}],70:[function(P,j){"use strict";const z=(A,_)=>{_.whitespace.after=A.whitespace.after,A.whitespace.after="",_.whitespace.before="",A.silent_term=A.text,_.silent_term=_.text,_.text="",A.tagAs("Contraction","new-contraction"),_.tagAs("Contraction","new-contraction")};j.exports=function(A){return!1===A.expanded||A.match("#Contraction").found?A:(A.match("(#Noun|#QuestionWord) is").list.forEach((_)=>{z(_.terms[0],_.terms[1]),_.terms[0].text+="'s",_.contracted=!0}),A.match("#PronNoun did").list.forEach((_)=>{z(_.terms[0],_.terms[1]),_.terms[0].text+="'d",_.contracted=!0}),A.match("#QuestionWord (did|do)").list.forEach((_)=>{z(_.terms[0],_.terms[1]),_.terms[0].text+="'d",_.contracted=!0}),A.match("#Noun (could|would)").list.forEach((_)=>{z(_.terms[0],_.terms[1]),_.terms[0].text+="'d",_.contracted=!0}),A.match("(they|we|you) are").list.forEach((_)=>{z(_.terms[0],_.terms[1]),_.terms[0].text+="'re",_.contracted=!0}),A.match("i am").list.forEach((_)=>{z(_.terms[0],_.terms[1]),_.terms[0].text+="'m",_.contracted=!0}),A.match("(#Noun|#QuestionWord) will").list.forEach((_)=>{z(_.terms[0],_.terms[1]),_.terms[0].text+="'ll",_.contracted=!0}),A.match("(they|we|you|i) have").list.forEach((_)=>{z(_.terms[0],_.terms[1]),_.terms[0].text+="'ve",_.contracted=!0}),A.match("(#Copula|#Modal|do) not").list.forEach((_)=>{z(_.terms[0],_.terms[1]),_.terms[0].text+="n't",_.contracted=!0}),A)}},{}],71:[function(P,j){"use strict";const z=P("../../paths").Terms,N=P("./contract"),A=function(C){return!1===C.contracted?C:(C.terms.forEach((V)=>{V.silent_term&&(!V.text&&(V.whitespace.before=" "),V._text=V.silent_term,V.normalize(),V.silent_term=null,V.unTag("Contraction","expanded"))}),C)};j.exports=class extends z{data(){let C=A(this.clone()),V=N(this.clone());return{text:this.out("text"),normal:this.out("normal"),expanded:{normal:C.out("normal"),text:C.out("text")},contracted:{normal:V.out("normal"),text:V.out("text")},isContracted:!!this.contracted}}expand(){return A(this)}contract(){return N(this)}}},{"../../paths":56,"./contract":70}],72:[function(P,j){"use strict";j.exports=(N)=>{let A=N.not("#Contraction"),_=A.match("(#Noun|#QuestionWord) (#Copula|did|do|have|had|could|would|will)");return _.concat(A.match("(they|we|you|i) have")),_.concat(A.match("i am")),_.concat(A.match("(#Copula|#Modal|do) not")),_.list.forEach((C)=>{C.expanded=!0}),_}},{}],73:[function(P,j){"use strict";const z=P("../../index"),N=P("./contraction"),A=P("./findPossible");j.exports=class extends z{data(){return this.list.map((C)=>C.data())}contract(){return this.list.forEach((C)=>C.contract()),this}expand(){return this.list.forEach((C)=>C.expand()),this}contracted(){return this.list=this.list.filter((C)=>{return C.contracted}),this}expanded(){return this.list=this.list.filter((C)=>{return!C.contracted}),this}static find(C,V){let E=C.match("#Contraction #Contraction #Contraction?");E.list=E.list.map((D)=>{let O=new N(D.terms,D.lexicon,D.refText,D.refTerms);return O.contracted=!0,O});let q=A(C);return q.list.forEach((D)=>{let O=new N(D.terms,D.lexicon,D.refText,D.refTerms);O.contracted=!1,E.list.push(O)}),E.sort("chronological"),"number"==typeof V&&(E=E.get(V)),E}}},{"../../index":44,"./contraction":71,"./findPossible":72}],74:[function(P,j){"use strict";const z=P("../../paths").Terms,N=P("./parseDate");j.exports=class extends z{constructor(_,C,V,E){super(_,C,V,E),this.month=this.match("#Month")}data(){return{text:this.out("text"),normal:this.out("normal"),date:N(this)}}}},{"../../paths":56,"./parseDate":78}],75:[function(P,j){"use strict";const z=P("../../index"),N=P("./date"),A=P("./weekday"),_=P("./month");j.exports=class extends z{data(){return this.list.map((V)=>V.data())}toShortForm(){return this.match("#Month").terms().list.forEach((V)=>{let E=V.terms[0];_.toShortForm(E)}),this.match("#WeekDay").terms().list.forEach((V)=>{let E=V.terms[0];A.toShortForm(E)}),this}toLongForm(){return this.match("#Month").terms().list.forEach((V)=>{let E=V.terms[0];_.toLongForm(E)}),this.match("#WeekDay").terms().list.forEach((V)=>{let E=V.terms[0];A.toLongForm(E)}),this}static find(V,E){let q=V.match("#Date+");return"number"==typeof E&&(q=q.get(E)),q.list=q.list.map((D)=>{return new N(D.terms,D.lexicon,D.refText,D.refTerms)}),q}}},{"../../index":44,"./date":74,"./month":77,"./weekday":81}],76:[function(P,j,$){$.longMonths={january:0,february:1,march:2,april:3,may:4,june:5,july:6,august:7,september:8,october:9,november:10,december:11},$.shortMonths={jan:0,feb:1,febr:1,mar:2,apr:3,may:4,jun:5,jul:6,aug:7,sep:8,sept:8,oct:9,nov:10,dec:11}},{}],77:[function(P,j){"use strict";const z=P("./data"),N=z.shortMonths,A=z.longMonths;j.exports={index:function(_){if(_.tag.Month){if(A[_.normal]!==void 0)return A[_.normal];if(void 0!==N[_.normal])return N[_.normal]}return null},toShortForm:function(_){if(void 0!==_.tag.Month&&void 0!==A[_.normal]){let C=Object.keys(N);_.text=C[A[_.normal]]}return _.dirty=!0,_},toLongForm:function(_){if(void 0!==_.tag.Month&&void 0!==N[_.normal]){let C=Object.keys(A);_.text=C[N[_.normal]]}return _.dirty=!0,_}}},{"./data":76}],78:[function(P,j){"use strict";const z=P("./parseTime"),N=P("./weekday"),A=P("./month"),_=(E)=>{return E&&31>E&&0<E},C=(E)=>{return E&&1e3<E&&3e3>E};j.exports=(E)=>{let q={month:null,date:null,weekday:null,year:null,named:null,time:null},D=E.match("(#Holiday|today|tomorrow|yesterday)");if(D.found&&(q.named=D.out("normal")),D=E.match("#Month"),D.found&&(q.month=A.index(D.list[0].terms[0])),D=E.match("#WeekDay"),D.found&&(q.weekday=N.index(D.list[0].terms[0])),D=E.match("#Time"),D.found&&(q.time=z(E),E.not("#Time")),D=E.match("#Month #Value #Year"),D.found){let O=D.values().numbers();_(O[0])&&(q.date=O[0]);let M=parseInt(E.match("#Year").out("normal"),10);C(M)&&(q.year=M)}if(!D.found){if(D=E.match("#Month #Value"),D.found){let O=D.values().numbers(),M=O[0];_(M)&&(q.date=M)}if(D=E.match("#Month #Year"),D.found){let O=parseInt(E.match("#Year").out("normal"),10);C(O)&&(q.year=O)}}if(D=E.match("#Value of #Month"),D.found){let O=D.values().numbers()[0];_(O)&&(q.date=O)}return q}},{"./month":77,"./parseTime":79,"./weekday":81}],79:[function(P,j){"use strict";const z=(_)=>{return _&&0<_&&25>_},N=(_)=>{return _&&0<_&&60>_};j.exports=(_)=>{let C={logic:null,hour:null,minute:null,second:null,timezone:null},V=_.match("(by|before|for|during|at|until|after) #Time").firstTerm();V.found&&(C.logic=V.out("normal"));let E=_.match("#Time");return E.terms().list.forEach((q)=>{let D=q.terms[0],O=D.text.match(/([12]?[0-9]) ?(am|pm)/i);O&&(C.hour=parseInt(O[1],10),"pm"===O[2]&&(C.hour+=12),!z(C.hour)&&(C.hour=null)),O=D.text.match(/([12]?[0-9]):([0-9][0-9]) ?(am|pm)?/i),O&&(C.hour=parseInt(O[1],10),C.minute=parseInt(O[2],10),!N(C.minute)&&(C.minute=null),"pm"===O[3]&&(C.hour+=12),!z(C.hour)&&(C.hour=null))}),C}},{}],80:[function(P,j,$){$.longDays={sunday:0,monday:1,tuesday:2,wednesday:3,thursday:4,friday:5,saturday:6},$.shortDays={sun:0,mon:1,tues:2,wed:3,thurs:4,fri:5,sat:6}},{}],81:[function(P,j){"use strict";const z=P("./data"),N=z.shortDays,A=z.longDays;j.exports={index:function(_){if(_.tag.WeekDay){if(A[_.normal]!==void 0)return A[_.normal];if(void 0!==N[_.normal])return N[_.normal]}return null},toShortForm:function(_){if(_.tag.WeekDay&&void 0!==A[_.normal]){let C=Object.keys(N);_.text=C[A[_.normal]]}return _},toLongForm:function(_){if(_.tag.WeekDay&&void 0!==N[_.normal]){let C=Object.keys(A);_.text=C[N[_.normal]]}return _}}},{"./data":80}],82:[function(P,j){"use strict";const z=P("../../index");j.exports=class extends z{data(){return this.terms().list.map((A)=>{let _=A.terms[0];return{text:_.text}})}static find(A,_){return A=A.match("#HashTag"),"number"==typeof _&&(A=A.get(_)),A}}},{"../../index":44}],83:[function(P,j){"use strict";const z=P("./index"),N=P("./getGrams");class A extends z{static find(_,C,V){let E={size:[1,2,3,4],edge:"end"};V&&(E.size=[V]);let q=N(_,E);return _=new A(q),_.sort(),"number"==typeof C&&(_=_.get(C)),_}}j.exports=A},{"./getGrams":84,"./index":86}],84:[function(P,j){"use strict";const z=P("./gram"),N=function(V,E){let q=V.terms;if(q.length<E)return[];let D=[];for(let O=0,M;O<q.length-E+1;O++)M=new z(q.slice(O,O+E)),D.push(M);return D},A=function(V,E){let q=V.terms;if(q.length<E)return[];let D=[new z(q.slice(0,E))];return D},_=function(V,E){let q=V.terms;if(q.length<E)return[];let D=[new z(q.slice(q.length-E,q.length))];return D};j.exports=function(V,E){E=E||{},E.size=E.size||[1,2,3],"number"==typeof E.size&&(E.size=[E.size]);let q={};E.size.forEach((O)=>{V.list.forEach((M)=>{let F=[];F="start"===E.edge?A(M,O):"end"===E.edge?_(M,O):N(M,O),F.forEach((W)=>{q[W.key]?q[W.key].inc():q[W.key]=W})})});let D=Object.keys(q).map((O)=>q[O]);return D}},{"./gram":85}],85:[function(P,j){"use strict";const z=P("../../paths").Terms;j.exports=class extends z{constructor(A,_,C,V){super(A,_,C,V),this.key=this.out("normal"),this.size=A.length,this.count=1}inc(){this.count+=1}}},{"../../paths":56}],86:[function(P,j){"use strict";const z=P("../../index"),N=P("./getGrams");class A extends z{data(){return this.list.map((_)=>{return{normal:_.out("normal"),count:_.count,size:_.size}})}unigrams(){return this.list=this.list.filter((_)=>1===_.size),this}bigrams(){return this.list=this.list.filter((_)=>2===_.size),this}trigrams(){return this.list=this.list.filter((_)=>3===_.size),this}sort(){return this.list=this.list.sort((_,C)=>{return _.count>C.count?-1:_.count===C.count&&(_.size>C.size||_.key.length>C.key.length)?-1:1}),this}static find(_,C,V){let E={size:[1,2,3,4]};V&&(E.size=[V]);let q=N(_,E);return _=new A(q),_.sort(),"number"==typeof C&&(_=_.get(C)),_}}j.exports=A},{"../../index":44,"./getGrams":84}],87:[function(P,j){"use strict";const z=P("./index"),N=P("./getGrams");class A extends z{static find(_,C,V){let E={size:[1,2,3,4],edge:"start"};V&&(E.size=[V]);let q=N(_,E);return _=new A(q),_.sort(),"number"==typeof C&&(_=_.get(C)),_}}j.exports=A},{"./getGrams":84,"./index":86}],88:[function(P,j){"use strict";const z=P("../../../data").uncountables;j.exports=function(A){if(!A.tag.Noun)return!1;if(A.tag.Plural)return!0;const _=["Pronoun","Place","Value","Person","Month","WeekDay","RelativeDay","Holiday"];for(let C=0;C<_.length;C++)if(A.tag[_[C]])return!1;for(let C=0;C<z.length;C++)if(A.normal===z[C])return!1;return!0}},{"../../../data":8}],89:[function(P,j){"use strict";const z=P("../../index"),N=P("./noun");j.exports=class extends z{isPlural(){return this.list.map((_)=>_.isPlural())}hasPlural(){return this.list.map((_)=>_.hasPlural())}toPlural(){return this.list.forEach((_)=>_.toPlural()),this}toSingular(){return this.list.forEach((_)=>_.toSingular()),this}data(){return this.list.map((_)=>_.data())}static find(_,C){return _=_.clauses(),_=_.match("#Noun+"),_=_.not("#Pronoun"),_=_.not("(#Month|#WeekDay)"),"number"==typeof C&&(_=_.get(C)),_.list=_.list.map((V)=>{return new N(V.terms,V.lexicon,V.refText,V.refTerms)}),_}}},{"../../index":44,"./noun":97}],90:[function(P,j){"use strict";const z=P("../../../data").irregular_plurals,N=P("./methods/data/indicators"),A={i:!1,he:!1,she:!1,we:!0,they:!0},_=["Place","Value","Person","Month","WeekDay","RelativeDay","Holiday"],C=(E)=>{for(let q=0;q<_.length;q++)if(E.tag[_[q]])return!1;return!0};j.exports=function(E){let q=E.normal;if(void 0!==A[q])return A[q];if(!C(E))return!1;const D=q.match(/([a-z]*) (of|in|by|for) [a-z]/);if(D&&D[1]&&(q=D[1]),z.toSingle[q])return!0;if(z.toPlural[q])return!1;for(let O=0;O<N.plural_indicators.length;O++)if(q.match(N.plural_indicators[O]))return!0;for(let O=0;O<N.singular_indicators.length;O++)if(q.match(N.singular_indicators[O]))return!1;return q.match(/s$/)&&!q.match(/ss$/)&&3<q.length}},{"../../../data":8,"./methods/data/indicators":92}],91:[function(P,j){"use strict";const z={hour:"an",heir:"an",heirloom:"an",honest:"an",honour:"an",honor:"an",uber:"an"},N={a:!0,e:!0,f:!0,h:!0,i:!0,l:!0,m:!0,n:!0,o:!0,r:!0,s:!0,x:!0},A=[/^onc?e/i,/^u[bcfhjkqrstn][aeiou]/i,/^eul/i];j.exports=function(C){let V=C.normal;if(z.hasOwnProperty(V))return z[V];let E=V.substr(0,1);if(C.isAcronym()&&N.hasOwnProperty(E))return"an";for(let q=0;q<A.length;q++)if(V.match(A[q]))return"a";return V.match(/^[aeiou]/i)?"an":"a"}},{}],92:[function(P,j){"use strict";const z=[/(^v)ies$/i,/ises$/i,/ives$/i,/(antenn|formul|nebul|vertebr|vit)ae$/i,/(octop|vir|radi|nucle|fung|cact|stimul)i$/i,/(buffal|tomat|tornad)oes$/i,/(analy|ba|diagno|parenthe|progno|synop|the)ses$/i,/(vert|ind|cort)ices$/i,/(matr|append)ices$/i,/(x|ch|ss|sh|s|z|o)es$/i,/men$/i,/news$/i,/.tia$/i,/(^f)ves$/i,/(lr)ves$/i,/(^aeiouy|qu)ies$/i,/(m|l)ice$/i,/(cris|ax|test)es$/i,/(alias|status)es$/i,/ics$/i],N=[/(ax|test)is$/i,/(octop|vir|radi|nucle|fung|cact|stimul)us$/i,/(octop|vir)i$/i,/(rl)f$/i,/(alias|status)$/i,/(bu)s$/i,/(al|ad|at|er|et|ed|ad)o$/i,/(ti)um$/i,/(ti)a$/i,/sis$/i,/(?:(^f)fe|(lr)f)$/i,/hive$/i,/(^aeiouy|qu)y$/i,/(x|ch|ss|sh|z)$/i,/(matr|vert|ind|cort)(ix|ex)$/i,/(m|l)ouse$/i,/(m|l)ice$/i,/(antenn|formul|nebul|vertebr|vit)a$/i,/.sis$/i,/^(?!talis|.*hu)(.*)man$/i];j.exports={singular_indicators:N,plural_indicators:z}},{}],93:[function(P,j){j.exports=[[/(ax|test)is$/i,"$1es"],[/(octop|vir|radi|nucle|fung|cact|stimul)us$/i,"$1i"],[/(octop|vir)i$/i,"$1i"],[/(kn|l|w)ife$/i,"$1ives"],[/^((?:ca|e|ha|(?:our|them|your)?se|she|wo)l|lea|loa|shea|thie)f$/i,"$1ves"],[/^(dwar|handkerchie|hoo|scar|whar)f$/i,"$1ves"],[/(alias|status)$/i,"$1es"],[/(bu)s$/i,"$1ses"],[/(al|ad|at|er|et|ed|ad)o$/i,"$1oes"],[/([ti])um$/i,"$1a"],[/([ti])a$/i,"$1a"],[/sis$/i,"ses"],[/(hive)$/i,"$1s"],[/([^aeiouy]|qu)y$/i,"$1ies"],[/(x|ch|ss|sh|s|z)$/i,"$1es"],[/(matr|vert|ind|cort)(ix|ex)$/i,"$1ices"],[/([m|l])ouse$/i,"$1ice"],[/([m|l])ice$/i,"$1ice"],[/^(ox)$/i,"$1en"],[/^(oxen)$/i,"$1"],[/(quiz)$/i,"$1zes"],[/(antenn|formul|nebul|vertebr|vit)a$/i,"$1ae"],[/(sis)$/i,"ses"],[/^(?!talis|.*hu)(.*)man$/i,"$1men"],[/(.*)/i,"$1s"]].map(function(z){return{reg:z[0],repl:z[1]}})},{}],94:[function(P,j){j.exports=[[/([^v])ies$/i,"$1y"],[/ises$/i,"isis"],[/(kn|[^o]l|w)ives$/i,"$1ife"],[/^((?:ca|e|ha|(?:our|them|your)?se|she|wo)l|lea|loa|shea|thie)ves$/i,"$1f"],[/^(dwar|handkerchie|hoo|scar|whar)ves$/i,"$1f"],[/(antenn|formul|nebul|vertebr|vit)ae$/i,"$1a"],[/(octop|vir|radi|nucle|fung|cact|stimul)(i)$/i,"$1us"],[/(buffal|tomat|tornad)(oes)$/i,"$1o"],[/((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$/i,"$1sis"],[/(vert|ind|cort)(ices)$/i,"$1ex"],[/(matr|append)(ices)$/i,"$1ix"],[/(x|ch|ss|sh|s|z|o)es$/i,"$1"],[/men$/i,"man"],[/(n)ews$/i,"$1ews"],[/([ti])a$/i,"$1um"],[/([^aeiouy]|qu)ies$/i,"$1y"],[/(s)eries$/i,"$1eries"],[/(m)ovies$/i,"$1ovie"],[/([m|l])ice$/i,"$1ouse"],[/(cris|ax|test)es$/i,"$1is"],[/(alias|status)es$/i,"$1"],[/(ss)$/i,"$1"],[/(ics)$/i,"$1"],[/s$/i,""]].map(function(z){return{reg:z[0],repl:z[1]}})},{}],95:[function(P,j){"use strict";const z=P("../../../../data").irregular_plurals.toPlural,N=P("./data/pluralRules"),A=function(_){if(z[_])return z[_];if(_.match(/([a-z]*) (of|in|by|for) [a-z]/)){const C=(_.match(/^([a-z]*) (of|in|by|for) [a-z]/)||[])[1];if(C){const V=A(C);return V+_.replace(C,"")}}for(let C=0;C<N.length;C++)if(_.match(N[C].reg))return _.replace(N[C].reg,N[C].repl);return null};j.exports=A},{"../../../../data":8,"./data/pluralRules":93}],96:[function(P,j){"use strict";const z=P("../../../../data").irregular_plurals.toSingle,N=P("./data/singleRules"),A=function(_){if(z[_])return z[_];if(_.match(/([a-z]*) (of|in|by|for) [a-z]/)){const C=(_.match(/^([a-z]*) (of|in|by|for) [a-z]/)||[])[1];if(C){const V=A(C);return V+_.replace(C,"")}}for(let C=0;C<N.length;C++)if(_.match(N[C].reg))return _.replace(N[C].reg,N[C].repl);return null};j.exports=A},{"../../../../data":8,"./data/singleRules":94}],97:[function(P,j){"use strict";const z=P("../../paths").Terms,N=P("./hasPlural"),A=P("./isPlural"),_=P("./makeArticle"),C=P("./methods/pluralize"),V=P("./methods/singularize");j.exports=class extends z{constructor(q,D,O,M){super(q,D,O,M),this.t=this.terms[0]}article(){let q=this.t;return _(q)}isPlural(){let q=this.t;return A(q)}hasPlural(){let q=this.t;return N(q)}toPlural(){let q=this.t;return N(q)&&!A(q)&&(q.text=C(q.text),q.unTag("Plural","toPlural"),q.tagAs("Singular","toPlural")),this}toSingular(){let q=this.t;return A(q)&&(q.text=V(q.text),q.unTag("Plural","toSingular"),q.tagAs("Singular","toSingular")),this}data(){return{article:this.article(),singular:this.toSingular().out("normal"),plural:this.toPlural().out("normal")}}}},{"../../paths":56,"./hasPlural":88,"./isPlural":90,"./makeArticle":91,"./methods/pluralize":95,"./methods/singularize":96}],98:[function(P,j){"use strict";const z=P("../../index");j.exports=class extends z{data(){return this.list.map((A)=>{return{text:A.out("text"),normal:A.out("normal")}})}static find(A,_){return A=A.splitAfter("#Comma"),A=A.match("#Organization+"),"number"==typeof _&&(A=A.get(_)),A}}},{"../../index":44}],99:[function(P,j){"use strict";const z=P("../../paths").log;j.exports=function(A){return A?A.match(/.(i|ee|[a|e]y|a)$/i)?(z.tell("Female-name suffix"),"Female"):A.match(/[ou]$/i)?(z.tell("Male-name suffix"),"Male"):A.match(/(nn|ll|tt)/i)?(z.tell("Female-name consonant-doubling"),"Female"):null:null}},{"../../paths":56}],100:[function(P,j){"use strict";const z=P("../../index"),N=P("./person");j.exports=class extends z{data(){return this.list.map((_)=>_.data())}pronoun(){return this.list.map((_)=>_.pronoun())}static find(_,C){let V=_.clauses();return V=V.match("#Person+"),"number"==typeof C&&(V=V.get(C)),V.list=V.list.map((E)=>{return new N(E.terms,E.lexicon,E.refText,E.refTerms)}),V}}},{"../../index":44,"./person":101}],101:[function(P,j){"use strict";const z=P("../../paths").Terms,N=P("./guessGender"),A=P("../../paths").log;j.exports=class extends z{data(){return{text:this.out("text"),normal:this.out("normal"),firstName:this.firstName.out("normal"),middleName:this.middleName.out("normal"),lastName:this.lastName.out("normal"),genderGuess:this.guessGender(),pronoun:this.pronoun(),honorifics:this.honorifics.out("array")}}constructor(C,V,E,q){if(super(C,V,E,q),this.firstName=this.match("#FirstName+"),this.middleName=this.match("#Acronym+"),this.honorifics=this.match("#Honorific"),this.lastName=this.match("#LastName+"),!this.firstName.found&&1<this.length){let D=this.not("(#Acronym|#Honorific)");this.firstName=D.first(),this.lastName=D.last()}return this}guessGender(){if(this.honorifics.match("(mr|mister|sr|sir|jr)").found)return A.tell("known male honorific"),"Male";if(this.honorifics.match("(mrs|miss|ms|misses|mme|mlle)").found)return A.tell("known female honorific"),"Female";if(this.firstName.match("#MaleName").found)return A.tell("known male name"),"Male";if(this.firstName.match("#FemaleName").found)return A.tell("known female name"),"Female";let C=this.firstName.out("normal");return N(C)}pronoun(){let C=this.firstName.out("normal"),V=this.guessGender(C);return"Male"===V?"he":"Female"===V?"she":"they"}root(){let C=this.firstName.out("root"),V=this.lastName.out("root");return C&&V?C+" "+V:V||C||this.out("root")}}},{"../../paths":56,"./guessGender":99}],102:[function(P,j){"use strict";const z=P("../../index");j.exports=class extends z{data(){return this.terms().list.map((A)=>{let _=A.terms[0];return{text:_.text}})}static find(A){return A=A.splitAfter("#Comma"),A=A.match("#PhoneNumber+"),"number"==typeof n&&(A=A.get(n)),A}}},{"../../index":44}],103:[function(P,j){"use strict";const z=P("../../index"),N=P("./place");j.exports=class extends z{data(){return this.list.map((_)=>{return{text:_.out("text"),normal:_.out("normal")}})}static find(_,C){return _=_.splitAfter("#Comma"),_=_.match("#Place+"),"number"==typeof C&&(_=_.get(C)),_.list=_.list.map((V)=>{return new N(V.terms,V.lexicon,V.refText,V.refTerms)}),_}}},{"../../index":44,"./place":104}],104:[function(P,j){"use strict";const z=P("../../paths").Terms;class N extends z{constructor(A,_,C,V){super(A,_,C,V),this.city=this.match("#City"),this.country=this.match("#Country")}get isA(){return"Place"}root(){return this.city.out("root")}}j.exports=N},{"../../paths":56}],105:[function(P,j){"use strict";const z=P("../../index");j.exports=class extends z{data(){return this.list.map((A)=>{return{text:A.out(),normal:A.out("normal")}})}static find(A,_){return A=A.match("#Quotation+"),"number"==typeof _&&(A=A.get(_)),A}}},{"../../index":44}],106:[function(P,j){"use strict";const z=P("../../index"),N=P("./sentence");j.exports=class extends z{constructor(_,C,V){super(_,C,V)}data(){return this.list.map((_)=>{return _.data()})}toPastTense(){return this.list=this.list.map((_)=>{return _=_.toPastTense(),new N(_.terms,_.lexicon,_.refText,_.refTerms)}),this}toPresentTense(){return this.list=this.list.map((_)=>{return _=_.toPresentTense(),new N(_.terms,_.lexicon,_.refText,_.refTerms)}),this}toFutureTense(){return this.list=this.list.map((_)=>{return _=_.toFutureTense(),new N(_.terms,_.lexicon,_.refText,_.refTerms)}),this}toNegative(){return this.list=this.list.map((_)=>{return _=_.toNegative(),new N(_.terms,_.lexicon,_.refText,_.refTerms)}),this}toPositive(){return this.list=this.list.map((_)=>{return _=_.toPositive(),new N(_.terms,_.lexicon,_.refText,_.refTerms)}),this}isPassive(){return this.list=this.list.filter((_)=>{return _.isPassive()}),this}prepend(_){return this.list=this.list.map((C)=>{return C.prepend(_)}),this}append(_){return this.list=this.list.map((C)=>{return C.append(_)}),this}toExclamation(){return this.list.forEach((_)=>{_.setPunctuation("!")}),this}toQuestion(){return this.list.forEach((_)=>{_.setPunctuation("?")}),this}toStatement(){return this.list.forEach((_)=>{_.setPunctuation(".")}),this}static find(_,C){return _=_.all(),"number"==typeof C&&(_=_.get(C)),_.list=_.list.map((V)=>{return new N(V.terms,V.lexicon,V.refText,V.refTerms)}),_}}},{"../../index":44,"./sentence":108}],107:[function(P,j){"use strict";const z=P("../index");j.exports=class extends z{static find(A,_){A=A.all(),"number"==typeof _&&(A=A.get(_));let C=A.list.filter((V)=>{return"?"===V.last().endPunctuation()});return new z(C,this.lexicon,this.parent)}}},{"../index":106}],108:[function(P,j){"use strict";const z=P("../../paths").Terms,N=P("./toNegative"),A=P("./toPositive"),_=P("../verbs/verb"),C=P("./smartInsert");j.exports=class extends z{constructor(E,q,D,O){super(E,q,D,O)}data(){return{text:this.out("text"),normal:this.out("normal")}}toSingular(){let E=this.match("#Noun").match("!#Pronoun").firstTerm();return E.things().toSingular(),this}toPlural(){let E=this.match("#Noun").match("!#Pronoun").firstTerm();return E.things().toPlural(),this}mainVerb(){let E=this.match("(#Adverb|#Auxillary|#Verb|#Negative|#Particle)+").if("#Verb");return E.found?(E=E.list[0].terms,new _(E,this.lexicon,this.refText,this.refTerms)):null}toPastTense(){let E=this.mainVerb();if(E){let q=E.out("normal");E.toPastTense();let D=E.out("normal"),O=this.parentTerms.replace(q,D);return O}return this}toPresentTense(){let E=this.mainVerb();if(E){let q=E.out("normal");E.toPresentTense();let D=E.out("normal");return this.parentTerms.replace(q,D)}return this}toFutureTense(){let E=this.mainVerb();if(E){let q=E.out("normal");E.toFutureTense();let D=E.out("normal");return this.parentTerms.replace(q,D)}return this}isNegative(){return 1===this.match("#Negative").list.length}toNegative(){return this.isNegative()?this:N(this)}toPositive(){return this.isNegative()?A(this):this}append(E){return C.append(this,E)}prepend(E){return C.prepend(this,E)}setPunctuation(E){let q=this.terms[this.terms.length-1];q.setPunctuation(E)}getPunctuation(){let E=this.terms[this.terms.length-1];return E.getPunctuation()}isPassive(){return this.match("was #Adverb? #PastTense #Adverb? by").found}}},{"../../paths":56,"../verbs/verb":149,"./smartInsert":109,"./toNegative":111,"./toPositive":112}],109:[function(P,j){"use strict";j.exports={append:(A,_)=>{let C=A.terms[A.terms.length-1],V=C.endPunctuation();V&&C.killPunctuation(),A.insertAt(A.terms.length,_);let E=A.terms[A.terms.length-1];return V&&(E.text+=V),C.whitespace.after&&(E.whitespace.after=C.whitespace.after,C.whitespace.after=""),A},prepend:(A,_)=>{let C=A.terms[0];if(A.insertAt(0,_),C.text.match(/^[A-Z]/)){!1===C.needsTitleCase()&&C.toLowerCase();let V=A.terms[0];V.toTitleCase()}return A}}},{}],110:[function(P,j){"use strict";const z=P("../index");j.exports=class extends z{static find(A,_){A=A.all(),"number"==typeof _&&(A=A.get(_));let C=A.list.filter((V)=>{return"?"!==V.last().endPunctuation()});return new z(C,this.lexicon,this.parent)}}},{"../index":106}],111:[function(P,j){"use strict";const z={everyone:"no one",everybody:"nobody",someone:"no one",somebody:"nobody",always:"never"};j.exports=(A)=>{let _=A.match("(everyone|everybody|someone|somebody|always)").first();if(_.found&&z[_.out("normal")]){let V=_.out("normal");return A=A.match(V).replaceWith(z[V]).list[0],A.parentTerms}let C=A.mainVerb();return C&&C.toNegative(),A}},{}],112:[function(P,j){"use strict";const z={never:"always",nothing:"everything"};j.exports=(A)=>{let _=A.match("(never|nothing)").first();if(_.found){let C=_.out("normal");if(z[C])return A=A.match(C).replaceWith(z[C]).list[0],A.parentTerms}return A.delete("#Negative"),A}},{}],113:[function(P,j){"use strict";const z=P("../../index"),N=P("./term");j.exports=class extends z{data(){return this.list.map((_)=>{return _.data()})}static find(_,C){return _=_.match("."),"number"==typeof C&&(_=_.get(C)),_.list=_.list.map((V)=>{return new N(V.terms,V.lexicon,V.refText,V.refTerms)}),_}}},{"../../index":44,"./term":114}],114:[function(P,j){"use strict";const z=P("../../paths").Terms,N=P("../../paths").tags,A={Auxillary:!0};j.exports=class extends z{constructor(C,V,E,q){super(C,V,E,q),this.t=this.terms[0]}bestTag(){let C=Object.keys(this.t.tag);return C=C.sort(),C=C.sort((V,E)=>{return!A[E]&&N[V]&&N[E]?N[V].parents.length>N[E].parents.length?-1:1:-1}),C[0]}data(){let C=this.t;return{spaceBefore:C.whitespace.before,text:C.text,spaceAfter:C.whitespace.after,normal:C.normal,implicit:C.silent_term,bestTag:this.bestTag(),tags:Object.keys(C.tag)}}}},{"../../paths":56}],115:[function(P,j){"use strict";const z=P("../../index");j.exports=class extends z{data(){return this.list.map((A)=>{return A.data()})}static find(A,_){A=A.clauses();let C=A.people();return C.concat(A.places()),C.concat(A.organizations()),C.sort("chronological"),"number"==typeof _&&(C=C.get(_)),C}}},{"../../index":44}],116:[function(P,j){"use strict";const z=P("../../index");j.exports=class extends z{data(){return this.terms().list.map((A)=>{let _=A.terms[0];return{text:_.text}})}static find(A,_){return A=A.match("#Url"),"number"==typeof _&&(A=A.get(_)),A}}},{"../../index":44}],117:[function(P,j){"use strict";const z=P("../../index"),N=P("./value");class A extends z{data(){return this.list.map((_)=>{return _.data()})}noDates(){return this.not("#Date")}numbers(){return this.list.map((_)=>{return _.number()})}toNumber(){return this.list=this.list.map((_)=>{return _.toNumber()}),this}toTextValue(){return this.list=this.list.map((_)=>{return _.toTextValue()}),this}toCardinal(){return this.list=this.list.map((_)=>{return _.toCardinal()}),this}toOrdinal(){return this.list=this.list.map((_)=>{return _.toOrdinal()}),this}toNiceNumber(){return this.list=this.list.map((_)=>{return _.toNiceNumber()}),this}static find(_,C){return _=_.match("#Value+"),_.splitOn("#Year"),"number"==typeof C&&(_=_.get(C)),_.list=_.list.map((V)=>{return new N(V.terms,V.lexicon,V.refText,V.refTerms)}),_}}A.prototype.clone=function(){let _=this.list.map((C)=>{return C.clone()});return new A(_,this.lexicon)},j.exports=A},{"../../index":44,"./value":129}],118:[function(P,j){"use strict";const z=P("../toNumber");j.exports=function(A){let _=z(A);if(!_&&0!==_)return null;let C=_%100;if(10<C&&20>C)return""+_+"th";const V={0:"th",1:"st",2:"nd",3:"rd"};let E=""+_,q=E.slice(E.length-1,E.length);return E+=V[q]?V[q]:"th",E}},{"../toNumber":124}],119:[function(P,j){j.exports=P("../../paths")},{"../../paths":56}],120:[function(P,j){"use strict";const z=P("../toNumber"),N=P("../toText"),A=P("../../../paths").data.ordinalMap.toOrdinal;j.exports=(C)=>{let V=z(C),E=N(V),q=E[E.length-1];return E[E.length-1]=A[q]||q,E.join(" ")}},{"../../../paths":56,"../toNumber":124,"../toText":128}],121:[function(P,j){"use strict";j.exports=function(N){if(!N&&0!==N)return null;N=""+N;let A=N.split("."),_=A[0],C=1<A.length?"."+A[1]:"",V=/(\d+)(\d{3})/;for(;V.test(_);)_=_.replace(V,"$1,$2");return _+C}},{}],122:[function(P,j){const z=P("../paths"),N=z.data.numbers,A=z.fns,_=A.extend(N.ordinal.ones,N.cardinal.ones),C=A.extend(N.ordinal.teens,N.cardinal.teens),V=A.extend(N.ordinal.tens,N.cardinal.tens),E=A.extend(N.ordinal.multiples,N.cardinal.multiples);j.exports={ones:_,teens:C,tens:V,multiples:E}},{"../paths":119}],123:[function(P,j){"use strict";j.exports=(N)=>{const A=[{reg:/^(minus|negative)[\s\-]/i,mult:-1},{reg:/^(a\s)?half[\s\-](of\s)?/i,mult:0.5}];for(let _=0;_<A.length;_++)if(N.match(A[_].reg))return{amount:A[_].mult,str:N.replace(A[_].reg,"")};return{amount:1,str:N}}},{}],124:[function(P,j){"use strict";const z=P("./parseNumeric"),N=P("./findModifiers"),A=P("./data"),_=P("./validate"),C=P("./parseDecimals"),V=P("../paths").log,E="parseNumber",q={"a couple":2,"a dozen":12,"two dozen":24,zero:0},D=(F)=>{return Object.keys(F).reduce((W,G)=>{return W+=F[G],W},0)},O=(F)=>{for(let W=0;W<F.terms.length;W++)if(!F.terms[W].tag.NumericValue)return!1;return!0};j.exports=function(F){V.here("parseNumber",E);let W=F.out("normal");if(void 0!==q[W])return q[W];if("a"===W||"an"===W)return 1;if(O(F))return z(F.out("normal"));let G=N(W);W=G.str;let S=null,I={},L=0,U=!1,R=W.split(/[ -]/);for(let B=0,Q;B<R.length;B++)if(Q=R[B],Q&&"and"!==Q){if("-"===Q||"negative"===Q){U=!0;continue}if(Q.startsWith("-")&&(U=!0,Q=Q.substr(1)),"point"===Q)return L+=D(I),L+=C(R.slice(B+1,R.length)),L*=G.amount,L;const Y=Q.match(/^([0-9,\. ]+)\/([0-9,\. ]+)$/);if(Y){V.here("fractionMath",E);const K=parseFloat(Y[1].replace(/[, ]/g,"")),Z=parseFloat(Y[2].replace(/[, ]/g,""));Z&&(L+=K/Z||0);continue}if(!_(Q,I))return V.tell("invalid state",E),V.tell(I,E),null;if(Q.match(/^[0-9\.]+$/))I.ones=parseFloat(Q,10);else if(A.ones[Q])I.ones=A.ones[Q];else if(A.teens[Q])I.teens=A.teens[Q];else if(A.tens[Q])I.tens=A.tens[Q];else if(A.multiples[Q]){let K=A.multiples[Q];if(K===S)return V.tell("invalid multiplier",E),null;if(100===K&&R[B+1]){var H=R[B+1];A.multiples[H]&&(K*=A.multiples[H],B+=1)}null==S||K<S?(L+=(D(I)||1)*K,S=K,I={}):(L+=D(I),S=K,L=(L||1)*K,I={})}}return L+=D(I),L*=G.amount,L*=U?-1:1,0===L?null:L}},{"../paths":119,"./data":122,"./findModifiers":123,"./parseDecimals":125,"./parseNumeric":126,"./validate":127}],125:[function(P,j){"use strict";const z=P("./data");j.exports=function(A){let _="0.";for(let C=0,V;C<A.length;C++)if(V=A[C],z.ones[V])_+=z.ones[V];else if(z.teens[V])_+=z.teens[V];else if(z.tens[V])_+=z.tens[V];else if(V.match(/^[0-9]$/))_+=V;else return 0;return parseFloat(_)}},{"./data":122}],126:[function(P,j){"use strict";j.exports=(N)=>{return N=N.replace(/1st$/,"1"),N=N.replace(/2nd$/,"2"),N=N.replace(/3rd$/,"3"),N=N.replace(/([4567890])r?th$/,"$1"),N=N.replace(/^[$€¥£¢]/,""),N=N.replace(/[%$€¥£¢]$/,""),N=N.replace(/,/g,""),N=N.replace(/([0-9])([a-z]{1,2})$/,"$1"),parseFloat(N)}},{}],127:[function(P,j){"use strict";const z=P("./data");j.exports=(A,_)=>{if(z.ones[A]){if(_.ones||_.teens)return!1;}else if(z.teens[A]){if(_.ones||_.teens||_.tens)return!1;}else if(z.tens[A]&&(_.ones||_.teens||_.tens))return!1;return!0}},{"./data":122}],128:[function(P,j){"use strict";const z=function(C){let V=C,E=[];return[[1000000000,"million"],[100000000,"hundred million"],[1000000,"million"],[100000,"hundred thousand"],[1000,"thousand"],[100,"hundred"],[1,"one"]].forEach((D)=>{if(C>D[0]){let O=Math.floor(V/D[0]);V-=O*D[0],O&&E.push({unit:D[1],count:O})}}),E},N=function(C){const V=[["ninety",90],["eighty",80],["seventy",70],["sixty",60],["fifty",50],["forty",40],["thirty",30],["twenty",20]],E=["","one","two","three","four","five","six","seven","eight","nine","ten","eleven","twelve","thirteen","fourteen","fifteen","sixteen","seventeen","eighteen","nineteen"];let q=[];for(let D=0;D<V.length;D++)C>=V[D][1]&&(C-=V[D][1],q.push(V[D][0]));return E[C]&&q.push(E[C]),q},A=(C)=>{const V=["zero","one","two","three","four","five","six","seven","eight","nine"];let E=[],q=(""+C).match(/\.([0-9]+)/);if(!q||!q[0])return E;E.push("point");let D=q[0].split("");for(let O=0;O<D.length;O++)E.push(V[D[O]]);return E};j.exports=function(C){let V=[];0>C&&(V.push("negative"),C=Math.abs(C));let E=z(C);for(let q=0,D;q<E.length;q++)D=E[q].unit,"one"===D&&(D="",1<V.length&&V.push("and")),V=V.concat(N(E[q].count)),V.push(D);return V=V.concat(A(C)),V=V.filter((q)=>q),0===V.length&&(V[0]="zero"),V}},{}],129:[function(P,j){"use strict";const z=P("../../paths"),N=z.Terms,A=P("./toNumber"),_=P("./toText"),C=P("./toNiceNumber"),V=P("./numOrdinal"),E=P("./textOrdinal"),q=(F)=>{let W=F.terms[F.terms.length-1];return!!W&&!0===W.tag.Ordinal},D=(F)=>{for(let W=0;W<F.terms.length;W++)if(F.terms[W].tag.TextValue)return!0;return!1},O=(F)=>{for(let W=0,G;W<F.terms.length;W++)if(G=F.terms[W],G.tag.TextValue||G.tag.NiceNumber||!G.tag.NumericValue)return!1;return!0};class M extends N{constructor(F,W,G,S){super(F,W,G,S),this.val=this.match("#Value+").list[0],this.unit=this.match("#Unit$").list[0]}number(){let F=A(this.val);return F}toNumber(){let F=this.val;if(O(F))return this;if(q(F)){let W=V(F);this.replaceWith(W,"Value")}else{let W=A(F);null!==W&&this.replaceWith(""+W,"Value")}return this}toTextValue(){let F=this.val;if(D(F))return this;if(q(F)){let S=E(F);return this.replaceWith(S,"Value")}let W=""+A(F),G=_(W).join(" ");return this.replaceWith(G,"Value"),this}toCardinal(){let F=this.val;if(!q(F))return this;if(D(F)){let G=""+A(F),S=_(G).join(" ");return this.replaceWith(S,"Value")}let W=""+A(F);return this.replaceWith(W,"Value")}toOrdinal(){let F=this.val;if(q(F))return this;if(D(F)){let W=E(F);this.replaceWith(W,"Value")}else{let W=V(F);this.replaceWith(W,"Value")}return this}toNiceNumber(){let F=A(this),W=C(F);return this.replaceWith(W,"Value"),this}data(){let F=this.clone().toNumber(),W=this.clone().toTextValue(),G={NumericValue:{cardinal:F.toCardinal().out("text"),ordinal:F.toOrdinal().out("text"),nicenumber:this.toNiceNumber().out("text")},TextValue:{cardinal:W.toCardinal().out("text"),ordinal:W.toOrdinal().out("text")},unit:""};return this.unit&&(G.unit=this.unit.out("text")),G.number=this.number(),G}}M.prototype.clone=function(){let F=this.terms.map((W)=>{return W.clone()});return new M(F,this.lexicon,this.refText,this.refTerms)},j.exports=M},{"../../paths":56,"./numOrdinal":118,"./textOrdinal":120,"./toNiceNumber":121,"./toNumber":124,"./toText":128}],130:[function(P,j){"use strict";const z=P("../../index"),N=P("./verb");j.exports=class extends z{constructor(_,C,V){super(_,C,V)}data(){return this.list.map((_)=>{return _.data()})}conjugation(_){return this.list.map((C)=>{return C.conjugation(_)})}conjugate(_){return this.list.map((C)=>{return C.conjugate(_)})}isPlural(){return this.list=this.list.filter((_)=>{return _.isPlural()}),this}isSingular(){return this.list=this.list.filter((_)=>{return!_.isPlural()}),this}isNegative(){return this.list=this.list.filter((_)=>{return _.isNegative()}),this}isPositive(){return this.list=this.list.filter((_)=>{return!_.isNegative()}),this}toNegative(){return this.list=this.list.map((_)=>{return _.toNegative()}),this}toPositive(){return this.list.forEach((_)=>{_.toPositive()}),this}toPastTense(){return this.list.forEach((_)=>{_.toPastTense()}),this}toPresentTense(){return this.list.forEach((_)=>{_.toPresentTense()}),this}toFutureTense(){return this.list.forEach((_)=>{_.toFutureTense()}),this}toInfinitive(){return this.list.forEach((_)=>{_.toInfinitive()}),this}asAdjective(){return this.list.map((_)=>_.asAdjective())}static find(_,C){return _=_.match("(#Adverb|#Auxillary|#Verb|#Negative|#Particle)+").if("#Verb"),_=_.splitAfter("#Comma"),"number"==typeof C&&(_=_.get(C)),_.list=_.list.map((V)=>{return new N(V.terms,V.lexicon,V.refText,V.refTerms)}),new z(_.list,this.lexicon,this.parent)}}},{"../../index":44,"./verb":149}],131:[function(P,j){"use strict";const z=P("./methods/predict"),N=function(D){return D.match("#Gerund").found},A=function(D){let O=D.match("#Negative").list;return 2!==O.length&&!(1!==O.length)},_=function(D){return!!D.match("is being #PastTense").found||!!D.match("(had|has) been #PastTense").found||!!D.match("will have been #PastTense").found},C=function(D){return!!D.match("^(had|have) #PastTense")},V=function(D){let O=D.match("#Modal");return O.found?O.out("normal"):null},E=function(D){if(D.auxillary.found){if(D.match("will have #PastTense").found)return"Past";if(D.auxillary.match("will").found)return"Future";if(D.auxillary.match("was").found)return"Past"}if(D.verb){let M=z(D.verb);return{PastTense:"Past",FutureTense:"Future",FuturePerfect:"Future"}[M]||"Present"}return"Present"};j.exports=(D)=>{let O=A(D),M={negative:O,continuous:N(D),passive:_(D),perfect:C(D),modal:V(D),tense:E(D)};return M}},{"./methods/predict":143}],132:[function(P,j){"use strict";const z=P("./irregulars"),N=P("./suffixes"),A=P("./toActor"),_=P("./toAdjective"),C=P("./generic"),V=P("../predict"),E=P("../toInfinitive"),q=P("./toBe");j.exports=function(O,M){if("is"===O.normal||"was"===O.normal||"will"===O.normal)return q();O.tag.Contraction&&(O.text=O.silent_term);let F={PastTense:null,PresentTense:null,Infinitive:null,Gerund:null,Actor:null},W=V(O);W&&(F[W]=O.normal),"Infinitive"!==W&&(F.Infinitive=E(O,M)||"");const G=z(F.Infinitive)||{};Object.keys(G).forEach((L)=>{G[L]&&!F[L]&&(F[L]=G[L])});let S=F.Infinitive||O.normal;const I=N(S);return Object.keys(I).forEach((L)=>{I[L]&&!F[L]&&(F[L]=I[L])}),F.Actor||(F.Actor=A(S)),F.Adjective=_(F.Infinitive),Object.keys(F).forEach((L)=>{!F[L]&&C[L]&&(F[L]=C[L](F))}),F}},{"../predict":143,"../toInfinitive":146,"./generic":135,"./irregulars":137,"./suffixes":138,"./toActor":139,"./toAdjective":140,"./toBe":141}],133:[function(P,j){j.exports=[{reg:/(eave)$/i,repl:{pr:"$1s",pa:"$1d",gr:"eaving",ar:"$1r"}},{reg:/(ink)$/i,repl:{pr:"$1s",pa:"unk",gr:"$1ing",ar:"$1er"}},{reg:/(end)$/i,repl:{pr:"$1s",pa:"ent",gr:"$1ing",ar:"$1er"}},{reg:/(ide)$/i,repl:{pr:"$1s",pa:"ode",gr:"iding",ar:"ider"}},{reg:/(ake)$/i,repl:{pr:"$1s",pa:"ook",gr:"aking",ar:"$1r"}},{reg:/(eed)$/i,repl:{pr:"$1s",pa:"$1ed",gr:"$1ing",ar:"$1er"}},{reg:/(e)(ep)$/i,repl:{pr:"$1$2s",pa:"$1pt",gr:"$1$2ing",ar:"$1$2er"}},{reg:/(a[tg]|i[zn]|ur|nc|gl|is)e$/i,repl:{pr:"$1es",pa:"$1ed",gr:"$1ing",prt:"$1en"}},{reg:/([i|f|rr])y$/i,repl:{pr:"$1ies",pa:"$1ied",gr:"$1ying"}},{reg:/([td]er)$/i,repl:{pr:"$1s",pa:"$1ed",gr:"$1ing"}},{reg:/([bd]l)e$/i,repl:{pr:"$1es",pa:"$1ed",gr:"$1ing"}},{reg:/(ish|tch|ess)$/i,repl:{pr:"$1es",pa:"$1ed",gr:"$1ing"}},{reg:/(ion|end|e[nc]t)$/i,repl:{pr:"$1s",pa:"$1ed",gr:"$1ing"}},{reg:/(om)e$/i,repl:{pr:"$1es",pa:"ame",gr:"$1ing"}},{reg:/([aeiu])([pt])$/i,repl:{pr:"$1$2s",pa:"$1$2",gr:"$1$2$2ing"}},{reg:/(er)$/i,repl:{pr:"$1s",pa:"$1ed",gr:"$1ing"}},{reg:/(en)$/i,repl:{pr:"$1s",pa:"$1ed",gr:"$1ing"}},{reg:/(..)(ow)$/i,repl:{pr:"$1$2s",pa:"$1ew",gr:"$1$2ing",prt:"$1$2n"}},{reg:/(..)([cs]h)$/i,repl:{pr:"$1$2es",pa:"$1$2ed",gr:"$1$2ing"}},{reg:/([^aeiou][ou])(g|d)$/i,repl:{pr:"$1$2s",pa:"$1$2$2ed",gr:"$1$2$2ing"}},{reg:/([^aeiou][aeiou])(b|t|p|m)$/i,repl:{pr:"$1$2s",pa:"$1$2$2ed",gr:"$1$2$2ing"}},{reg:/([aeiou]zz)$/i,repl:{pr:"$1es",pa:"$1ed",gr:"$1ing"}}]},{}],134:[function(P,j){"use strict";const z=P("./irregulars"),N=P("./suffixes"),A=P("./generic"),_=["Gerund","PastTense","PresentTense"];j.exports=(V)=>{let E={Infinitive:V};const q=z(E.Infinitive);null!==q&&Object.keys(q).forEach((O)=>{q[O]&&!E[O]&&(E[O]=q[O])});const D=N(V);Object.keys(D).forEach((O)=>{D[O]&&!E[O]&&(E[O]=D[O])});for(let O=0;O<_.length;O++)E[_[O]]||(E[_[O]]=A[_[O]](E));return E}},{"./generic":135,"./irregulars":137,"./suffixes":138}],135:[function(P,j){"use strict";const z=P("../../../../../fns");j.exports={Gerund:(A)=>{let _=A.Infinitive;return z.endsWith(_,"e")?_.replace(/e$/,"ing"):_+"ing"},PresentTense:(A)=>{let _=A.Infinitive;return z.endsWith(_,"s")?_+"es":_.match(/[bcdfghjklmnpqrstvwxz]y$/)?_.slice(0,-1)+"ies":_+"s"},PastTense:(A)=>{let _=A.Infinitive;return z.endsWith(_,"e")?_+"d":z.endsWith(_,"ed")?_:_.match(/[bcdfghjklmnpqrstvwxz]y$/)?_.slice(0,-1)+"ied":_+"ed"}}},{"../../../../../fns":40}],136:[function(P,j){"use strict";const z=P("./conjugate"),N=P("./toBe");j.exports=(_,C)=>{let V=_.negative.found;if(_.verb.tag.Copula||"be"===_.verb.normal&&_.auxillary.match("will").found)return N(!1,V);let q=z(_.verb,C);return _.particle.found&&Object.keys(q).forEach((D)=>{q[D]+=_.particle.out()}),_.adverbs.found&&Object.keys(q).forEach((D)=>{q[D]+=_.adverbs.out()}),V&&(q.PastTense="did not "+q.Infinitive,q.PresentTense="does not "+q.Infinitive),q.FutureTense||(V?q.FutureTense="will not "+q.Infinitive:q.FutureTense="will "+q.Infinitive),q}},{"./conjugate":132,"./toBe":141}],137:[function(P,j){"use strict";const z=P("../../../../../data").irregular_verbs,N=P("../../../../../fns"),A=Object.keys(z),_=["Participle","Gerund","PastTense","PresentTense","FuturePerfect","PerfectTense","Actor"];j.exports=function(V){if(void 0!==z[V]){let E=N.copy(z[V]);return E.Infinitive=V,E}for(let E=0;E<A.length;E++)for(let q=0,D;q<_.length;q++)if(D=z[A[E]],D[_[q]]===V){let O=N.copy(D);return O.Infinitive=A[E],O}return{}}},{"../../../../../data":8,"../../../../../fns":40}],138:[function(P,j){"use strict";const z=P("./data/rules"),N={pr:"PresentTense",pa:"PastTense",gr:"Gerund",prt:"Participle",ar:"Actor"},A=Object.keys(N);j.exports=function(C){let V={};for(let E=0;E<z.length;E++)if(C.match(z[E].reg)){let q=z[E].repl;for(let D=0;D<A.length;D++)if(q[A[D]]){let O=N[A[D]];V[O]=C.replace(z[E].reg,q[A[D]])}return V}return V}},{"./data/rules":133}],139:[function(P,j){"use strict";const z={tie:"tier",dream:"dreamer",sail:"sailer",run:"runner",rub:"rubber",begin:"beginner",win:"winner",claim:"claimant",deal:"dealer",spin:"spinner"},N={aid:1,fail:1,appear:1,happen:1,seem:1,"try":1,say:1,marry:1,be:1,forbid:1,understand:1,bet:1},A=[{reg:/e$/i,repl:"er"},{reg:/([aeiou])([mlgp])$/i,repl:"$1$2$2er"},{reg:/([rlf])y$/i,repl:"$1ier"},{reg:/^(.?.[aeiou])t$/i,repl:"$1tter"}];j.exports=function(C){if(N[C])return null;if(z[C])return z[C];for(let V=0;V<A.length;V++)if(C.match(A[V].reg))return C.replace(A[V].reg,A[V].repl);return C+"er"}},{}],140:[function(P,j){"use strict";const z=[[/[^aeiou]y$/,"i"],[/([aeiou][n])$/,"$1n"]],N={collect:!0,exhaust:!0,convert:!0,digest:!0,discern:!0,dismiss:!0,reverse:!0,access:!0,collapse:!0,express:!0},A={eat:"edible",hear:"audible",see:"visible",defend:"defensible",write:"legible",move:"movable",divide:"divisible",perceive:"perceptible"};j.exports=function(C){if(A[C])return A[C];for(let E=0;E<z.length;E++)C.match(z[E][0])&&(C=C.replace(z[E][0],z[E][1]));let V=C+"able";return N[C]&&(V=C+"ible"),V}},{}],141:[function(P,j){"use strict";j.exports=(N,A)=>{let _={PastTense:"was",PresentTense:"is",FutureTense:"will be",Infinitive:"is",Gerund:"being",Actor:"",PerfectTense:"been",Pluperfect:"been"};return N&&(_.PastTense="were",_.PresentTense="are",_.Infinitive="are"),A&&(_.PastTense+=" not",_.PresentTense+=" not",_.FutureTense="will not be",_.Infinitive+=" not",_.PerfectTense="not "+_.PerfectTense,_.Pluperfect="not "+_.Pluperfect),_}},{}],142:[function(P,j){"use strict";j.exports=(N)=>{if(N.match("(are|were|does)").found)return!0;if(N.match("(is|am|do|was)").found)return!1;let A=N.getNoun();if(A&&A.found){if(A.match("#Plural").found)return!0;if(A.match("#Singular").found)return!1}return null}},{}],143:[function(P,j){"use strict";const z=P("../../../../../fns"),N=P("./suffix_rules"),A={Infinitive:!0,Gerund:!0,PastTense:!0,PresentTense:!0,FutureTense:!0,PerfectTense:!0,Pluperfect:!0,FuturePerfect:!0,Participle:!0};j.exports=function(C,V){let E=Object.keys(A);for(let D=0;D<E.length;D++)if(C.tag[E[D]])return V&&console.log("predicted "+E[D]+" from pos",path),E[D];const q=Object.keys(N);for(let D=0;D<q.length;D++)if(z.endsWith(C.normal,q[D])&&q[D].length<C.normal.length){if(V){const O="predicted "+N[q[D]]+" from suffix "+q[D];console.log(O,path)}return N[q[D]]}return null}},{"../../../../../fns":40,"./suffix_rules":144}],144:[function(P,j){"use strict";const z={Gerund:["ing"],Actor:["erer"],Infinitive:["ate","ize","tion","rify","then","ress","ify","age","nce","ect","ise","ine","ish","ace","ash","ure","tch","end","ack","and","ute","ade","ock","ite","ase","ose","use","ive","int","nge","lay","est","ain","ant","ent","eed","er","le","own","unk","ung","en"],PastTense:["ed","lt","nt","pt","ew","ld"],PresentTense:["rks","cks","nks","ngs","mps","tes","zes","ers","les","acks","ends","ands","ocks","lays","eads","lls","els","ils","ows","nds","ays","ams","ars","ops","ffs","als","urs","lds","ews","ips","es","ts","ns","s"]},N={},A=Object.keys(z),_=A.length;for(let C=0,V;C<_;C++){V=z[A[C]].length;for(let E=0;E<V;E++)N[z[A[C]][E]]=A[C]}j.exports=N},{}],145:[function(P,j){"use strict";const z=[[/y$/,"i"],[/([aeiou][n])$/,"$1n"]],N={collect:!0,exhaust:!0,convert:!0,digest:!0,discern:!0,dismiss:!0,reverse:!0,access:!0,collapse:!0,express:!0},A={eat:"edible",hear:"audible",see:"visible",defend:"defensible",write:"legible",move:"movable",divide:"divisible",perceive:"perceptible"};j.exports=function(C){if(A[C])return A[C];for(let E=0;E<z.length;E++)C.match(z[E][0])&&(C=C.replace(z[E][0],z[E][1]));let V=C+"able";return N[C]&&(V=C+"ible"),V}},{}],146:[function(P,j){"use strict";const z=P("./rules");let N=P("../../../../../data").irregular_verbs;const A=P("../predict");N=(()=>{return Object.keys(N).reduce((V,E)=>{return Object.keys(N[E]).forEach((q)=>{V[N[E][q]]=E}),V},{})})();j.exports=function(V){if(V.tag.Infinitive)return V.normal;if(N[V.normal])return N[V.normal];let E=A(V);if(z[E])for(let q=0,D;q<z[E].length;q++)if(D=z[E][q],V.normal.match(D.reg))return V.normal.replace(D.reg,D.to);return V.normal}},{"../../../../../data":8,"../predict":143,"./rules":147}],147:[function(P,j){"use strict";let z={Participle:[{reg:/own$/i,to:"ow"},{reg:/(.)un([g|k])$/i,to:"$1in$2"}],Actor:[{reg:/(er)er$/i,to:"$1"}],PresentTense:[{reg:/(ies)$/i,to:"y"},{reg:/(tch|sh)es$/i,to:"$1"},{reg:/(ss|zz)es$/i,to:"$1"},{reg:/([tzlshicgrvdnkmu])es$/i,to:"$1e"},{reg:/(n[dtk]|c[kt]|[eo]n|i[nl]|er|a[ytrl])s$/i,to:"$1"},{reg:/(ow)s$/i,to:"$1"},{reg:/(op)s$/i,to:"$1"},{reg:/([eirs])ts$/i,to:"$1t"},{reg:/(ll)s$/i,to:"$1"},{reg:/(el)s$/i,to:"$1"},{reg:/(ip)es$/i,to:"$1e"},{reg:/ss$/i,to:"ss"},{reg:/s$/i,to:""}],Gerund:[{reg:/pping$/i,to:"p"},{reg:/lling$/i,to:"ll"},{reg:/tting$/i,to:"t"},{reg:/ssing$/i,to:"ss"},{reg:/gging$/i,to:"g"},{reg:/([^aeiou])ying$/i,to:"$1y"},{reg:/([^ae]i.)ing$/i,to:"$1e"},{reg:/(ea.)ing$/i,to:"$1"},{reg:/(u[rtcb]|[bdtpkg]l|n[cg]|a[gdkvtc]|[ua]s|[dr]g|yz|o[rlsp]|cre)ing$/i,to:"$1e"},{reg:/(ch|sh)ing$/i,to:"$1"},{reg:/(..)ing$/i,to:"$1"}],PastTense:[{reg:/(ued)$/i,to:"ue"},{reg:/([aeiou]zz)ed$/i,to:"$1"},{reg:/(e|i)lled$/i,to:"$1ll"},{reg:/(sh|ch)ed$/i,to:"$1"},{reg:/(tl|gl)ed$/i,to:"$1e"},{reg:/(um?pt?)ed$/i,to:"$1"},{reg:/(ss)ed$/i,to:"$1"},{reg:/pped$/i,to:"p"},{reg:/tted$/i,to:"t"},{reg:/gged$/i,to:"g"},{reg:/(h|ion|n[dt]|ai.|[cs]t|pp|all|ss|tt|int|ail|ld|en|oo.|er|k|pp|w|ou.|rt|ght|rm)ed$/i,to:"$1"},{reg:/(.ut)ed$/i,to:"$1e"},{reg:/(us)ed$/i,to:"$1e"},{reg:/(..[^aeiouy])ed$/i,to:"$1e"},{reg:/ied$/i,to:"y"},{reg:/(.o)ed$/i,to:"$1o"},{reg:/(.i)ed$/i,to:"$1"},{reg:/(a[^aeiou])ed$/i,to:"$1"},{reg:/([rl])ew$/i,to:"$1ow"},{reg:/([pl])t$/i,to:"$1t"}]};j.exports=z},{}],148:[function(P,j){"use strict";const z=P("./methods/toInfinitive");j.exports=(A)=>{let _=A.match("#Auxillary").first();if(_.found){let M=_.list[0].index();return A.parentTerms.insertAt(M+1,"not","Verb")}let C=A.match("(#Copula|will|has|had|do)").first();if(C.found){let M=C.list[0].index();return A.parentTerms.insertAt(M+1,"not","Verb")}let V=A.isPlural(),E=A.match("#PastTense").last();if(E.found){let M=E.list[0],F=M.index();return M.terms[0].text=z(M.terms[0]),V?A.parentTerms.insertAt(F,"do not","Verb"):A.parentTerms.insertAt(F,"did not","Verb")}let q=A.match("#PresentTense").first();if(q.found){let M=q.list[0],F=M.index();M.terms[0].text=z(M.terms[0]);let W=A.getNoun();return W.match("(i|we|they|you)").found?A.parentTerms.insertAt(F,"do not","Verb"):A.parentTerms.insertAt(F,"does not","Verb")}let D=A.match("#Gerund").last();if(D.found){let M=D.list[0].index();return A.parentTerms.insertAt(M,"not","Verb")}let O=A.match("#Verb").last();if(O.found){O=O.list[0];let M=O.index();return O.terms[0].text=z(O.terms[0]),V?A.parentTerms.insertAt(M,"does not","Verb"):A.parentTerms.insertAt(M,"did not","Verb")}return A}},{"./methods/toInfinitive":146}],149:[function(P,j){"use strict";const z=P("../../paths").Terms,N=P("./methods/conjugate"),A=P("./methods/toAdjective"),_=P("./interpret"),C=P("./toNegative"),V=P("./methods/isPlural");j.exports=class extends z{constructor(q,D,O,M){super(q,D,O,M),this.parse()}parse(){this.negative=this.match("#Negative"),this.adverbs=this.match("#Adverb");let q=this.clone().not("(#Adverb|#Negative)");this.verb=q.match("#Verb").not("#Particle").last(),this.particle=q.match("#Particle").last(),this.verb.found&&(this.verb=this.verb.list[0].terms[0]),this.auxillary=q.match("#Auxillary+")}data(q){return{text:this.out("text"),normal:this.out("normal"),parts:{negative:this.negative.out("normal"),auxillary:this.auxillary.out("normal"),verb:this.verb.out("normal"),adverbs:this.adverbs.out("normal")},interpret:_(this,q),conjugations:this.conjugate()}}getNoun(){if(!this.refTerms)return null;let q="#Adjective? #Noun+ "+this.out("normal");return this.refTerms.match(q).match("#Noun+")}conjugation(){return _(this,!1).tense}conjugate(q){return N(this,q)}isPlural(){return V(this)}isNegative(){return 1===this.match("#Negative").list.length}isPerfect(){return this.auxillary.match("(have|had)").found}toNegative(){return this.isNegative()?this:C(this)}toPositive(){return this.match("#Negative").delete()}toPastTense(){let q=this.conjugate();return this.replaceWith(q.PastTense)}toPresentTense(){let q=this.conjugate();return this.replaceWith(q.PresentTense)}toFutureTense(){let q=this.conjugate();return this.replaceWith(q.FutureTense)}toInfinitive(){let q=this.conjugate();return this.terms[this.terms.length-1].text=q.Infinitive,this}asAdjective(){return A(this.verb.out("normal"))}}},{"../../paths":56,"./interpret":131,"./methods/conjugate":136,"./methods/isPlural":142,"./methods/toAdjective":145,"./toNegative":148}],150:[function(P,j){"use strict";const z=P("./paths").fns,N=P("../data/index"),A=Object.keys(N.abbreviations),_=function(V){let E=V.split(/(\n+)/);return E=E.map(function(q){return q.split(/(\S.+?[.!?])(?=\s+|$)/g)}),z.flatten(E)};j.exports=function(V){let E=[];V=z.ensureString(V);let q=[];if(!V||"string"!=typeof V||!V.match(/\S/))return E;let D=_(V);for(let W=0,G;W<D.length;W++)if(G=D[W],G&&""!==G){if(!G.match(/\S/))if(q[q.length-1]){q[q.length-1]+=G;continue}else if(D[W+1]){D[W+1]=G+D[W+1];continue}q.push(G)}const O=new RegExp("\\b("+A.join("|")+")[.!?] ?$","i"),M=/[ |.][A-Z].?( *)?$/i,F=/\.\.+( +)?$/;for(let W=0;W<q.length;W++)q[W+1]&&(q[W].match(O)||q[W].match(M)||q[W].match(F))?q[W+1]=q[W]+(q[W+1]||""):q[W]&&0<q[W].length&&(E.push(q[W]),q[W]="");return 0===E.length?[V]:E}},{"../data/index":8,"./paths":56}],151:[function(P,j){"use strict";const z=P("./fix"),N={wanna:["want","to"],gonna:["going","to"],im:["i","am"],alot:["a","lot"],dont:["do","not"],dun:["do","not"],ive:["i","have"],"won't":["will","not"],wont:["will","not"],"can't":["can","not"],cant:["can","not"],cannot:["can","not"],aint:["is","not"],"ain't":["is","not"],"shan't":["should","not"],imma:["I","will"],"where'd":["where","did"],whered:["where","did"],"when'd":["when","did"],whend:["when","did"],"how'd":["how","did"],howd:["how","did"],"what'd":["what","did"],whatd:["what","did"],"let's":["let","us"],dunno:["do","not","know"],brb:["be","right","back"],gtg:["got","to","go"],irl:["in","real","life"],tbh:["to","be","honest"],imo:["in","my","opinion"],til:["today","i","learned"],rn:["right","now"]};j.exports=(_)=>{let C=Object.keys(N);for(let V=0;V<C.length;V++)for(let E=0;E<_.terms.length;E++)if(_.terms[E].normal===C[V]){let q=N[C[V]];_=z(_,q,E);break}return _}},{"./fix":155}],152:[function(P,j){"use strict";const z=P("./fix"),N=P("./split"),A=(C,V)=>{let E=C.terms[V],q=C.terms[V+1];return E.tag.Pronoun||E.tag.QuestionWord?!1:!q||!q.tag.VerbPhrase&&(!!q.tag.Noun||q.tag.Adjective&&C.terms[V+2]&&C.terms[V+2].tag.Noun||(q.tag.Adjective||q.tag.Adverb||q.tag.Verb)&&!1)};j.exports=(C)=>{for(let V=0;V<C.terms.length;V++)if(!C.terms[V].silent_term){let E=N(C.terms[V]);if(E&&"s"===E.end){if(A(C,V)){C.terms[V].tagAs("#Possessive","hard-contraction");continue}let q=[E.start,"is"];C=z(C,q,V),V+=1}}return C}},{"./fix":155,"./split":157}],153:[function(P,j){"use strict";const z=P("./fix"),N=P("./split"),A={ll:"will",d:"would",ve:"have",re:"are",m:"am","n't":"not"};j.exports=(C)=>{for(let V=0;V<C.terms.length;V++)if(!C.terms[V].silent_term){let E=N(C.terms[V]);if(E&&A[E.end]){let q=[E.start,A[E.end]];C=z(C,q,V),V+=1}}return C}},{"./fix":155,"./split":157}],154:[function(P,j){"use strict";const z=P("./fix"),N=P("../../term");j.exports=(_)=>{for(let C=0,V;C<_.terms.length;C++)if(V=_.terms[C],!V.silent_term){if(V.tag.Value&&0<C&&" - "===V.whitespace.before){let E=new N("");return E.silent_term="to",_.insertAt(C,E),_.terms[C-1].tagAs("NumberRange"),_.terms[C].tagAs("NumberRange"),_.terms[C].whitespace.before="",_.terms[C].whitespace.after="",_.terms[C+1].tagAs("NumberRange"),_}if(V.tag.NumberRange){let E=V.text.split(/(-)/);E[1]="to",_=z(_,E,C),_.terms[C].tagAs("NumberRange"),_.terms[C+1].tagAs("NumberRange"),_.terms[C+2].tagAs("NumberRange"),C+=2}}return _}},{"../../term":198,"./fix":155}],155:[function(P,j){"use strict";const z=P("../../term"),N={not:"Negative",will:"Verb",would:"Modal",have:"Verb",are:"Copula",is:"Copula",am:"Verb"},A=(C)=>{N[C.silent_term]&&C.tagAs(N[C.silent_term])};j.exports=(C,V,E)=>{let q=C.terms[E];q.silent_term=V[0],q.tagAs("Contraction","tagger-contraction");let D=new z("");if(D.silent_term=V[1],D.tagAs("Contraction","tagger-contraction"),C.insertAt(E+1,D),D.whitespace.before="",D.whitespace.after="",A(D),V[2]){let O=new z("");O.silent_term=V[2],C.insertAt(E+2,O),O.tagAs("Contraction","tagger-contraction"),A(O)}return C}},{"../../term":198}],156:[function(P,j){"use strict";const z=P("./01-irregulars"),N=P("./02-hardOne"),A=P("./03-easyOnes"),_=P("./04-numberRange");j.exports=function(V){return V=z(V),V=N(V),V=A(V),V=_(V),V}},{"./01-irregulars":151,"./02-hardOne":152,"./03-easyOnes":153,"./04-numberRange":154}],157:[function(P,j){"use strict";const z={re:!0,ve:!0,ll:!0,t:!0,s:!0,d:!0,m:!0};j.exports=(A)=>{let _=A.text.match(/^([a-z]+)'([a-z][a-z]?)$/i);return _&&_[1]&&z[_[2]]?("t"===_[2]&&_[1].match(/[a-z]n$/)&&(_[1]=_[1].replace(/n$/,""),_[2]="n't"),A.tag.TitleCase&&(_[1]=_[1].replace(/^[a-z]/,(C)=>C.toUpperCase())),{start:_[1],end:_[2]}):(_=A.text.match(/[a-z]s'$/i),_?{start:A.normal.replace(/s'?$/,""),end:""}:null)}},{}],158:[function(P,j){"use strict";const z=P("../paths").log,A=P("./verb_corrections");j.exports=function(C){return z.here("correction"),C.match("so #Adjective").match("so").tag("Adverb","so-adv"),C.match("so #Noun").match("so").tag("Conjunction","so-conj"),C.match("do so").match("so").tag("Noun","so-noun"),C.match("still #Adjective").match("still").tag("Adverb","still-advb"),C.match("more #Noun").tag("Noun","more-noun"),C.match("still #Verb").term(0).tag("Adverb","still-verb"),C.match("second #Noun").term(0).unTag("Unit").tag("Ordinal","second-noun"),C.match("(foot|feet)").tag("Noun","foot-noun"),C.match("#Value (foot|feet)").match("(foot|feet)").tag("Unit","foot-unit"),C.match("how (#Copula|#Modal|#PastTense)").term(0).tag("QuestionWord","how-question"),C.match("will #Adjective").term(1).tag("Verb","will-adj"),C.match("u #Verb").term(0).tag("Pronoun","u-pronoun-1"),C.match("#Conjunction u").term(1).tag("Pronoun","u-pronoun-2"),C.match("is no #Verb").term(2).tag("Noun","is-no-verb"),C.match("the #Verb #Preposition .").match("#Verb").tag("Noun","correction-determiner1"),C.match("the #Verb").match("#Verb").tag("Noun","correction-determiner2"),C.match("the #Adjective #Verb").match("#Verb").tag("Noun","correction-determiner3"),C.match("the #Adverb #Adjective #Verb").match("#Verb").tag("Noun","correction-determiner4"),C.match("#Organization of the? #TitleCase").tag("Organization","org-of-place"),C.match("#Organization #Country").tag("Organization","org-country"),C.match("(world|global|international|national|#Demonym) #Organization").tag("Organization","global-org"),C.match("#TitleCase (ltd|co|inc|dept|assn|bros)").tag("Organization","org-abbrv"),C.match("#Determiner #Verb of").term(1).tag("Noun","the-verb-of"),C.match("#Noun #Adverb #Noun").term(2).tag("Verb","correction"),C.match("#Copula #Adjective to #Verb").match("#Adjective to").tag("Verb","correction"),C.match("#Verb than").term(0).tag("Noun","correction"),C.match("#Possessive #Verb").term(1).tag("Noun","correction-possessive"),C.match("just like").term(1).tag("Preposition","like-preposition"),C.match("#Noun like #Noun").term(1).tag("Preposition","noun-like"),C.match("#Verb like").term(1).tag("Adverb","verb-like"),C.match("#Adverb like").term(1).tag("Adverb","adverb-like"),C.match("#Determiner #Noun of #Verb").match("#Verb").tag("Noun","noun-of-noun"),C.match("#Adjective #PresentTense").term(1).tag("Noun","adj-presentTense"),C.match("#Possessive #FirstName").term(1).unTag("Person","possessive-name"),C.match("(a|an) (#Duration|#Value)").ifNo("#Plural").term(0).tag("Value","a-is-one"),C.match("half a? #Value").tag("Value","half-a-value"),C.match("#Value and a (half|quarter)").tag("Value","value-and-a-half"),C.match("#Value").match("!#Ordinal").tag("#Cardinal","not-ordinal"),C.match("#Value+ #Currency").tag("Money","value-currency"),C.match("#Money and #Money #Currency?").tag("Money","money-and-money"),C.match("holy (shit|fuck|hell)").tag("Expression","swears-expression"),C.match("#Determiner (shit|damn|hell)").term(1).tag("Noun","swears-noun"),C.match("(shit|damn|fuck) (#Determiner|#Possessive|them)").term(0).tag("Verb","swears-verb"),C.match("#Copula fucked up?").not("#Copula").tag("Adjective","swears-adjective"),C=A(C),C}},{"../paths":165,"./verb_corrections":159}],159:[function(P,j){"use strict";j.exports=function(N){let A="(#Adverb|not)+?";return N.match(`(has|had) ${A} #PastTense`).not("#Verb$").tag("Auxillary","had-walked"),N.match(`#Copula ${A} #Gerund`).not("#Verb$").tag("Auxillary","copula-walking"),N.match(`(be|been) ${A} #Gerund`).not("#Verb$").tag("Auxillary","be-walking"),N.match(`(#Modal|did) ${A} #Verb`).not("#Verb$").tag("Auxillary","modal-verb"),N.match(`#Modal ${A} have ${A} had ${A} #Verb`).not("#Verb$").tag("Auxillary","would-have"),N.match(`(#Modal) ${A} be ${A} #Verb`).not("#Verb$").tag("Auxillary","would-be"),N.match(`(#Modal|had|has) ${A} been ${A} #Verb`).not("#Verb$").tag("Auxillary","would-be"),N}},{}],160:[function(P,j){"use strict";const z={interpret:P("./contraction")},N={lexicon_lump:P("./lumper/lexicon_lump"),lump_two:P("./lumper/lump_two"),lump_three:P("./lumper/lump_three")},A={punctuation_step:P("./steps/01-punctuation_step"),lexicon_step:P("./steps/02-lexicon_step"),capital_step:P("./steps/03-capital_step"),web_step:P("./steps/04-web_step"),suffix_step:P("./steps/05-suffix_step"),neighbour_step:P("./steps/06-neighbour_step"),noun_fallback:P("./steps/07-noun_fallback"),date_step:P("./steps/08-date_step"),auxillary_step:P("./steps/09-auxillary_step"),negation_step:P("./steps/10-negation_step"),phrasal_step:P("./steps/12-phrasal_step"),comma_step:P("./steps/13-comma_step"),possessive_step:P("./steps/14-possessive_step"),value_step:P("./steps/15-value_step"),acronym_step:P("./steps/16-acronym_step"),emoji_step:P("./steps/17-emoji_step"),person_step:P("./steps/18-person_step"),quotation_step:P("./steps/19-quotation_step"),organization_step:P("./steps/20-organization_step"),plural_step:P("./steps/21-plural_step")},_=P("./corrections"),C=P("./phrase");j.exports=function(E){E=A.punctuation_step(E),E=A.emoji_step(E),E=N.lexicon_lump(E),E=A.lexicon_step(E),E=A.web_step(E),E=A.suffix_step(E),E=A.neighbour_step(E),E=A.capital_step(E),E=A.noun_fallback(E),E=z.interpret(E),E=A.date_step(E),E=A.auxillary_step(E),E=A.negation_step(E),E=A.phrasal_step(E),E=A.comma_step(E),E=A.possessive_step(E),E=A.value_step(E),E=A.acronym_step(E),E=A.person_step(E),E=A.quotation_step(E),E=A.organization_step(E),E=A.plural_step(E);for(let q=0;3>q;q++)E=N.lump_three(E),E=N.lump_two(E);return E=_(E),E=C(E),E}},{"./contraction":156,"./corrections":158,"./lumper/lexicon_lump":162,"./lumper/lump_three":163,"./lumper/lump_two":164,"./phrase":167,"./steps/01-punctuation_step":168,"./steps/02-lexicon_step":169,"./steps/03-capital_step":170,"./steps/04-web_step":171,"./steps/05-suffix_step":172,"./steps/06-neighbour_step":173,"./steps/07-noun_fallback":174,"./steps/08-date_step":175,"./steps/09-auxillary_step":176,"./steps/10-negation_step":177,"./steps/12-phrasal_step":178,"./steps/13-comma_step":179,"./steps/14-possessive_step":180,"./steps/15-value_step":181,"./steps/16-acronym_step":182,"./steps/17-emoji_step":183,"./steps/18-person_step":184,"./steps/19-quotation_step":185,"./steps/20-organization_step":186,"./steps/21-plural_step":187}],161:[function(P,j){"use strict";const z=P("../paths"),N=P("../../term"),A=z.log,C=(E,q)=>{let D=E.whitespace.before+E.text+E.whitespace.after;return D+=q.whitespace.before+q.text+q.whitespace.after,D};j.exports=function(E,q){let D=E.terms[q],O=E.terms[q+1];if(O){A.tell("--combining: \""+D.normal+"\"+\""+O.normal+"\"","tagger/combine");let M=C(D,O);return E.terms[q]=new N(M,D.context),E.terms[q].normal=D.normal+" "+O.normal,E.terms[q+1]=null,void(E.terms=E.terms.filter((F)=>null!==F))}}},{"../../term":198,"../paths":165}],162:[function(P,j){"use strict";const z=P("./combine"),N=P("../paths"),A=N.log,_=N.lexicon,C=N.fns,E=(O,M,F)=>{for(let W=0;W<F;W++)z(O,M)},q=(O,M,F)=>{let W="",G="",S="";for(let I=M;I<F.terms.length;I++){if(I===M?(W=F.terms[I].text,G=F.terms[I].normal,S=F.terms[I].root):(W+=" "+F.terms[I].text,G+=" "+F.terms[I].normal,S+=" "+F.terms[I].root),W===O||G===O||S===O){let L=I-M;return E(F,M,L),!0}if(G.length>O.length)return!1}return!1};j.exports=function(O){A.here("tagger/multiple");let M=O.lexicon||{};for(let F=0;F<O.terms.length-1;F++){let W=O.terms[F].normal+" "+O.terms[F+1].normal,G=O.terms[F].text+" "+O.terms[F+1].text,S=_[W]||_[G];S&&(z(O,F),O.terms[F].tagAs(S,"multiples-lexicon"))}return Object.keys(M).forEach((F)=>{for(let W=0;W<O.terms.length;W++)(C.startsWith(F,O.terms[W].normal)||C.startsWith(F,O.terms[W].text))&&q(F,W,O)&&O.terms[W].tagAs(M[F],"user-lexicon-lump")}),O}},{"../paths":165,"./combine":161}],163:[function(P,j){"use strict";const z=P("../paths").log,A=P("./combine"),_=[{condition:(V,E,q)=>V.tag.Noun&&("&"===E.text||"n"===E.normal)&&q.tag.Noun,result:"Organization",reason:"Noun-&-Noun"},{condition:(V,E,q)=>V.tag.Value&&E.tag.Value&&q.tag.PhoneNumber&&3===E.normal.length&&3>V.normal.length,result:"PhoneNumber",reason:"1-800-PhoneNumber"}];j.exports=function(V){z.here("lumper/lump_three");for(let E=0;E<_.length;E++)for(let q=0;q<V.terms.length-2;q++){let D=V.terms[q],O=V.terms[q+1],M=V.terms[q+2];_[E].condition(D,O,M)&&(A(V,q),A(V,q),V.terms[q].tagAs(_[E].result,"lump-three ("+_[E].reason+")"))}return V}},{"../paths":165,"./combine":161}],164:[function(P,j){"use strict";const z=P("../paths").log,A=P("./combine"),_={standard:!0,daylight:!0,summer:!0,eastern:!0,pacific:!0,central:!0,mountain:!0},C=[{condition:(E,q)=>E.tag.Holiday&&("day"===q.normal||"eve"===q.normal),result:"Holiday",reason:"holiday-day"},{condition:(E,q)=>E.tag.Noun&&q.tag.Actor,result:"Actor",reason:"thing-doer"},{condition:(E,q)=>_[E.normal]&&("standard time"===q.normal||"time"===q.normal),result:"Time",reason:"timezone"},{condition:(E,q)=>E.tag.Demonym&&q.tag.Currency,result:"Currency",reason:"demonym-currency"},{condition:(E,q)=>E.tag.NumericValue&&q.tag.PhoneNumber&&3>=E.normal.length,result:"PhoneNumber",reason:"(800) PhoneNumber"}];j.exports=function(E){z.here("lumper/lump_two");for(let q=0;q<C.length;q++)for(let D=0;D<E.terms.length-1;D++){let O=E.terms[D],M=E.terms[D+1];C[q].condition(O,M)&&(A(E,D),E.terms[D].tagAs(C[q].result,"lump-two ("+C[q].reason+")"))}return E}},{"../paths":165,"./combine":161}],165:[function(P,j){j.exports={fns:P("../fns"),lexicon:P("../data/lexicon"),log:P("../log"),data:P("../data"),Terms:P("../terms"),tags:P("../tags")}},{"../data":8,"../data/lexicon":9,"../fns":40,"../log":42,"../tags":196,"../terms":216}],166:[function(P,j){"use strict";j.exports=function(N){let A=N.match("#Condition {1,7} #ClauseEnd");return A.found&&A.match("#Comma$")&&A.tag("ConditionPhrase"),A=N.match("#Condition {1,13} #ClauseEnd #Pronoun"),A.found&&A.match("#Comma$")&&A.not("#Pronoun$").tag("ConditionPhrase","end-pronoun"),A=N.match("#Condition {1,7} then"),A.found&&A.not("then$").tag("ConditionPhrase","cond-then"),A=N.match("#Comma #Condition {1,7} .$"),A.found&&A.not("^#Comma").tag("ConditionPhrase","comma-7-end"),A=N.match("#Condition {1,4}$"),A.found&&A.tag("ConditionPhrase","cond-4-end"),N}},{}],167:[function(P,j){"use strict";const z=P("./00-conditionPass");j.exports=function(A){return A=z(A),A}},{"./00-conditionPass":166}],168:[function(P,j){"use strict";const z=P("../paths").log,N=P("./rules/punct_rules"),_=function(E){if(!E.canBe("RomanNumeral"))return!1;const q=E.text;return 1<q.length&&q.match(/^[IVXCM]+$/)},C={a:!0,i:!0,u:!0,r:!0,c:!0,k:!0};j.exports=function(E){return z.here("tagger/punctuation"),E.terms.forEach((q)=>{let D=q.text;D.match(/^[A-Z][a-z']/)&&q.tagAs("TitleCase","punct-rule"),D=D.replace(/[,\.\?]$/,"");for(let O=0,M;O<N.length;O++)if(M=N[O],D.match(M.reg))return void(q.canBe(M.tag)&&q.tagAs(M.tag,"punctuation-rule- \""+M.str+"\""));1!==D.length||C[D.toLowerCase()]||q.tagAs("Acronym","one-letter-acronym"),_(q)&&q.tagAs("RomanNumeral","is-roman-numeral")}),E}},{"../paths":165,"./rules/punct_rules":192}],169:[function(P,j){"use strict";const z=P("../paths"),N=P("../contraction/split"),A=z.lexicon,_=z.log,V=(q,D)=>{let O=D.lexicon||{};return O[q]?O[q]:A[q]?A[q]:null};j.exports=function(q){_.here("tagger/lexicon");let D;for(let O=0,M;O<q.terms.length;O++){if(M=q.terms[O],D=V(M.normal,q),D){M.tagAs(D,"lexicon-match");continue}if(D=V(M.text,q),D){M.tagAs(D,"lexicon-match-text");continue}let F=N(M);if(F&&F.start&&(D=V(F.start.toLowerCase(),q),D)){M.tagAs(D,"contraction-lexicon");continue}if(D=V(M.silent_term,q),M.silent_term&&D){M.tagAs(D,"silent_term-lexicon");continue}let W=M.normal.split(/[ -]/);if(1<W.length&&(D=V(W[W.length-1],q),D)){M.tagAs(D,"multiword-lexicon");continue}}return q}},{"../contraction/split":157,"../paths":165}],170:[function(P,j){"use strict";const z=P("../paths").log;j.exports=function(_){z.here("tagger/capital");for(let V=1,E;V<_.terms.length;V++)E=_.terms[V],E.tag.TitleCase&&E.isWord()&&(E.tagAs("Noun","capital-step"),E.tagAs("TitleCase","capital-step"));let C=_.terms[0];return C&&C.tag.TitleCase&&(C.tag.Person||C.tag.Organization||C.tag.Place)&&C.tagAs("TitleCase","first-term-capital"),_}},{"../paths":165}],171:[function(P,j){"use strict";const z=P("../paths").log,A=function(q){return!!q.match(/^\w+@\w+\.[a-z]{2,3}$/)},_=function(q){return!!q.match(/^#[a-z0-9_]{2,}$/)},C=function(q){return!!q.match(/^@\w{2,}$/)},V=function(q){return!!q.match(/^(https?:\/\/|www\.)\w+\.[a-z]{2,3}/)||!!q.match(/^[\w\.\/]+\.(com|net|gov|org|ly|edu|info|biz|ru|jp|de|in|uk|br)/)};j.exports=function(q){z.here("tagger/web_step");for(let D=0;D<q.length;D++){let O=q.get(D),M=O.text.trim().toLowerCase();A(M)&&O.tagAs("Email","web_pass"),_(M)&&O.tagAs("HashTag","web_pass"),C(M)&&O.tagAs("AtMention","web_pass"),V(M)&&O.tagAs("Url","web_pass")}return q}},{"../paths":165}],172:[function(P,j){"use strict";const z=P("../paths").log,N=P("./rules/word_rules");j.exports=function(C){return z.here("tagger/suffix"),C.terms.forEach((V)=>{for(let E=0,q;E<N.length;E++)if(q=N[E],V.normal.match(q.reg))return void(V.canBe(q.tag)&&V.tagAs(q.tag,"word-rule- \""+q.str+"\""))}),C}},{"../paths":165,"./rules/word_rules":193}],173:[function(P,j){"use strict";const z=P("./rules/neighbours"),N=z.afterThisWord,A=z.beforeThisWord,_=z.beforeThisPos,C=z.afterThisPos,V=P("../paths").log;j.exports=function(D){return V.here("tagger/neighbours"),D.terms.forEach((O,M)=>{let F=Object.keys(O.tag);if(0===F.length){let W=D.terms[M-1],G=D.terms[M+1];if(W&&N[W.normal])return void O.tagAs(N[W.normal],"neighbour-after-\""+W.normal+"\"");if(G&&A[G.normal])return void O.tagAs(A[G.normal],"neighbour-before-\""+G.normal+"\"");let S=[];if(W){S=Object.keys(W.tag);for(let I=0;I<S.length;I++)if(C[S[I]])return void O.tagAs(C[S[I]],"neighbour-after-["+S[I]+"]")}if(G){S=Object.keys(G.tag);for(let I=0;I<S.length;I++)if(_[S[I]])return void O.tagAs(_[S[I]],"neighbour-before-["+S[I]+"]")}}}),D}},{"../paths":165,"./rules/neighbours":190}],174:[function(P,j){"use strict";const z=P("../paths").log,A={TitleCase:!0,UpperCase:!0,CamelCase:!0},_=function(V){if(V.tag.Noun||V.tag.Verb||V.tag.Adjective)return!1;let E=Object.keys(V.tag);return!(0!==E.length)||!(0!==E.filter((q)=>!A[q]).length)};j.exports=function(V){z.here("tagger/noun_fallback");for(let E=0,q;E<V.terms.length;E++)if((q=V.terms[E],!(q.tag.Noun||q.tag.Verb))&&_(q)){if(!1===q.isWord())continue;q.tagAs("Noun","noun-fallback")}return V}},{"../paths":165}],175:[function(P,j){"use strict";const z=P("../paths").log,A="(may|march|jan|april|sep)",_="(in|by|before|for|during|on|until|after|of|within)",C="(last|next|this|previous|current|upcoming|coming)",V="(start|end|middle|starting|ending|midpoint|beginning)",E=(D)=>{return D&&1e3<D&&3e3>D};j.exports=function(D){z.here("tagger/datePass"),D.match(`#Month #DateRange+`).tag("Date","correction-numberRange"),D.match(`${A} (#Determiner|#Value|#Date)`).term(0).tag("Month","correction-may"),D.match(`#Date ${A}`).term(1).tag("Month","correction-may"),D.match(`${_} ${A}`).term(1).tag("Month","correction-may"),D.match(`(next|this|last) ${A}`).term(1).tag("Month","correction-may"),D.match("#Value #Abbreviation").tag("Value","value-abbr"),D.match("a #Value").tag("Value","a-value"),D.match("(minus|negative) #Value").tag("Value","minus-value"),D.match("#Value grand").tag("Value","value-grand"),D.match("(half|quarter) #Ordinal").tag("Value","half-ordinal"),D.match("(hundred|thousand|million|billion|trillion) and #Value").tag("Value","magnitude-and-value"),D.match("#Value point #Value").tag("Value","value-point-value"),D.match("#Cardinal #Time").tag("Time","value-time"),D.match("(by|before|after|at|@|about) #Time").tag("Time","preposition-time"),D.match("(#Value|#Time) (am|pm)").tag("Time","value-ampm"),D.match("all day").tag("Time","all-day"),D.match(`${_}? ${C} (spring|summer|winter|fall|autumn)`).tag("Date","thisNext-season"),D.match(`the? ${V} of (spring|summer|winter|fall|autumn)`).tag("Date","section-season"),D.match("#Date the? #Ordinal").tag("Date","correction-date"),D.match("#Value of? #Month").tag("Date","value-of-month"),D.match("#Cardinal #Month").tag("Date","cardinal-month"),D.match("#Month #Value to #Value").tag("Date","value-to-value"),D.match(`${C} #Date`).tag("Date","thisNext-date"),D.match(`${_}? #Value #Duration`).tag("Date","value-duration"),D.match("due? (by|before|after|until) #Date").tag("Date","by-date"),D.match("#Date (by|before|after|at|@|about) #Cardinal").not("^#Date").tag("Time","date-before-Cardinal"),D.match("#Time (eastern|pacific|central|mountain)").term(1).tag("Time","timezone"),D.match("#Time (est|pst|gmt)").term(1).tag("Time","timezone abbr"),D.match("#Date (am|pm)").term(1).unTag("Verb").unTag("Copula").tag("Time","date-am"),D.match("at night").tag("Time","at-night"),D.match("in the (night|evening|morning|afternoon|day|daytime)").tag("Time","in-the-night"),D.match("(early|late) (at|in)? the? (night|evening|morning|afternoon|day|daytime)").tag("Time","early-evening"),D.match("#Month #Value #Cardinal").tag("Date","month-value-cardinal"),D.match("(last|next|this|previous|current|upcoming|coming|the) #Date").tag("Date","next-feb"),D.match("#Date #Value").tag("Date","date-value"),D.match("#Value #Date").tag("Date","value-date"),D.match("#Date #Preposition #Date").tag("Date","date-prep-date"),D.match("#Value #Duration #Conjunction").tag("Date","val-duration-conjunction"),D.match(`the? ${V} of #Date`).tag("Date","section-of-date");let O=D.match(`#Date #Value #Cardinal`).lastTerm().values(),M=O.numbers()[0];return E(M)&&O.tag("Year","date-value-year"),O=D.match(`#Date+ #Cardinal`).lastTerm().values(),M=O.numbers()[0],E(M)&&O.tag("Year","date-year"),O=D.match(`#Month #Value #Cardinal`).lastTerm().values(),M=O.numbers()[0],E(M)&&O.tag("Year","date-year2"),O=D.match(`#Month #Value to #Value #Cardinal`).lastTerm().values(),M=O.numbers()[0],E(M)&&O.tag("Year","date-year3"),O=D.match(`(in|of|by|during|before|starting|ending|for|year) #Cardinal`).lastTerm().values(),M=O.numbers()[0],E(M)&&O.tag("Year","preposition-year"),D.match("#Duration in #Date").tag("Date","duration-in-date"),D}},{"../paths":165}],176:[function(P,j){"use strict";const z=P("../paths").log,A={"do":!0,"don't":!0,does:!0,"doesn't":!0,will:!0,wont:!0,"won't":!0,have:!0,"haven't":!0,had:!0,"hadn't":!0,not:!0};j.exports=function(C){z.here("tagger/auxillary");for(let V=0,E;V<C.terms.length;V++)if(E=C.terms[V],A[E.normal]||A[E.silent_term]){let q=C.terms[V+1];if(q&&(q.tag.Verb||q.tag.Adverb||q.tag.Negative)){E.tagAs("Auxillary","corrections-auxillary");continue}}return C}},{"../paths":165}],177:[function(P,j){"use strict";const z=P("../paths").log;j.exports=function(_){z.here("tagger/negation");for(let C=0,V;C<_.length;C++)if(V=_.get(C),"not"===V.normal||"not"===V.silent_term)for(let E=C+1;E<_.length;E++){if(_.get(E).tag.Verb){V.tagAs("VerbPhrase","negate-verb");break}if(_.get(E).tag.Adjective){V.tagAs("AdjectivePhrase","negate-adj");break}}return _}},{"../paths":165}],178:[function(P,j){"use strict";const z=P("../paths").log,N=P("./rules/phrasal_verbs"),A=P("../../result/subset/verbs/methods/toInfinitive/index.js"),C={aback:!0,along:!0,apart:!0,at:!0,away:!0,back:!0,by:!0,"do":!0,down:!0,forth:!0,forward:!0,into:!0,it:!0,off:!0,on:!0,out:!0,over:!0,round:!0,through:!0,together:!0,under:!0,up:!0,upon:!0,way:!0};j.exports=function(E){z.here("tagger/phrasal");for(let q=1,D;q<E.length;q++)if(D=E.get(q),C[D.normal]||"in"===D.normal){let O=E.get(q-1);if(O.tag.Verb){let M=A(O);N[M+" "+D.normal]&&D.tagAs("Particle","phrasalVerb-particle")}}return E}},{"../../result/subset/verbs/methods/toInfinitive/index.js":146,"../paths":165,"./rules/phrasal_verbs":191}],179:[function(P,j){"use strict";const z=(V,E)=>{let q=V.terms[E],D=V.terms[E+1];return D&&q.tag.Place&&!q.tag.Country&&D.tag.Country},N=(V)=>{return V.tag.Adjective?"Adjective":V.tag.Noun?"Noun":V.tag.Verb?"Verb":null},A=(V,E,q)=>{for(let D=E;D<=q;D++)V.terms[D].tag.List=!0},_=(V,E)=>{let q=E,D=N(V.terms[E]),O=0,M=0,F=!1;for(++E;E<V.terms.length;E++){let W=V.terms[E];if(0<M&&W.tag.Conjunction){F=!0;continue}if(W.tag[D]){if(W.tag.Comma){M+=1,O=0;continue}if(0<M&&F)return A(V,q,E),!0}if(O+=1,5<O)return!1}return!1};j.exports=function(V){for(let E=0;E<V.terms.length;E++){let q=V.terms[E],D=q.endPunctuation();if(","===D){q.tagAs("Comma","comma-step");continue}if(";"===D||":"===D){q.tagAs("ClauseEnd","clause-punt");continue}if(q.whitespace.after.match(/^\.\./)){q.tagAs("ClauseEnd","clause-elipses");continue}if(V.terms[E+1]&&V.terms[E+1].whitespace.before.match(/ - /)){q.tagAs("ClauseEnd","hypen-clause");continue}}for(let E=0,q;E<V.terms.length;E++)if(q=V.terms[E],q.tag.Comma){if(q.tag.List)continue;if(z(V,E))continue;if(_(V,E))continue;q.tag.ClauseEnd=!0}return V}},{}],180:[function(P,j){"use strict";const z={"it's":!0,"that's":!0},N=function(_,C){let V=_.get(C);if(z[V.normal])return!1;if(V.normal.match(/[a-z]s'$/))return!0;if(!V.normal.match(/[a-z]'s$/))return!1;if(V.tag.Pronoun)return!1;let E=_.get(C+1);return!E||!!E.tag.Noun||E.tag.Adjective&&_.get(C+2)&&_.get(C+2).tag.Noun||(E.tag.Adjective||E.tag.Verb||E.tag.Adverb)&&!1};j.exports=function(_){for(let C=0;C<_.length;C++)if(N(_,C)){let V=_.get(C);V.tag.Noun||V.tagAs("Noun","possessive_pass"),V.tagAs("Possessive","possessive_pass")}return _}},{}],181:[function(P,j){"use strict";"use strict";const z=P("../paths").log;j.exports=function(_){return z.here("tagger/value"),_.terms.forEach((C)=>{C.tag.Value&&(!C.tag.Ordinal&&!C.tag.Cardinal&&(C.normal.match(/^[0-9]([0-9]+,)*?(\.[0-9])$/)?C.tagAs("Cardinal","ordinal-regex"):C.tagAs("Cardinal","cardinal-regex")),!C.tag.TextValue&&!C.tag.NumericValue&&(C.normal.match(/^[a-z]/)?C.tagAs("TextValue","TextValue-regex"):C.tagAs("NumericValue","NumericValue-regex")))}),_}},{"../paths":165}],182:[function(P,j){"use strict";"use strict";const z=P("../paths").log;j.exports=function(_){return z.here("tagger/acronym_step"),_.terms.forEach((C)=>{C.isAcronym()&&C.tagAs("Acronym","acronym-step")}),_}},{"../paths":165}],183:[function(P,j){"use strict";const z=P("../paths").fns,N=P("./rules/emoji_regex"),A=P("./rules/emoticon_list"),_=(E)=>{return!!z.startsWith(E.text,":")&&!!E.text.match(/:.?$/)&&!E.text.match(" ")&&!(35<E.text.length)},C=(E)=>{let q=E.text.replace(/^[:;]/,":");return q=q.replace(/[:;]$/,":"),A[q]};j.exports=(E)=>{for(let q=0,D;q<E.terms.length;q++)D=E.terms[q],_(D)&&D.tagAs("Emoji","comma-emoji"),D.text.match(N)&&D.tagAs("Emoji","unicode-emoji"),C(D)&&D.tagAs("Emoji","emoticon-emoji");return E}},{"../paths":165,"./rules/emoji_regex":188,"./rules/emoticon_list":189}],184:[function(P,j){"use strict";const z=P("../paths").log;let A=P("../paths").data.titles;A=A.reduce((C,V)=>{return C[V]=!0,C},{});j.exports=function(C){z.here("tagger/person_step");let V="person-step";C.match("#Noun #LastName").firstTerm().canBe("#FirstName").tag("#FirstName","noun-lastname");let E=C.match("#FirstName #Noun").ifNo("^#Possessive").ifNo("#ClauseEnd .");E.lastTerm().canBe("#LastName").tag("#LastName","firstname-noun"),C.match("#Acronym #TitleCase").canBe("#Person").tag("#Person","acronym-titlecase"),C.match("#Noun van der? #Noun").canBe("#Person").tag("#Person","von der noun"),C.match("#FirstName de #Noun").canBe("#Person").tag("#Person","firstname-de-noun"),C.match("(king|queen|prince|saint|lady) of? #Noun").canBe("#Person").tag("#Person","king-of-noun"),C.match("#FirstName (bin|al) #Noun").canBe("#Person").tag("#Person","firstname-al-noun");let q=["will","may","april","june","said","rob","wade","ray","rusty","drew","miles","jack","chuck","randy","jan","pat","cliff","bill"];q="("+q.join("|")+")",C.match(q+" #LastName").firstTerm().tag("#FirstName",V),q=["green","white","brown","hall","young","king","hill","cook","gray","price"],q="("+q.join("|")+")",C.match("#FirstName "+q).tag("#Person",V),C.match("#FirstName #Acronym #TitleCase").tag("Person","firstname-acronym-titlecase"),C.match("#FirstName #FirstName #TitleCase").tag("Person","firstname-firstname-titlecase"),C.match("#Honorific #FirstName? #TitleCase").tag("Person","Honorific-TitleCase"),C.match("#Honorific #Acronym").tag("Person","Honorific-TitleCase"),C.match("#FirstName #TitleCase").match("#FirstName #Noun").tag("Person","firstname-titlecase"),C.match("#TitleCase (van|al|bin) #TitleCase").tag("Person","correction-titlecase-van-titlecase"),C.match("#TitleCase (de|du) la? #TitleCase").tag("Person","correction-titlecase-van-titlecase"),C.match("#FirstName the #Adjective").tag("Person","correction-determiner5"),C.match("#Person #TitleCase").match("#TitleCase #Noun").tag("Person","correction-person-titlecase"),C.match("#FirstName #Acronym #Noun").ifNo("#Date").tag("#Person",V).lastTerm().tag("#LastName",V),C.match("#TitleCase #Acronym? #LastName").ifNo("#Date").tag("#Person",V).lastTerm().tag("#LastName",V),C.match("#FirstName (#Singular|#Possessive)").ifNo("#Date").tag("#Person",V).lastTerm().tag("#LastName",V),C.match("(lady|queen|sister) #TitleCase").ifNo("#Date").tag("#FemaleName",V),C.match("(king|pope|father) #TitleCase").ifNo("#Date").tag("#MaleName","correction-poe"),C.match("#Person #Person the? #RomanNumeral").tag("Person","correction-roman-numeral");for(let D=0,O;D<C.terms.length-1;D++)O=C.terms[D],A[O.normal]&&C.terms[D+1]&&C.terms[D+1].tag.Person&&O.tagAs("Person","title-person");return C.match("#Person+").match("^#Honorific$").unTag("Person","single-honorific"),C}},{"../paths":165}],185:[function(P,j){"use strict";const z=P("../paths").log,A=function(C,V,E){C.terms.slice(V,E+1).forEach((q)=>{q.tagAs("Quotation","quotation_step")})};j.exports=(C)=>{z.here("tagger/person_step");for(let V=0,E;V<C.terms.length;V++)if(E=C.terms[V],E.text.match(/^["'\u201B\u201C\u2033\u201F\u2018]/))for(let q=0;q<C.terms.length&&C.terms[V+q]&&!(8<q);q++)if(C.terms[V+q].text.match(/.["'\u201D\u2036\u2019]([;:,.])?$/)){A(C,V,q+V),V+=q;break}return C}},{"../paths":165}],186:[function(P,j){"use strict";const z=P("../paths").log;let A=P("../paths").data.orgWords;A=A.reduce((V,E)=>{return V[E]=!0,V},{});const _=function(V){return!!V.tag.Noun&&(V.tag.Pronoun||V.tag.Comma||V.tag.Possessive?!1:V.tag.TitleCase||V.tag.Organization)};j.exports=(V)=>{z.here("tagger/organization_step");for(let E=0,q;E<V.terms.length;E++)if(q=V.terms[E],A[q.normal]){let D=V.terms[E-1];if(D&&_(D)){D.tagAs("Organization","org-word-1"),q.tagAs("Organization","org-word-2");continue}let O=V.terms[E+1];if(O&&"of"===O.normal&&V.terms[E+2]&&_(V.terms[E+2])){q.tagAs("Organization","org-word-1"),O.tagAs("Organization","org-word-2"),V.terms[E+2].tagAs("Organization","org-word-3");continue}}return V}},{"../paths":165}],187:[function(P,j){"use strict";const z=P("../paths").log,N=P("../../result/subset/nouns/isPlural");j.exports=function(C){z.here("tagger/plural");for(let V=0,E;V<C.terms.length;V++)if(E=C.terms[V],E.tag.Noun){if(E.tag.Singular||E.tag.Plural)continue;let q=N(E);q?E.tagAs("Plural","pluralStep"):!1===q&&E.tagAs("Singular","pluralStep")}return C}},{"../../result/subset/nouns/isPlural":90,"../paths":165}],188:[function(P,j){j.exports=/(?:0\u20E3\n1\u20E3|2\u20E3|3\u20E3|4\u20E3|5\u20E3|6\u20E3|7\u20E3|8\u20E3|9\u20E3|#\u20E3|\*\u20E3|\uD83C(?:\uDDE6\uD83C(?:\uDDE8|\uDDE9|\uDDEA|\uDDEB|\uDDEC|\uDDEE|\uDDF1|\uDDF2|\uDDF4|\uDDF6|\uDDF7|\uDDF8|\uDDF9|\uDDFA|\uDDFC|\uDDFD|\uDDFF)|\uDDE7\uD83C(?:\uDDE6|\uDDE7|\uDDE9|\uDDEA|\uDDEB|\uDDEC|\uDDED|\uDDEE|\uDDEF|\uDDF1|\uDDF2|\uDDF3|\uDDF4|\uDDF6|\uDDF7|\uDDF8|\uDDF9|\uDDFB|\uDDFC|\uDDFE|\uDDFF)|\uDDE8\uD83C(?:\uDDE6|\uDDE8|\uDDE9|\uDDEB|\uDDEC|\uDDED|\uDDEE|\uDDF0|\uDDF1|\uDDF2|\uDDF3|\uDDF4|\uDDF5|\uDDF7|\uDDFA|\uDDFB|\uDDFC|\uDDFD|\uDDFE|\uDDFF)|\uDDE9\uD83C(?:\uDDEA|\uDDEC|\uDDEF|\uDDF0|\uDDF2|\uDDF4|\uDDFF)|\uDDEA\uD83C(?:\uDDE6|\uDDE8|\uDDEA|\uDDEC|\uDDED|\uDDF7|\uDDF8|\uDDF9|\uDDFA)|\uDDEB\uD83C(?:\uDDEE|\uDDEF|\uDDF0|\uDDF2|\uDDF4|\uDDF7)|\uDDEC\uD83C(?:\uDDE6|\uDDE7|\uDDE9|\uDDEA|\uDDEB|\uDDEC|\uDDED|\uDDEE|\uDDF1|\uDDF2|\uDDF3|\uDDF5|\uDDF6|\uDDF7|\uDDF8|\uDDF9|\uDDFA|\uDDFC|\uDDFE)|\uDDED\uD83C(?:\uDDF0|\uDDF2|\uDDF3|\uDDF7|\uDDF9|\uDDFA)|\uDDEE\uD83C(?:\uDDE8|\uDDE9|\uDDEA|\uDDF1|\uDDF2|\uDDF3|\uDDF4|\uDDF6|\uDDF7|\uDDF8|\uDDF9)|\uDDEF\uD83C(?:\uDDEA|\uDDF2|\uDDF4|\uDDF5)|\uDDF0\uD83C(?:\uDDEA|\uDDEC|\uDDED|\uDDEE|\uDDF2|\uDDF3|\uDDF5|\uDDF7|\uDDFC|\uDDFE|\uDDFF)|\uDDF1\uD83C(?:\uDDE6|\uDDE7|\uDDE8|\uDDEE|\uDDF0|\uDDF7|\uDDF8|\uDDF9|\uDDFA|\uDDFB|\uDDFE)|\uDDF2\uD83C(?:\uDDE6|\uDDE8|\uDDE9|\uDDEA|\uDDEB|\uDDEC|\uDDED|\uDDF0|\uDDF1|\uDDF2|\uDDF3|\uDDF4|\uDDF5|\uDDF6|\uDDF7|\uDDF8|\uDDF9|\uDDFA|\uDDFB|\uDDFC|\uDDFD|\uDDFE|\uDDFF)|\uDDF3\uD83C(?:\uDDE6|\uDDE8|\uDDEA|\uDDEB|\uDDEC|\uDDEE|\uDDF1|\uDDF4|\uDDF5|\uDDF7|\uDDFA|\uDDFF)|\uDDF4\uD83C\uDDF2|\uDDF5\uD83C(?:\uDDE6|\uDDEA|\uDDEB|\uDDEC|\uDDED|\uDDF0|\uDDF1|\uDDF2|\uDDF3|\uDDF7|\uDDF8|\uDDF9|\uDDFC|\uDDFE)|\uDDF6\uD83C\uDDE6|\uDDF7\uD83C(?:\uDDEA|\uDDF4|\uDDF8|\uDDFA|\uDDFC)|\uDDF8\uD83C(?:\uDDE6|\uDDE7|\uDDE8|\uDDE9|\uDDEA|\uDDEC|\uDDED|\uDDEE|\uDDEF|\uDDF0|\uDDF1|\uDDF2|\uDDF3|\uDDF4|\uDDF7|\uDDF8|\uDDF9|\uDDFB|\uDDFD|\uDDFE|\uDDFF)|\uDDF9\uD83C(?:\uDDE6|\uDDE8|\uDDE9|\uDDEB|\uDDEC|\uDDED|\uDDEF|\uDDF0|\uDDF1|\uDDF2|\uDDF3|\uDDF4|\uDDF7|\uDDF9|\uDDFB|\uDDFC|\uDDFF)|\uDDFA\uD83C(?:\uDDE6|\uDDEC|\uDDF2|\uDDF8|\uDDFE|\uDDFF)|\uDDFB\uD83C(?:\uDDE6|\uDDE8|\uDDEA|\uDDEC|\uDDEE|\uDDF3|\uDDFA)|\uDDFC\uD83C(?:\uDDEB|\uDDF8)|\uDDFD\uD83C\uDDF0|\uDDFE\uD83C(?:\uDDEA|\uDDF9)|\uDDFF\uD83C(?:\uDDE6|\uDDF2|\uDDFC)))|[\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2648-\u2653\u2660\u2663\u2665\u2666\u2668\u267B\u267F\u2692-\u2694\u2696\u2697\u2699\u269B\u269C\u26A0\u26A1\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD79\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED0\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3]|\uD83E[\uDD10-\uDD18\uDD80-\uDD84\uDDC0]/g},{}],189:[function(P,j){j.exports={":(":!0,":)":!0,":P":!0,":p":!0,":O":!0,":3":!0,":|":!0,":/":!0,":\\":!0,":$":!0,":*":!0,":@":!0,":-(":!0,":-)":!0,":-P":!0,":-p":!0,":-O":!0,":-3":!0,":-|":!0,":-/":!0,":-\\":!0,":-$":!0,":-*":!0,":-@":!0,":^(":!0,":^)":!0,":^P":!0,":^p":!0,":^O":!0,":^3":!0,":^|":!0,":^/":!0,":^\\":!0,":^$":!0,":^*":!0,":^@":!0,"):":!0,"(:":!0,"$:":!0,"*:":!0,")-:":!0,"(-:":!0,"$-:":!0,"*-:":!0,")^:":!0,"(^:":!0,"$^:":!0,"*^:":!0,"<3":!0,"</3":!0,"<\\3":!0}},{}],190:[function(P,j){"use strict";j.exports={beforeThisWord:{there:"Verb",me:"Verb",man:"Adjective",only:"Verb",him:"Verb",were:"Noun",what:"Verb",took:"Noun",himself:"Verb",went:"Noun",who:"Noun",jr:"Person"},afterThisWord:{i:"Verb",first:"Noun",it:"Verb",there:"Verb",not:"Verb",because:"Noun",if:"Noun",but:"Noun",who:"Verb",this:"Noun",his:"Noun",when:"Noun",you:"Verb",very:"Adjective",old:"Noun",never:"Verb",before:"Noun"},beforeThisPos:{Copula:"Noun",PastTense:"Noun",Conjunction:"Noun",Modal:"Noun",PluperfectTense:"Noun",PerfectTense:"Verb"},afterThisPos:{Adjective:"Noun",Possessive:"Noun",Determiner:"Noun",Adverb:"Verb",Pronoun:"Verb",Value:"Noun",Ordinal:"Noun",Modal:"Verb",Superlative:"Noun",Demonym:"Noun",Organization:"Verb",Honorific:"Person"}}},{}],191:[function(P,j){"use strict";let z={"be onto":!0,"fall behind":!0,"fall through":!0,"fool with":!0,"get across":!0,"get along":!0,"get at":!0,"give way":!0,"hear from":!0,"hear of":!0,"keep from":!0,"lash into":!0,"make do":!0,"run across":!0,"set upon":!0,"take aback":!0};const N={away:"back","in":"out",on:"off",over:"under",together:"apart",up:"down"},A={away:"blow,bounce,bring,call,come,cut,drop,fire,get,give,go,keep,pass,put,run,send,shoot,switch,take,tie,throw","in":"bang,barge,bash,beat,block,book,box,break,bring,burn,butt,carve,cash,check,come,cross,drop,fall,fence,fill,give,grow,hand,hang,head,jack,keep,leave,let,lock,log,move,opt,pack,peel,pull,put,reach,ring,rub,send,set,settle,shut,sign,smash,snow,strike,take,try,turn,type,warm,wave,wean,wear,wheel",on:"add,call,carry,catch,count,feed,get,give,go,grind,head,hold,keep,lay,log,pass,pop,power,put,send,show,snap,switch,take,tell,try,turn,wait",over:"come,go,look,read,run,talk",together:"come,pull,put",up:"add,back,beat,bend,blow,boil,bottle,break,bring,buckle,bulk,bundle,call,carve,clean,cut,dress,fill,flag,fold,get,give,grind,grow,hang,hold,keep,let,load,lock,look,man,mark,melt,move,pack,pin,pipe,plump,pop,power,pull,put,rub,scale,scrape,send,set,settle,shake,show,sit,slow,smash,square,stand,strike,take,tear,tie,top,turn,use,wash,wind"};Object.keys(A).forEach(function(C){A[C].split(",").forEach(function(V){z[V+" "+C]=!0,z[V+" "+N[C]]=!0})});const _={about:"bring,fool,gad,go,root,mess",after:"go,look,take",ahead:"get,go,press",along:"bring,move",apart:"fall,take",around:"ask,boss,bring,call,come,fool,get,horse,joke,lie,mess,play",away:"back,carry,file,frighten,hide,wash",back:"fall,fight,hit,hold,look,pay,stand,think",by:"come,drop,get,go,stop,swear,swing,tick,zip",down:"bog,calm,fall,hand,hunker,jot,knock,lie,narrow,note,pat,pour,run,tone,trickle,wear","for":"fend,file,gun,hanker,root,shoot",forth:"bring,come",forward:"come,look","in":"cave,chip,hone,jump,key,pencil,plug,rein,shade,sleep,stop,suck,tie,trade,tuck,usher,weigh,zero",into:"look,run",it:"go,have",off:"auction,be,beat,blast,block,brush,burn,buzz,cast,cool,drop,end,face,fall,fend,frighten,goof,jack,kick,knock,laugh,level,live,make,mouth,nod,pair,pay,peel,read,reel,ring,rip,round,sail,shave,shoot,sleep,slice,split,square,stave,stop,storm,strike,tear,tee,tick,tip,top,walk,work,write",on:"bank,bargain,frown,hit,latch,pile,prattle,press,spring,spur,tack,urge,yammer",out:"act,ask,back,bail,bear,black,blank,bleed,blow,blurt,branch,buy,cancel,cut,eat,edge,farm,figure,find,fill,find,fish,fizzle,flake,flame,flare,flesh,flip,geek,get,help,hide,hold,iron,knock,lash,level,listen,lose,luck,make,max,miss,nerd,pan,pass,pick,pig,point,print,psych,rat,read,rent,root,rule,run,scout,see,sell,shout,single,sit,smoke,sort,spell,splash,stamp,start,storm,straighten,suss,time,tire,top,trip,trot,wash,watch,weird,whip,wimp,wipe,work,zone,zonk",over:"bend,bubble,do,fall,get,gloss,hold,keel,mull,pore,sleep,spill,think,tide,tip",round:"get,go",through:"go,run",to:"keep,see",up:"act,beef,board,bone,boot,brighten,build,buy,catch,cheer,cook,end,eye,face,fatten,feel,fess,fill,fuck,fish,finish,fire,firm,flame,flare,free,freeze,freshen,fry,fuel,gang,gear,goof,hack,ham,heat,hit,hole,hush,jazz,juice,lap,light,lighten,line,link,listen,live,loosen,make,mash,measure,mess,mix,mock,mop,muddle,open,own,pair,patch,pick,prop,psych,read,rough,rustle,save,shack,sign,size,slice,slip,snap,sober,spark,split,spruce,stack,start,stay,stir,stitch,straighten,string,suck,suit,sum,step,team,tee,think,tidy,tighten,toss,trade,trip,type,vacuum,wait,wake,warm,weigh,whip,wire,wise,word,write,zip"};Object.keys(_).forEach(function(C){_[C].split(",").forEach(function(V){z[V+" "+C]=!0})}),j.exports=z},{}],192:[function(P,j){j.exports=[["^#[a-z]+","HashTag"],["[a-z]+n'","Gerund"],["[a-z]+s'","Possessive"],["[0-9]{3}-[0-9]{4}","PhoneNumber"],["\\(?[0-9]{3}\\)?[ -]?[0-9]{3}-[0-9]{4}","PhoneNumber"],["[012]?[0-9](:[0-5][0-9])(:[0-5][0-9])","Time"],["[012]?[0-9](:[0-5][0-9])?(:[0-5][0-9])? ?(am|pm)","Time"],["[012]?[0-9](:[0-5][0-9])(:[0-5][0-9])? ?(am|pm)?","Time"],["[PMCE]ST","Time"],["utc ?[+-]?[0-9]+?","Time"],["[a-z0-9]*? o'?clock","Time"],["[0-9]{1,4}[/\\-\\.][0-9]{1,2}[/\\-\\.][0-9]{1,4}","Date"],["^[-+]?[$\u20AC\xA5\xA3][0-9]+(.[0-9]{1,2})?$","Money"],["^[-+]?[$\u20AC\xA5\xA3][0-9]{1,3}(,[0-9]{3})+(.[0-9]{1,2})?$","Money"],["[0-9]{1,4}(st|nd|rd|th)?-[0-9]{1,4}(st|nd|rd|th)?","NumberRange"],["^[-+]?[0-9]{1,3}(,[0-9]{3})+(.[0-9]+)?$","NiceNumber"],["^[-+]?[0-9]+(.[0-9]+)?$","NumericValue"],["[0-9]{1,4}/[0-9]{1,4}","Fraction"],["[0-9]{1,2}-[0-9]{1,2}","Value"],["ma?c'.*","LastName"],["o'[drlkn].*","LastName"]].map(function(z){return{reg:new RegExp("^"+z[0]+"$","i"),tag:z[1],str:z[0]}})},{}],193:[function(P,j){"use strict";const z="Adjective",N="Infinitive",A="PresentTense",_="Singular",C="PastTense",V="Adverb",E="Expression",q="Plural",D="Actor",O="Verb",M="Noun",F="LastName";j.exports=[["^[0-9]+ ?(am|pm)$","Date"],["[0-9](st|nd|rd|r?th)$","Ordinal"],["([0-9])([a-z]{1,2})$","Cardinal"],["^[0-9,.]+$","Cardinal"],["^[a-z]et$",O],["cede$",N],[".[cts]hy$",z],[".[st]ty$",z],[".[lnr]ize$",N],[".[gk]y$",z],[".fies$",A],["ities$",q],[".some$",z],[".[nrtumcd]al$",z],[".que$",z],[".[tnl]ary$",z],[".[di]est$","Superlative"],["^(un|de|re)\\-[a-z]..",O],[".lar$",z],["[bszmp]{2}y",z],[".zes$",A],[".[icldtgrv]ent$",z],[".[rln]ates$",A],[".[oe]ry$",_],["[rdntkbhs]ly$",V],[".[lsrnpb]ian$",z],[".[^aeiou]ial$",z],[".[^aeiou]eal$",z],[".[vrl]id$",z],[".[ilk]er$","Comparative"],[".ike$",z],[".ends?$",O],[".wards$",V],[".rmy$",z],[".rol$",_],[".tors$",M],[".azy$",z],[".where$",V],[".ify$",N],[".bound$",z],[".[^z]ens$",O],[".oid$",z],[".vice$",_],[".rough$",z],[".mum$",z],[".teen(th)?$","Value"],[".oses$",A],[".ishes$",A],[".ects$",A],[".tieth$","Ordinal"],[".ices$",q],[".tage$",N],[".ions$",q],[".tion$",_],[".ean$",z],[".[ia]sed$",z],[".urned",C],[".tized$",C],[".[aeiou][td]ed",C],[".llen$",z],[".fore$",V],[".ances$",q],[".gate$",N],[".nes$",A],[".less$",V],[".ried$",z],[".gone$",z],[".made$",z],[".ing$","Gerund"],[".tures$",q],[".ous$",z],[".ports$",q],[". so$",V],[".ints$",q],[".[gt]led$",z],[".lked$",C],[".fully$",V],[".*ould$","Modal"],["^[-+]?[0-9]+(.[0-9]+)?$","NumericValue"],["[a-z]*\\-[a-z]*\\-",z],["[a-z]'s$",M],[".'n$",O],[".'re$","Copula"],[".'ll$","Modal"],[".'t$",O],[".tches$",A],["^https?:?//[a-z0-9]","Url"],["^www.[a-z0-9]","Url"],[".ize$",N],[".[^aeiou]ise$",N],[".[aeiou]te$",N],[".ea$",_],["[aeiou][pns]er$",_],[".ia$",M],[".sis$",_],[".[aeiou]na$",M],[".[^aeiou]ity$",_],[".[^aeiou]ium$",_],[".[^aeiou][ei]al$",z],[".ffy$",z],[".[^aeiou]ic$",z],[".(gg|bb|zz)ly$",z],[".[aeiou]my$",z],[".[^aeiou][ai]ble$",z],[".[^aeiou]eable$",z],[".[^aeiou]ful$",z],[".[^aeiouf]ish$",z],[".[^aeiou]ica$",_],["[aeiou][^aeiou]is$",_],["[^aeiou]ard$",_],["[^aeiou]ism$",_],[".[^aeiou]ity$",_],[".[^aeiou]ium$",_],[".[lstrn]us$",_],["..ic$",z],["[aeiou][^aeiou]id$",z],[".[^aeiou]ive$",z],["[ea]{2}zy$",z],["[^aeiou]ician$",D],[".keeper$",D],[".logist$",D],["..ier$",D],[".ettes$",q],[".ette$",_],[".[^aeiou][ao]pher$",D],[".tive$",D],["[aeiou].*ist$",z],["(over|under)[a-z]{2,}$",z],["[^i]fer$",N],["[aeiou]c?ked$",C],["(eastern|central|mountain|pacific)( standard)? time","Time"],["^um+$",E],["^([hyj]a)+$",E],["^(k)+$",E],["^(yo)+$",E],["^yes+$",E],["^no+$",E],["^lol[sz]$",E],["^woo+[pt]?$",E],["^ug?h+$",E],["^uh[ -]?oh$",E],["^ma?cd[aeiou]",F],[".sdottir$",F],[".sson$",F],[".[oau][wvl]ski$",F],[".[oau][wvl]ska$",F],[".czyk$",F],[".marek$",F],[".[^aeiou][ai][kln]ov$",F],["..chuk$",F],["..enko$",F],[".v[iy]ch$",F],[".opoulos$",F],[".akis$",F],[".auskas$",F],[".nss?en$",F]].map(function(W){return{reg:new RegExp(W[0]),tag:W[1],str:W[0]}})},{}],194:[function(P,j){const z={blue:["Noun","Plural","Singular","Pronoun","Possessive","Place","Person","City"],red:["Value","Ordinal","Cardinal","TextValue","NumericValue"],green:["Verb","Auxillary","Negative","PastTense","PresentTense","FutureTense","Modal","Infinitive","Gerund","Copula","Participle"],cyan:["Preposition","Conjunction","Determiner"],black:["Adjective","Adverb"]};j.exports=Object.keys(z).reduce((N,A)=>{return z[A].forEach((_)=>{N[_]=A}),N},{})},{}],195:[function(P,j){"use strict";const z=[["Noun","Verb","Adjective","Adverb","Determiner","Conjunction","Preposition","QuestionWord","Expression","Url","PhoneNumber","Email","Emoji"],["Person","Organization","Value","Place","Actor","Demonym","Pronoun"],["Plural","Singular"],["Plural","Person"],["Plural","Organization"],["Plural","Currency"],["Plural","Ordinal"],["MaleName","FemaleName"],["FirstName","LastName","Honorific"],["Comparative","Superlative"],["Value","Verb","Adjective"],["Ordinal","Cardinal"],["TextValue","NumericValue"],["NiceNumber","TextValue"],["Ordinal","Currency"],["PastTense","PerfectTense","Pluperfect","FuturePerfect","Copula","Modal","Participle","Infinitive","Gerund"],["Month","WeekDay","Year","Duration"],["Particle","Conjunction","Adverb","Preposition"],["Date","Verb","Adjective","Person"],["NounPhrase","VerbPhrase","AdjectivePhrase","ConditionalPhrase"],["Value","Determiner"],["Verb","NounPhrase"],["Noun","VerbPhrase"],["RomanNumeral","Fraction","NiceNumber"],["RomanNumeral","Money"],["UpperCase","TitleCase","CamelCase"]];j.exports=(A)=>{let _=[];for(let C=0;C<z.length;C++)-1!==z[C].indexOf(A)&&(_=_.concat(z[C]));return _.filter((C)=>C!==A)}},{}],196:[function(P,j){"use strict";const z=P("./conflicts"),N=P("./tree"),A={Month:"Singular",Time:"Noun",WeekDay:"Noun",Duration:"Noun",NumberRange:"Contraction"},_=(V)=>{if(!0===V)return[];let E=Object.keys(V||{});return E.forEach((q)=>{if("object"==typeof V[q]){let D=Object.keys(V[q]);D.forEach((O)=>{if("object"==typeof V[q][O]){let M=Object.keys(V[q][O]);E=E.concat(M)}}),E=E.concat(D)}}),E};j.exports=function(){let V={};const E=(q,D)=>{Object.keys(q).forEach((O)=>{D=D.slice(0),V[O]={parents:D,children:_(q[O])},!0!==q[O]&&E(q[O],D.concat([O]))})};return E(N,[]),Object.keys(V).forEach((q)=>{A[q]&&V[q].parents.push(A[q])}),Object.keys(V).forEach((q)=>{V[q].not=z(q);let D=V[q].parents;for(let O=0,M;O<D.length;O++)M=z(D[O]),V[q].not=V[q].not.concat(M)}),V}()},{"./conflicts":195,"./tree":197}],197:[function(P,j){j.exports={Noun:{Singular:{Person:{FirstName:{MaleName:!0,FemaleName:!0},LastName:!0,Honorific:!0},Place:{Country:!0,City:!0,Address:!0},Organization:{SportsTeam:!0,Company:!0,School:!0}},Plural:!0,Pronoun:!0,Actor:!0,Unit:!0,Demonym:!0,Possessive:!0},Date:{Month:!0,WeekDay:!0,RelativeDay:!0,Year:!0,Duration:!0,Time:!0,Holiday:!0},Verb:{PresentTense:{Infinitive:!0,Gerund:!0},PastTense:!0,PerfectTense:!0,FuturePerfect:!0,Pluperfect:!0,Copula:!0,Modal:!0,Participle:!0,Particle:!0},Adjective:{Comparative:!0,Superlative:!0},Adverb:!0,Value:{Ordinal:!0,Cardinal:{RomanNumeral:!0},Fraction:!0,TextValue:!0,NumericValue:!0,NiceNumber:!0,Money:!0,NumberRange:!0},Currency:!0,Determiner:!0,Conjunction:!0,Preposition:!0,QuestionWord:!0,Expression:!0,Url:!0,PhoneNumber:!0,HashTag:!0,Emoji:!0,Email:!0,Condition:!0,Auxillary:!0,Negative:!0,Contraction:!0,TitleCase:!0,CamelCase:!0,UpperCase:!0,Hyphenated:!0,Acronym:!0,ClauseEnd:!0,Quotation:!0}},{}],198:[function(P,j){"use strict";const z=P("./paths").fns,N=P("./whitespace"),A=P("./makeUID");class _{constructor(C){this._text=z.ensureString(C),this.tag={};let V=N(this._text);this.whitespace=V.whitespace,this._text=V.text,this.parent=null,this.silent_term="",this.dirty=!1,this.normalize(),this.uid=A(this.normal)}set text(C){C=C||"",this._text=C.trim(),this.dirty=!0,this._text!==C&&(this.whitespace=N(C)),this.normalize()}get text(){return this._text}get isA(){return"Term"}index(){let C=this.parentTerms;return C?C.terms.indexOf(this):null}clone(){let C=new _(this._text,null);return C.tag=z.copy(this.tag),C.whitespace=z.copy(this.whitespace),C.silent_term=this.silent_term,C}}_=P("./methods/normalize")(_),_=P("./methods/isA")(_),_=P("./methods/out")(_),_=P("./methods/tag")(_),_=P("./methods/case")(_),_=P("./methods/punctuation")(_),j.exports=_},{"./makeUID":199,"./methods/case":200,"./methods/isA":201,"./methods/normalize":202,"./methods/out":206,"./methods/punctuation":208,"./methods/tag":209,"./paths":213,"./whitespace":214}],199:[function(P,j){"use strict";j.exports=(N)=>{let A="";for(let _=0;5>_;_++)A+=parseInt(9*Math.random(),10);return N+"-"+A}},{}],200:[function(P,j){"use strict";j.exports=(N)=>{const A={toUpperCase:function(){return this.text=this.text.toUpperCase(),this.tagAs("#UpperCase","toUpperCase"),this},toLowerCase:function(){return this.text=this.text.toLowerCase(),this.unTag("#TitleCase"),this.unTag("#UpperCase"),this},toTitleCase:function(){return this.text=this.text.replace(/^[a-z]/,(_)=>_.toUpperCase()),this.tagAs("#TitleCase","toTitleCase"),this},needsTitleCase:function(){const _=["Person","Place","Organization","Acronym","UpperCase","Currency","RomanNumeral","Month","WeekDay","Holiday","Demonym"];for(let V=0;V<_.length;V++)if(this.tag[_[V]])return!0;const C=["i","god","allah"];for(let V=0;V<C.length;V++)if(this.normal===C[V])return!0;return!1}};return Object.keys(A).forEach((_)=>{N.prototype[_]=A[_]}),N}},{}],201:[function(P,j){"use strict";j.exports=(N)=>{const A={isAcronym:function(){return!!this.text.match(/([A-Z]\.)+[A-Z]?$/)||!!this.text.match(/^[A-Z]\.$/)||!!this.text.match(/[A-Z]{3}$/)},isWord:function(){let _=this;if(_.silent_term)return!0;if(!_.text.match(/[a-z|0-9]/i))return!1;if(_.normal.match(/[a-z]/)&&1<_.normal.length&&!_.normal.match(/[aeiouy]/i))return!1;if(_.normal.match(/[0-9]/)){if(_.normal.match(/[a-z][0-9][a-z]/))return!1;if(!_.normal.match(/^([$-])*?([0-9,\.])*?([s\$%])*?$/))return!1}return!0}};return Object.keys(A).forEach((_)=>{N.prototype[_]=A[_]}),N}},{}],202:[function(P,j){"use strict";const z=P("./normalize").addNormal,N=P("./root");j.exports=(_)=>{const C={normalize:function(){return z(this),N(this),this}};return Object.keys(C).forEach((V)=>{_.prototype[V]=C[V]}),_}},{"./normalize":203,"./root":204}],203:[function(P,j,$){"use strict";const z=P("./unicode");$.normalize=function(N){return N=N||"",N=N.toLowerCase(),N=N.trim(),N=z(N),N=N.replace(/^[#@]/,""),N=N.replace(/[\u2018\u2019\u201A\u201B\u2032\u2035]+/g,"'"),N=N.replace(/[\u201C\u201D\u201E\u201F\u2033\u2036"]+/g,""),N=N.replace(/\u2026/g,"..."),N.match(/^[:;]/)||(N=N.replace(/\.{3,}$/g,""),N=N.replace(/['",\.!:;\?\)]$/g,""),N=N.replace(/^['"\(]/g,"")),N},$.addNormal=function(N){let A=N._text||"";A=$.normalize(A),N.isAcronym()&&(A=A.replace(/\./g,"")),A=A.replace(/([0-9]),([0-9])/g,"$1$2"),N.normal=A}},{"./unicode":205}],204:[function(P,j){"use strict";j.exports=function(N){let A=N.normal||N.silent_term||"";A=A.replace(/'s\b/,""),A=A.replace(/'\b/,""),N.root=A}},{}],205:[function(P,j){"use strict";let z={"!":"\xA1","?":"\xBF\u0241",a:"\xAA\xC0\xC1\xC2\xC3\xC4\xC5\xE0\xE1\xE2\xE3\xE4\xE5\u0100\u0101\u0102\u0103\u0104\u0105\u01CD\u01CE\u01DE\u01DF\u01E0\u01E1\u01FA\u01FB\u0200\u0201\u0202\u0203\u0226\u0227\u023A\u0386\u0391\u0394\u039B\u03AC\u03B1\u03BB\u0410\u0414\u0430\u0434\u0466\u0467\u04D0\u04D1\u04D2\u04D3\u019B\u0245\xE6",b:"\xDF\xFE\u0180\u0181\u0182\u0183\u0184\u0185\u0243\u0392\u03B2\u03D0\u03E6\u0411\u0412\u042A\u042C\u0431\u0432\u044A\u044C\u0462\u0463\u048C\u048D\u0494\u0495\u01A5\u01BE",c:"\xA2\xA9\xC7\xE7\u0106\u0107\u0108\u0109\u010A\u010B\u010C\u010D\u0186\u0187\u0188\u023B\u023C\u037B\u037C\u037D\u03F2\u03F9\u03FD\u03FE\u03FF\u0404\u0421\u0441\u0454\u0480\u0481\u04AA\u04AB",d:"\xD0\u010E\u010F\u0110\u0111\u0189\u018A\u0221\u018B\u018C\u01F7",e:"\xC8\xC9\xCA\xCB\xE8\xE9\xEA\xEB\u0112\u0113\u0114\u0115\u0116\u0117\u0118\u0119\u011A\u011B\u018E\u018F\u0190\u01DD\u0204\u0205\u0206\u0207\u0228\u0229\u0246\u0247\u0388\u0395\u039E\u03A3\u03AD\u03B5\u03BE\u03F1\u03F5\u03F6\u0400\u0401\u0415\u042D\u0435\u0450\u0451\u04BC\u04BD\u04BE\u04BF\u04D6\u04D7\u04D8\u04D9\u04DA\u04DB\u04EC\u04ED",f:"\u0191\u0192\u03DC\u03DD\u04FA\u04FB\u0492\u0493\u04F6\u04F7\u017F",g:"\u011C\u011D\u011E\u011F\u0120\u0121\u0122\u0123\u0193\u01E4\u01E5\u01E6\u01E7\u01F4\u01F5",h:"\u0124\u0125\u0126\u0127\u0195\u01F6\u021E\u021F\u0389\u0397\u0402\u040A\u040B\u041D\u043D\u0452\u045B\u04A2\u04A3\u04A4\u04A5\u04BA\u04BB\u04C9\u04CA",I:"\xCC\xCD\xCE\xCF",i:"\xEC\xED\xEE\xEF\u0128\u0129\u012A\u012B\u012C\u012D\u012E\u012F\u0130\u0131\u0196\u0197\u0208\u0209\u020A\u020B\u038A\u0390\u03AA\u03AF\u03B9\u03CA\u0406\u0407\u0456\u0457",j:"\u0134\u0135\u01F0\u0237\u0248\u0249\u03F3\u0408\u0458",k:"\u0136\u0137\u0138\u0198\u0199\u01E8\u01E9\u039A\u03BA\u040C\u0416\u041A\u0436\u043A\u045C\u049A\u049B\u049C\u049D\u049E\u049F\u04A0\u04A1",l:"\u0139\u013A\u013B\u013C\u013D\u013E\u013F\u0140\u0141\u0142\u019A\u01AA\u01C0\u01CF\u01D0\u0234\u023D\u0399\u04C0\u04CF",m:"\u039C\u03FA\u03FB\u041C\u043C\u04CD\u04CE",n:"\xD1\xF1\u0143\u0144\u0145\u0146\u0147\u0148\u0149\u014A\u014B\u019D\u019E\u01F8\u01F9\u0220\u0235\u039D\u03A0\u03AE\u03B7\u03DE\u040D\u0418\u0419\u041B\u041F\u0438\u0439\u043B\u043F\u045D\u048A\u048B\u04C5\u04C6\u04E2\u04E3\u04E4\u04E5\u03C0",o:"\xD2\xD3\xD4\xD5\xD6\xD8\xF0\xF2\xF3\xF4\xF5\xF6\xF8\u014C\u014D\u014E\u014F\u0150\u0151\u019F\u01A0\u01A1\u01D1\u01D2\u01EA\u01EB\u01EC\u01ED\u01FE\u01FF\u020C\u020D\u020E\u020F\u022A\u022B\u022C\u022D\u022E\u022F\u0230\u0231\u038C\u0398\u039F\u03B8\u03BF\u03C3\u03CC\u03D5\u03D8\u03D9\u03EC\u03ED\u03F4\u041E\u0424\u043E\u0472\u0473\u04E6\u04E7\u04E8\u04E9\u04EA\u04EB\xA4\u018D\u038F",p:"\u01A4\u01BF\u03A1\u03C1\u03F7\u03F8\u03FC\u0420\u0440\u048E\u048F\xDE",q:"\u024A\u024B",r:"\u0154\u0155\u0156\u0157\u0158\u0159\u01A6\u0210\u0211\u0212\u0213\u024C\u024D\u0403\u0413\u042F\u0433\u044F\u0453\u0490\u0491",s:"\u015A\u015B\u015C\u015D\u015E\u015F\u0160\u0161\u01A7\u01A8\u0218\u0219\u023F\u03C2\u03DA\u03DB\u03DF\u03E8\u03E9\u0405\u0455",t:"\u0162\u0163\u0164\u0165\u0166\u0167\u01AB\u01AC\u01AD\u01AE\u021A\u021B\u0236\u023E\u0393\u03A4\u03C4\u03EE\u03EF\u0422\u0442\u0482\u04AC\u04AD",u:"\xB5\xD9\xDA\xDB\xDC\xF9\xFA\xFB\xFC\u0168\u0169\u016A\u016B\u016C\u016D\u016E\u016F\u0170\u0171\u0172\u0173\u01AF\u01B0\u01B1\u01B2\u01D3\u01D4\u01D5\u01D6\u01D7\u01D8\u01D9\u01DA\u01DB\u01DC\u0214\u0215\u0216\u0217\u0244\u03B0\u03BC\u03C5\u03CB\u03CD\u03D1\u040F\u0426\u0427\u0446\u045F\u04B4\u04B5\u04B6\u04B7\u04CB\u04CC\u04C7\u04C8",v:"\u03BD\u0474\u0475\u0476\u0477",w:"\u0174\u0175\u019C\u03C9\u03CE\u03D6\u03E2\u03E3\u0428\u0429\u0448\u0449\u0461\u047F",x:"\xD7\u03A7\u03C7\u03D7\u03F0\u0425\u0445\u04B2\u04B3\u04FC\u04FD\u04FE\u04FF",y:"\xDD\xFD\xFF\u0176\u0177\u0178\u01B3\u01B4\u0232\u0233\u024E\u024F\u038E\u03A5\u03AB\u03B3\u03C8\u03D2\u03D3\u03D4\u040E\u0423\u0443\u0447\u045E\u0470\u0471\u04AE\u04AF\u04B0\u04B1\u04EE\u04EF\u04F0\u04F1\u04F2\u04F3",z:"\u0179\u017A\u017B\u017C\u017D\u017E\u01A9\u01B5\u01B6\u0224\u0225\u0240\u0396\u03B6"},N={};Object.keys(z).forEach(function(_){z[_].split("").forEach(function(C){N[C]=_})});j.exports=(_)=>{let C=_.split("");return C.forEach((V,E)=>{N[V]&&(C[E]=N[V])}),C.join("")}},{}],206:[function(P,j){"use strict";const z=P("./renderHtml"),N=P("../../paths").fns,A={text:function(C){return C.whitespace.before+C._text+C.whitespace.after},normal:function(C){return C.normal},root:function(C){return C.root||C.normal},html:function(C){return z(C)},tags:function(C){return{text:C.text,normal:C.normal,tags:Object.keys(C.tag)}},debug:function(C){let V=Object.keys(C.tag).map((D)=>{return N.printTag(D)}).join(", "),E=C.text;E="'"+N.yellow(E||"-")+"'",C.dirty;let q="";C.silent_term&&(q="["+C.silent_term+"]"),E=N.leftPad(E,25),E+=N.leftPad(q,5),console.log("   "+E+"        - "+V)}};j.exports=(C)=>{return C.prototype.out=function(V){return A[V]||(V="text"),A[V](this)},C}},{"../../paths":213,"./renderHtml":207}],207:[function(P,j){"use strict";const z=(_)=>{const C={"<":"&lt;",">":"&gt;","&":"&amp;","\"":"&quot;","'":"&#39;"," ":"&nbsp;"};return _.replace(/[<>&"' ]/g,function(V){return C[V]})},N=(_)=>{const V=/<(?:!--(?:(?:-*[^->])*--+|-?)|script\b(?:[^"'>]|"[^"]*"|'[^']*')*>[\s\S]*?<\/script\s*|style\b(?:[^"'>]|"[^"]*"|'[^']*')*>[\s\S]*?<\/style\s*|\/?[a-z](?:[^"'>]|"[^"]*"|'[^']*')*)>/gi;let E;do E=_,_=_.replace(V,"");while(_!==E);return _.replace(/</g,"&lt;")};j.exports=function(_){let C=Object.keys(_.tag).filter((q)=>"Term"!==q);C=C.map((q)=>"nl-"+q),C=C.join(" ");let V=N(_.text);V=z(V);let E="<span class=\""+C+"\">"+V+"</span>";return z(_.whitespace.before)+E+z(_.whitespace.after)}},{}],208:[function(P,j){"use strict";j.exports=(N)=>{const A={endPunctuation:function(){let _=this.text.match(/[a-z]([,:;\/.(\.\.\.)\!\?]+)$/i);if(_){if({",":"comma",":":"colon",";":"semicolon",".":"period","...":"elipses","!":"exclamation","?":"question"}[_[1]])return _[1]}return null},setPunctuation:function(_){return this.text=this.text.replace(/[a-z]([,:;\/.(\.\.\.)\!\?]+)$/i,""),this.text+=_,this},hasComma:function(){return"comma"===this.endPunctuation()},killPunctuation:function(){return this.text=this._text.replace(/([,:;\/.(\.\.\.)\!\?]+)$/,""),this}};return Object.keys(A).forEach((_)=>{N.prototype[_]=A[_]}),N}},{}],209:[function(P,j){"use strict";const z=P("./setTag"),N=P("./unTag"),A=P("./paths").tags;j.exports=(C)=>{const V={tagAs:function(E,q){z(this,E,q)},unTag:function(E,q){N(this,E,q)},canBe:function(E){E=E||"",E=E.replace(/^#/,"");let q=A[E].not||[];for(let D=0;D<q.length;D++)if(this.tag[q[D]])return!1;return!0}};return Object.keys(V).forEach((E)=>{C.prototype[E]=V[E]}),C}},{"./paths":210,"./setTag":211,"./unTag":212}],210:[function(P,j,$){arguments[4][119][0].apply($,arguments)},{"../../paths":213,dup:119}],211:[function(P,j){"use strict";const z=P("./paths"),N=z.log,A=z.tags,_=P("./unTag"),C=(q,D,O)=>{if(A[D]){let M=A[D].not||[];for(let F=0;F<M.length;F++)_(q,M[F],O)}},V=(q,D,O)=>{q.tag[D]||(O=O||"",C(q,D,O),N.tagAs(q,D,O),q.tag[D]=!0)};j.exports=function(q,D,O){if(q&&D&&"string"==typeof D&&(D=D||"",D=D.replace(/^#/,""),V(q,D,O),A[D])){let M=A[D].parents||[];for(let F=0;F<M.length;F++)V(q,M[F],"-")}}},{"./paths":210,"./unTag":212}],212:[function(P,j){"use strict";const z=P("./paths"),N=z.log,A=z.tags,_=(V,E,q)=>{V.tag[E]&&(N.tell("   --"+E+" "+(q||"")),delete V.tag[E])};j.exports=(V,E,q)=>{if(V&&E&&(_(V,E,q),A[E])){let D=A[E].children||[];for(let O=0;O<D.length;O++){_(V,D[O],q);let M=A[D[O]].children||[];for(let F=0;F<M.length;F++)_(V,M[F],q)}}}},{"./paths":210}],213:[function(P,j){j.exports={fns:P("../fns"),log:P("../log"),data:P("../data"),tags:P("../tags")}},{"../data":8,"../fns":40,"../log":42,"../tags":196}],214:[function(P,j){"use strict";j.exports=(N)=>{let A={before:"",after:""},_=N.match(/^(\s|-+|\.\.+)+/);return _&&(A.before=_[0],N=N.replace(/^(\s|-+|\.\.+)+/,"")),_=N.match(/(\s+|-+|\.\.+)$/),_&&(N=N.replace(/(\s+|-+|\.\.+)$/,""),A.after=_[0]),{whitespace:A,text:N}}},{}],215:[function(P,j){"use strict";const z=P("../term"),N={"-":!0,"--":!0,"...":!0};j.exports=function(_){let C=[];_=_||"","number"==typeof _&&(_=""+_);let V=_.split(/(\S+)/),E=[];for(let D=0;D<V.length;D++){let O=V[D],M=O.match(/^([a-z]+)(-)([a-z0-9].*)/i);if(M){let F=O.split("-");for(let W=0;W<F.length;W++)W===F.length-1?E.push(F[W]):E.push(F[W]+"-")}else E.push(O)}let q="";for(let D=0;D<E.length;D++)E[D].match(/\S/)&&!N[E[D]]?(C.push(q+E[D]),q=""):q+=E[D];return q&&0<C.length&&(C[C.length-1]+=q),C.map((D)=>new z(D))}},{"../term":198}],216:[function(P,j){"use strict";const z=P("../tagger"),N=P("./build");class A{constructor(_,C,V,E){this.terms=_,this.lexicon=C,this.refText=V,this._refTerms=E,this.count=void 0,this.get=(q)=>{return this.terms[q]}}get found(){return 0<this.terms.length}get length(){return this.terms.length}get isA(){return"Terms"}get refTerms(){return this._refTerms||this}set refTerms(_){return this._refTerms=_,this}set dirty(_){this.terms.forEach((C)=>{C.dirty=_})}posTag(){return z(this),this}firstTerm(){return this.terms[0]}lastTerm(){return this.terms[this.terms.length-1]}get parent(){return this.refText||this}set parent(_){return this.refText=_,this}get parentTerms(){return this.refTerms||this}set parentTerms(_){return this.refTerms=_,this}all(){return this.parent}data(){return{text:this.out("text"),normal:this.out("normal")}}get whitespace(){return{before:(_)=>{return this.firstTerm().whitespace.before=_,this},after:(_)=>{return this.lastTerm().whitespace.after=_,this}}}static fromString(_,C){let V=N(_),E=new A(V,C,null);return E.terms.forEach((q)=>{q.parentTerms=E}),E.posTag(),E}}A=P("./match")(A),A=P("./match/not")(A),A=P("./methods/tag")(A),A=P("./methods/loops")(A),A=P("./methods/delete")(A),A=P("./methods/insert")(A),A=P("./methods/misc")(A),A=P("./methods/out")(A),A=P("./methods/replace")(A),A=P("./methods/split")(A),A=P("./methods/transform")(A),j.exports=A},{"../tagger":160,"./build":215,"./match":217,"./match/not":223,"./methods/delete":224,"./methods/insert":225,"./methods/loops":226,"./methods/misc":227,"./methods/out":228,"./methods/replace":229,"./methods/split":230,"./methods/tag":231,"./methods/transform":232}],217:[function(P,j){"use strict";const z=P("./lib/syntax"),N=P("./lib/startHere"),A=P("../../result/index");j.exports=(C)=>{const V=function(O,M){let F=O.terms.filter((W)=>M[W.normal]);return F=F.map((W)=>{return new C([W],O.lexicon,O.refText,O.refTerms)}),new A(F,O.lexicon,O.parent)},E=function(O,M){let F=M.reduce((W,G)=>{return W[G]=!0,W},{});return V(O,F)},q=function(O,M,F){let W=[],G=z(M);for(let S=0,I;S<O.terms.length&&!(G[0]&&G[0].starting&&0<S);S++)if(I=N(O,S,G,F),I){W.push(I);let L=I.length-1;S+=L}return W=W.map((S)=>{return new C(S,O.lexicon,O.refText,O.refTerms)}),new A(W,O.lexicon,O.parent)},D={match:function(O,M){if("string"==typeof O)return q(this,O,M);if("object"==typeof O){let F=Object.prototype.toString.call(O);if("[object Array]"===F)return E(this,O,M);if("[object Object]"===F)return V(this,O,M)}return this},matchOne:function(O){let M=z(O);for(let F=0,W;F<this.terms.length&&!(M[0]&&M[0].starting&&0<F);F++)if(W=N(this,F,M),W)return W;return null},has:function(O){let M=this.matchOne(O);return!!M}};return Object.keys(D).forEach((O)=>{C.prototype[O]=D[O]}),C}},{"../../result/index":44,"./lib/startHere":221,"./lib/syntax":222}],218:[function(P,j){"use strict";const z=P("./paths").fns,N=(_,C)=>{if(!_||!C)return!1;if(C.anyOne)return!0;if(C.tag){for(let V=0,E;V<C.tag.length;V++)if(E=C.tag[V],_.tag[E])return!0;return!1}if(C.oneOf){for(let V=0,E;V<C.oneOf.length;V++)if(E=C.oneOf[V],E.match(/^#/)){let q=E.replace(/^#/,"");if(q=z.titleCase(q),_.tag[q])return!0}else if(_.normal===E||_.text===E)return!0;return!1}if(C.normal){if(_.normal===C.normal||_.text===C.normal||_.root===C.normal)return!0;if(_.silent_term===C.normal)return!0}return!1};j.exports=(_,C,V)=>{let E=N(_,C,V);return C.negative&&(E=!!!E),E}},{"./paths":220}],219:[function(P,j){"use strict";const z=P("./paths").fns,N=(_,C)=>{return z.startsWith(C.normal,_)};j.exports=function(_,C,V){let E=C[V].normal;if(N(E,_))for(++V;V<C.length;V++){if(E+=" "+C[V].normal,E===_.normal)return V;if(!N(E,_))return null}return null}},{"./paths":220}],220:[function(P,j){j.exports={fns:P("../../../fns"),log:P("../../../log")}},{"../../../fns":40,"../../../log":42}],221:[function(P,j){"use strict";const z=P("./lumpMatch"),N=P("./isMatch"),A=(V,E,q)=>{for(E=E;E<V.length;E++){let D=V.terms[E];if(N(D,q))return E}return null},_=(V,E,q,D)=>{for(E=E;E<V.length;E++){let O=V.terms[E];if(D&&N(O,D))return E;if(!N(O,q))return E}return E};j.exports=(V,E,q,D)=>{let O=E;for(let M=0;M<q.length;M++){let F=V.terms[O],W=q[M],G=q[M+1];if(!F){if(W.optional)continue;return null}if(W.starting&&0<O)return null;if(W.ending&&O!==V.length-1&&!W.minMax)return null;if(q[M].astrix){if(!G)return V.terms.slice(E,V.length);let I=A(V,O,q[M+1]);if(!I)return null;O=I+1,M+=1;continue}if(q[M].minMax){if(!G){let U=V.length,R=q[M].minMax.max+E;return q[M].ending&&R<U?null:(R<U&&(U=R),V.terms.slice(E,U))}let I=A(V,O,G);if(!I)return null;let L=q[M].minMax;if(I<L.min||I>L.max)return null;O=I+1,M+=1;continue}if(W.optional){let I=q[M+1];O=_(V,O,W,I);continue}if(N(F,W,D)){if(O+=1,W.consecutive){let I=q[M+1];O=_(V,O,W,I)}continue}if(F.silent_term&&!F.normal){if(0===M)return null;O+=1,M-=1;continue}let S=z(F,q,M);if(S){M=S,O+=1;continue}if(!W.optional)return null}return V.terms.slice(E,O)}},{"./isMatch":218,"./lumpMatch":219}],222:[function(P,j){"use strict";const z=P("./paths").fns,N=function(_){_=_||"",_=_.trim();let C={optional:!1};if(z.startsWith(_,"!")&&(_=_.substr(1,_.length),C.negative=!0),z.startsWith(_,"^")&&(_=_.substr(1,_.length),C.starting=!0),z.endsWith(_,"$")&&(_=_.replace(/\$$/,""),C.ending=!0),z.endsWith(_,"?")&&(_=_.replace(/\?$/,""),C.optional=!0),z.endsWith(_,"+")&&(_=_.replace(/\+$/,""),C.consecutive=!0),z.startsWith(_,"#")&&(_=_.replace(/^\#/,""),C.tag=[z.titleCase(_)],_=null),z.startsWith(_,"(")&&z.endsWith(_,")")&&(_=_.replace(/\)$/,""),_=_.replace(/^\(/,""),C.oneOf=_.split(/\|/g),_=null),z.startsWith(_,"{")&&z.endsWith(_,"}")){let V=_.match(/\{([0-9]+), ?([0-9]+)\}/);C.minMax={min:parseInt(V[1],10),max:parseInt(V[2],10)},_=null}return"."===_&&(C.anyOne=!0,_=null),"*"===_&&(C.astrix=!0,_=null),C.normal=_,C.normal&&(C.normal=C.normal.toLowerCase()),C};j.exports=function(_){return _=_||"",_=_.split(/ +/),_.map(N)}},{"./paths":220}],223:[function(P,j){"use strict";const z=P("./lib/syntax"),N=P("./lib/startHere"),A=P("../../result/index");j.exports=(C)=>{const V={notObj:function(E,q){let D=[],O=[];return E.terms.forEach((M)=>{q.hasOwnProperty(M.normal)?(O.length&&D.push(O),O=[]):O.push(M)}),O.length&&D.push(O),D=D.map((M)=>{return new C(M,E.lexicon,E.refText,E.refTerms)}),new A(D,E.lexicon,E.parent)},notString:function(E,q,D){let O=[],M=z(q),F=[];for(let W=0,G;W<E.terms.length;W++){if(G=N(E,W,M,D),G){0<F.length&&(O.push(F),F=[]),W+=G.length-1;continue}F.push(E.terms[W])}return 0<F.length&&O.push(F),O=O.map((W)=>{return new C(W,E.lexicon,E.refText,E.refTerms)}),new A(O,E.lexicon,E.parent)}};return V.notArray=function(E,q){let D=q.reduce((O,M)=>{return O[M]=!0,O},{});return V.notObj(E,D)},C.prototype.not=function(E,q){if("object"==typeof E){let D=Object.prototype.toString.call(E);if("[object Array]"===D)return V.notArray(this,E,q);if("[object Object]"===D)return V.notObj(this,E,q)}return"string"==typeof E?V.notString(this,E,q):this},C}},{"../../result/index":44,"./lib/startHere":221,"./lib/syntax":222}],224:[function(P,j){"use strict";const z=P("../mutate");j.exports=(A)=>{const _={delete:function(C){if(!this.found)return this;if(!C)return this.parentTerms=z.deleteThese(this.parentTerms,this),this;let V=this.match(C);if(V.found){let E=z.deleteThese(this,V);return E}return this.parentTerms}};return Object.keys(_).forEach((C)=>{A.prototype[C]=_[C]}),A}},{"../mutate":233}],225:[function(P,j){"use strict";const z=P("../mutate"),N=(_,C)=>{return _.terms.length&&_.terms[C]?(_.terms[C].whitespace.before=" ",_):_};j.exports=(_)=>{const C=function(E){return"Terms"===E.isA?E:"Term"===E.isA?new _([E]):_.fromString(E)},V={insertBefore:function(E,q){let D=this.terms.length,O=C(E);q&&O.tagAs(q);let M=this.index();return N(this.parentTerms,M),0<M&&N(O,0),this.parentTerms.terms=z.insertAt(this.parentTerms.terms,M,O),this.terms.length===D&&(this.terms=O.terms.concat(this.terms)),this},insertAfter:function(E,q){let D=this.terms.length,O=C(E);q&&O.tagAs(q);let M=this.terms[this.terms.length-1].index();return N(O,0),this.parentTerms.terms=z.insertAt(this.parentTerms.terms,M+1,O),this.terms.length===D&&(this.terms=this.terms.concat(O.terms)),this},insertAt:function(E,q,D){0>E&&(E=0);let O=this.terms.length,M=C(q);return D&&M.tagAs(D),0<E&&N(M,0),this.parentTerms.terms=z.insertAt(this.parentTerms.terms,E,M),this.terms.length===O&&Array.prototype.splice.apply(this.terms,[E,0].concat(M.terms)),0===E&&(this.terms[0].whitespace.before="",M.terms[M.terms.length-1].whitespace.after=" "),this}};return Object.keys(V).forEach((E)=>{_.prototype[E]=V[E]}),_}},{"../mutate":233}],226:[function(P,j){"use strict";j.exports=(N)=>{return[["toUpperCase","UpperCase"],["toLowerCase"],["toTitleCase","TitleCase"]].forEach((_)=>{let C=_[0],V=_[1];N.prototype[C]=function(){let q=arguments;return this.terms.forEach((D)=>{D[C].apply(D,q)}),V&&this.tagAs(V,C),this}}),N}},{}],227:[function(P,j){"use strict";j.exports=(N)=>{const A={term:function(_){return this.terms[_]},first:function(){let _=this.terms[0];return new N([_],this.lexicon,this.refText,this.refTerms)},last:function(){let _=this.terms[this.terms.length-1];return new N([_],this.lexicon,this.refText,this.refTerms)},slice:function(_,C){let V=this.terms.slice(_,C);return new N(V,this.lexicon,this.refText,this.refTerms)},endPunctuation:function(){return this.last().terms[0].endPunctuation()},canBe:function(_){_=_||"",_=_.replace(/^#/,"");for(let C=0;C<this.terms.length;C++)if(!this.terms[C].canBe(_))return!1;return!0},index:function(){let _=this.parentTerms,C=this.terms[0];if(!_||!C)return null;for(let V=0;V<_.terms.length;V++)if(C===_.terms[V])return V;return null},termIndex:function(){let _=this.terms[0],C=this.refText||this;if(!C||!_)return null;let V=0;for(let E=0,q;E<C.list.length;E++){q=C.list[E];for(let D=0;D<q.terms.length;D++){if(q.terms[D]===_)return V;V+=1}}return V},chars(){return this.terms.reduce((_,C)=>{return _+=C.whitespace.before.length,_+=C.text.length,_+=C.whitespace.after.length,_},0)},wordCount(){return this.terms.length},toCamelCase:function(){return this.toTitleCase(),this.terms.forEach((_,C)=>{0!==C&&(_.whitespace.before=""),_.whitespace.after=""}),this.tagAs("#CamelCase","toCamelCase"),this}};return Object.keys(A).forEach((_)=>{N.prototype[_]=A[_]}),N}},{}],228:[function(P,j){"use strict";const z=P("../paths").fns,N={text:function(_){return _.terms.reduce((C,V)=>{return C+=V.out("text"),C},"")},normal:function(_){let C=_.terms.filter((V)=>{return V.text});return C=C.map((V)=>{return V.normal}),C.join(" ")},grid:function(_){var C="  ";return C+=_.terms.reduce((V,E)=>{return V+=z.leftPad(E.text,11),V},""),C+"\n\n"},color:function(_){return _.terms.reduce((C,V)=>{return C+=z.printTerm(V),C},"")},root:function(_){return _.terms.filter((C)=>C.text).map((C)=>C.root).join(" ").toLowerCase()},html:function(_){return _.terms.map((C)=>C.render.html()).join(" ")},debug:function(_){_.terms.forEach((C)=>{C.out("debug")})}};N.plaintext=N.text,N.normalize=N.normal,N.normalized=N.normal,N.colors=N.color,N.tags=N.terms;j.exports=(_)=>{return _.prototype.out=function(C){return N[C]?N[C](this):N.text(this)},_.prototype.debug=function(){return N.debug(this)},_}},{"../paths":234}],229:[function(P,j){"use strict";const z=P("../mutate");j.exports=(A)=>{const _={replace:function(C,V){return void 0===V?this.replaceWith(C):(this.match(C).replaceWith(V),this)},replaceWith:function(C,V){let E=A.fromString(C);V&&E.tagAs(V,"user-given");let q=this.index();return this.parentTerms=z.deleteThese(this.parentTerms,this),this.parentTerms.terms=z.insertAt(this.parentTerms.terms,q,E),this.terms=E.terms,this}};return Object.keys(_).forEach((C)=>{A.prototype[C]=_[C]}),A}},{"../mutate":233}],230:[function(P,j,$){"use strict";const z=(A,_)=>{let C=_.terms[0],V=_.terms.length;for(let E=0;E<A.length;E++)if(A[E]===C)return{before:A.slice(0,E),match:A.slice(E,E+V),after:A.slice(E+V,A.length)};return{after:A}},N=(A)=>{const _={splitAfter:function(C,V){let E=this.match(C,V),q=this.terms,D=[];return E.list.forEach((O)=>{let M=z(q,O);M.before&&M.match&&D.push(M.before.concat(M.match)),q=M.after}),q.length&&D.push(q),D=D.map((O)=>{let M=this.refText;return new A(O,this.lexicon,M,this.refTerms)}),D},splitOn:function(C,V){let E=this.match(C,V),q=this.terms,D=[];return E.list.forEach((O)=>{let M=z(q,O);M.before&&D.push(M.before),M.match&&D.push(M.match),q=M.after}),q.length&&D.push(q),D=D.filter((O)=>O&&O.length),D=D.map((O)=>new A(O,O.lexicon,O.refText,this.refTerms)),D},splitBefore:function(C,V){let E=this.match(C,V),q=this.terms,D=[];E.list.forEach((O)=>{let M=z(q,O);M.before&&D.push(M.before),M.match&&D.push(M.match),q=M.after}),q.length&&D.push(q);for(let O=0;O<D.length;O++)for(let M=0;M<E.length;M++)E.list[M].terms[0]===D[O][0]&&D[O+1]&&(D[O]=D[O].concat(D[O+1]),D[O+1]=[]);return D=D.filter((O)=>O&&O.length),D=D.map((O)=>new A(O,O.lexicon,O.refText,this.refTerms)),D}};return Object.keys(_).forEach((C)=>{A.prototype[C]=_[C]}),A};j.exports=N,$=N},{}],231:[function(P,j){"use strict";j.exports=(N)=>{const A={tagAs:function(_,C){this.terms.forEach((V)=>{V.tagAs(_,C)})},unTag:function(_,C){this.terms.forEach((V)=>{V.unTag(_,C)})},canBe:function(_,C){this.terms.forEach((V)=>{V.canBe(_,C)})}};return Object.keys(A).forEach((_)=>{N.prototype[_]=A[_]}),N}},{}],232:[function(P,j){"use strict";j.exports=(N)=>{const A={clone:function(){let _=this.terms.map((C)=>{return C.clone()});return new N(_,this.lexicon,this.refText,null)},hyphenate:function(){return this.terms.forEach((_,C)=>{C!==this.terms.length-1&&(_.whitespace.after="-"),0!==C&&(_.whitespace.before="")}),this},dehyphenate:function(){return this.terms.forEach((_)=>{"-"===_.whitespace.after&&(_.whitespace.after=" ")}),this}};return Object.keys(A).forEach((_)=>{N.prototype[_]=A[_]}),N}},{}],233:[function(P,j,$){"use strict";const z=(N)=>{let A=[];return"Terms"===N.isA?A=N.terms:"Text"===N.isA?A=N.flatten().list[0].terms:"Term"===N.isA&&(A=[N]),A};$.deleteThese=(N,A)=>{let _=z(A);return N.terms=N.terms.filter((C)=>{for(let V=0;V<_.length;V++)if(C===_[V])return!1;return!0}),N},$.insertAt=(N,A,_)=>{_.dirty=!0;let C=z(_);return 0<A&&C[0]&&(C[0].whitespace.before=" "),Array.prototype.splice.apply(N,[A,0].concat(C)),N}},{}],234:[function(P,j){j.exports={data:P("../data/index"),lexicon:P("../data/lexicon"),fns:P("../fns"),log:P("../log"),Term:P("../term")}},{"../data/index":8,"../data/lexicon":9,"../fns":40,"../log":42,"../term":198}]},{},[41])(41)});

