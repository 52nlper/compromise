(function(y){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=y();else if("function"==typeof define&&define.amd)define([],y);else{var T;T="undefined"==typeof window?"undefined"==typeof global?"undefined"==typeof self?this:self:global:window,T.nlp=y()}})(function(){var y;return function $(N,A,_){function C(E,z){if(!A[E]){if(!N[E]){var D="function"==typeof require&&require;if(!z&&D)return D(E,!0);if(j)return j(E,!0);var O=new Error("Cannot find module '"+E+"'");throw O.code="MODULE_NOT_FOUND",O}var M=A[E]={exports:{}};N[E][0].call(M.exports,function(F){var S=N[E][1][F];return C(S?S:F)},M,M.exports,$,N,A,_)}return A[E].exports}for(var j="function"==typeof require&&require,V=0;V<_.length;V++)C(_[V]);return C}({1:[function($,N){N.exports={author:"Spencer Kelly <spencermountain@gmail.com> (http://spencermounta.in)",name:"compromise",description:"natural language processing in the browser",version:"8.0.0",main:"./builds/compromise.js",repository:{type:"git",url:"git://github.com/nlp-compromise/compromise.git"},scripts:{test:"node ./scripts/test.js",browsertest:"node ./scripts/browserTest.js",build:"node ./scripts/build.js",demo:"node ./scripts/demo.js",watch:"node ./scripts/watch.js",filesize:"node ./scripts/filesize.js",coverage:"node ./scripts/coverage.js"},files:["builds/","docs/"],dependencies:{},devDependencies:{"babel-plugin-transform-es3-member-expression-literals":"^6.22.0","babel-plugin-transform-es3-property-literals":"^6.22.0","babel-preset-es2015":"6.9.0","babel-preset-stage-2":"^6.11.0",babelify:"7.3.0",babili:"0.0.11",browserify:"13.0.1","browserify-glob":"^0.2.0",chalk:"^1.1.3","codacy-coverage":"^2.0.0",derequire:"^2.0.3",efrt:"0.0.2",eslint:"^3.1.1",gaze:"^1.1.1","http-server":"0.9.0","nlp-corpus":"latest",nyc:"^8.4.0",shelljs:"^0.7.2","tap-min":"^1.1.0","tap-spec":"4.1.1",tape:"4.6.0","uglify-js":"2.7.0"},license:"MIT"}},{}],2:[function($,N){"use strict";const _=$("../fns");N.exports=_.uncompress_suffixes(["absurd","aggressive","alert","alive","angry","attractive","awesome","beautiful","big","bitter","black","blue","bored","boring","brash","brave","brief","brown","calm","charming","cheap","check","clean","clear","close","cold","cool","cruel","curly","cute","dangerous","dear","dirty","drunk","dry","dull","eager","early","easy","efficient","empty","even","extreme","faint","fair","fanc","feeble","few","fierce","fine","firm","forgetful","formal","frail","free","full","funny","gentle","glad","glib","glad","grand","green","gruesome","handsome","happy","harsh","heavy","high","hollow","hot","hungry","impolite","important","innocent","intellegent","interesting","keen","kind","lame","large","late","lean","little","long","loud","low","lucky","lush","macho","mature","mean","meek","mellow","mundane","narrow","near","neat","new","nice","noisy","normal","odd","old","orange","pale","pink","plain","poor","proud","pure","purple","rapid","rare","raw","rich","rotten","round","rude","safe","scarce","scared","shallow","shrill","simple","slim","slow","small","smooth","solid","soon","sore","sour","square","stale","steep","strange","strict","strong","swift","tall","tame","tart","tender","tense","thin","thirsty","tired","true","vague","vast","vulgar","warm","weird","wet","wild","windy","wise","yellow","young"],{erate:"degen,delib,desp,lit,mod",icial:"artif,benef,off,superf",ntial:"esse,influe,pote,substa",teful:"gra,ha,tas,was",stant:"con,di,in,resi",hing:"astonis,das,far-reac,refres,scat,screec,self-loat,soot",eful:"car,grac,peac,sham,us,veng",ming:"alar,cal,glea,unassu,unbeco,upco",cial:"commer,cru,finan,ra,so,spe",ure:"insec,miniat,obsc,premat,sec,s",uent:"congr,fl,freq,subseq",rate:"accu,elabo,i,sepa",ific:"horr,scient,spec,terr",rary:"arbit,contempo,cont,tempo",ntic:"authe,fra,giga,roma",nant:"domi,malig,preg,reso",nent:"emi,immi,perma,promi",iant:"brill,def,g,luxur",ging:"dama,encoura,han,lon",iate:"appropr,immed,inappropr,intermed",rect:"cor,e,incor,indi",zing:"agoni,ama,appeti,free",ine:"div,femin,genu,mascul,prist,rout",ute:"absol,ac,c,m,resol",ern:"east,north,south,st,west",tful:"deligh,doub,fre,righ,though,wis",ant:"abund,arrog,eleg,extravag,exult,hesit,irrelev,miscre,nonchal,obeis,observ,pl,pleas,redund,relev,reluct,signific,vac,verd",ing:"absorb,car,coo,liv,lov,ly,menac,perplex,shock,stand,surpris,tell,unappeal,unconvinc,unend,unsuspect,vex,want",ate:"adequ,delic,fortun,inadequ,inn,intim,legitim,priv,sed,ultim"})},{"../fns":5}],3:[function($,N){N.exports=["bright","broad","coarse","damp","dark","dead","deaf","deep","fast","fat","flat","fresh","great","hard","light","loose","mad","moist","quick","quiet","red","ripe","rough","sad","sharp","short","sick","smart","soft","stiff","straight","sweet","thick","tight","tough","weak","white","wide"]},{}],4:[function($,N){"use strict";let C=["monday","tuesday","wednesday","thursday","friday","saturday","sunday","mon","tues","wed","thurs","fri","sat","sun"];for(let z=0;6>=z;z++)C.push(C[z]+"s");let j=["millisecond","minute","hour","day","week","month","year","decade"],V=j.length;for(let z=0;z<V;z++)j.push(j[z]),j.push(j[z]+"s");j.push("century"),j.push("centuries"),j.push("seconds");N.exports={days:C,months:["january","february","april","june","july","august","september","october","november","december","jan","feb","mar","apr","jun","jul","aug","sep","oct","nov","dec","sept","sep"],durations:j,relative:["yesterday","today","tomorrow","weekend","tonight"]}},{}],5:[function($,N,A){"use strict";A.extendObj=(_,C)=>{return Object.keys(C).forEach((j)=>{_[j]=C[j]}),_},A.uncompress_suffixes=function(_,C){let j=Object.keys(C),V=j.length;for(let E=0;E<V;E++){const z=C[j[E]].split(",");for(let D=0;D<z.length;D++)_.push(z[D]+j[E])}return _},A.uncompress_prefixes=function(_,C){let j=Object.keys(C),V=j.length;for(let E=0;E<V;E++){const z=C[j[E]].split(",");for(let D=0;D<z.length;D++)_.push(j[E]+z[D])}return _}},{}],6:[function($,N){"use strict";N.exports={notable_people:$("./people/notable"),titles:$("./people/titles"),currencies:$("./values/currencies"),numbers:$("./values/numbers"),ordinalMap:$("./values/ordinalMap"),units:$("./values/units"),dates:$("./dates/dates"),abbreviations:$("./nouns/abbreviations"),irregular_plurals:$("./nouns/irregular_plurals"),superlatives:$("./adjectives/superlatives"),verbConverts:$("./adjectives/verbConverts"),irregular_verbs:$("./verbs/irregular_verbs"),verbs:$("./verbs/verbs"),misc:$("./misc/misc")}},{"./adjectives/superlatives":2,"./adjectives/verbConverts":3,"./dates/dates":4,"./misc/misc":9,"./nouns/abbreviations":10,"./nouns/irregular_plurals":11,"./people/notable":12,"./people/titles":13,"./values/currencies":14,"./values/numbers":15,"./values/ordinalMap":16,"./values/units":17,"./verbs/irregular_verbs":18,"./verbs/verbs":20}],7:[function($,N){"use strict";const _=$("./index"),C=$("./fns"),j=$("../result/subset/adjectives/methods/index"),V=$("../result/subset/verbs/methods/toAdjective"),E=$("../result/subset/verbs/methods/conjugate/faster");let z={};const D=(S)=>{C.extendObj(z,S)},O=(S,W)=>{const q=S.length;for(let G=0;G<q;G++)z[S[G]]=W};let M=_.units.words.filter((S)=>1<S.length);O(M,"Unit"),O(_.dates.durations,"Duration"),D(_.abbreviations);let F=_.numbers.ordinal;O(Object.keys(F.ones),"Ordinal"),O(Object.keys(F.teens),"Ordinal"),O(Object.keys(F.tens),"Ordinal"),O(Object.keys(F.multiples),"Ordinal"),F=_.numbers.cardinal,O(Object.keys(F.ones),"Cardinal"),O(Object.keys(F.teens),"Cardinal"),O(Object.keys(F.tens),"Cardinal"),O(Object.keys(F.multiples),"Cardinal"),O(Object.keys(_.numbers.prefixes),"Cardinal"),O(Object.keys(_.irregular_plurals.toPlural),"Singular"),O(Object.keys(_.irregular_plurals.toSingle),"Plural"),O(_.dates.days,"WeekDay"),O(_.dates.months,"Month"),O(_.dates.relative,"RelativeDay"),Object.keys(_.irregular_verbs).forEach((S)=>{z[S]="Infinitive";let W=_.irregular_verbs[S];Object.keys(W).forEach((G)=>{W[G]&&(z[W[G]]=G)});let q=E(S);Object.keys(q).forEach((G)=>{q[G]&&!z[q[G]]&&(z[q[G]]=G)})}),_.verbs.forEach((S)=>{let W=E(S);Object.keys(W).forEach((q)=>{W[q]&&!z[W[q]]&&(z[W[q]]=q)}),z[V(S)]="Adjective"}),_.superlatives.forEach((S)=>{z[j.toNoun(S)]="Noun",z[j.toAdverb(S)]="Adverb",z[j.toSuperlative(S)]="Superlative",z[j.toComparative(S)]="Comparative"}),_.verbConverts.forEach((S)=>{z[j.toNoun(S)]="Noun",z[j.toAdverb(S)]="Adverb",z[j.toSuperlative(S)]="Superlative",z[j.toComparative(S)]="Comparative";const W=j.toVerb(S);z[W]="Verb";let q=E(W);Object.keys(q).forEach((G)=>{q[G]&&!z[q[G]]&&(z[q[G]]=G)})}),O(_.notable_people.female,"FemaleName"),O(_.notable_people.male,"MaleName"),O(_.titles,"Singular"),O(_.verbConverts,"Adjective"),O(_.superlatives,"Adjective"),O(_.currencies,"Currency"),D(_.misc),delete z[""],delete z[" "],delete z[null],N.exports=z},{"../result/subset/adjectives/methods/index":41,"../result/subset/verbs/methods/conjugate/faster":114,"../result/subset/verbs/methods/toAdjective":125,"./fns":5,"./index":6}],8:[function($,N){N.exports=["this","any","enough","each","whatever","every","these","another","plenty","whichever","neither","an","a","least","own","few","both","those","the","that","various","either","much","some","else","la","le","les","des","de","du","el"]},{}],9:[function($,N){"use strict";const _={here:"Noun",better:"Comparative",earlier:"Superlative","make sure":"Verb","keep tabs":"Verb",gonna:"Verb",cannot:"Verb",has:"Verb",sounds:"PresentTense",taken:"PastTense",msg:"Verb","a few":"Value","years old":"Unit",not:"Negative",non:"Negative",never:"Negative",no:"Negative","no doubt":"Noun","not only":"Adverb","how's":"QuestionWord"},C={Organization:["20th century fox","3m","7-eleven","g8","motel 6","vh1"],Adjective:["so called","on board","vice versa","en route","upside down","up front","in front","in situ","in vitro","ad hoc","de facto","ad infinitum","for keeps","a priori","off guard","spot on","ipso facto","fed up","brand new","old fashioned","bona fide","well off","far off","straight forward","hard up","sui generis","en suite","avant garde","sans serif","gung ho","super duper","bourgeois"],Verb:["lengthen","heighten","worsen","lessen","awaken","frighten","threaten","hasten","strengthen","given","known","shown","seen","born"],Place:["new england","new hampshire","new jersey","new mexico","united states","united kingdom","great britain","great lakes","pacific ocean","atlantic ocean","indian ocean","arctic ocean","antarctic ocean","everglades"],Conjunction:["yet","therefore","or","while","nor","whether","though","tho","because","cuz","but","for","and","however","before","although","how","plus","versus","otherwise"],Time:["noon","midnight","now","morning","evening","afternoon","night","breakfast time","lunchtime","dinnertime","ago","sometime","eod","oclock"],Date:["eom","standard time","daylight time"],Condition:["if","unless","notwithstanding"],PastTense:["said","had","been","began","came","did","meant","went"],Gerund:["going","being","according","resulting","developing","staining"],Copula:["is","are","was","were","am"],Determiner:$("./determiners"),Modal:["can","may","could","might","will","ought to","would","must","shall","should","ought","shant","lets"],Possessive:["mine","something","none","anything","anyone","theirs","himself","ours","his","my","their","yours","your","our","its","herself","hers","themselves","myself","her"],Pronoun:["it","they","i","them","you","she","me","he","him","ourselves","us","we","thou","il","elle","yourself","'em","he's","she's"],QuestionWord:["where","why","when","who","whom","whose","what","which"],Person:["father","mother","mom","dad","mommy","daddy","sister","brother","aunt","uncle","grandfather","grandmother","cousin","stepfather","stepmother","boy","girl","man","woman","guy","dude","bro","gentleman","someone"]},j=Object.keys(C);for(let V=0;V<j.length;V++){const E=C[j[V]];for(let z=0;z<E.length;z++)_[E[z]]=j[V]}N.exports=_},{"./determiners":8}],10:[function($,N){"use strict";let _={Noun:["arc","al","exp","fy","pd","pl","plz","tce","bl","ma","ba","lit","ex","eg","ie","ca","cca","vs","etc","esp","ft","bc","ad","md","corp","col"],Organization:["dept","univ","assn","bros","inc","ltd","co","yahoo","joomla","jeopardy"],Place:["rd","st","dist","mt","ave","blvd","cl","ct","cres","hwy","ariz","cal","calif","colo","conn","fla","fl","ga","ida","ia","kan","kans","minn","neb","nebr","okla","penna","penn","pa","dak","tenn","tex","ut","vt","va","wis","wisc","wy","wyo","usafa","alta","ont","que","sask"],Date:["jan","feb","mar","apr","jun","jul","aug","sep","sept","oct","nov","dec","circa"],Honorific:["adj","adm","adv","asst","atty","bldg","brig","capt","cmdr","comdr","cpl","det","dr","esq","gen","gov","hon","jr","llb","lt","maj","messrs","mister","mlle","mme","mr","mrs","ms","mstr","op","ord","phd","prof","pvt","rep","reps","res","rev","sen","sens","sfc","sgt","sir","sr","supt","surg"]},C={};const j=Object.keys(_);for(let V=0;V<j.length;V++){const E=_[j[V]];for(let z=0;z<E.length;z++)C[E[z]]=j[V]}N.exports=C},{}],11:[function($,N){"use strict";let _=[["child","_ren"],["person","people"],["leaf","leaves"],["database","_s"],["quiz","_zes"],["stomach","_s"],["sex","_es"],["move","_s"],["shoe","_s"],["goose","geese"],["phenomenon","phenomena"],["barracks","_"],["deer","_"],["syllabus","syllabi"],["index","indices"],["appendix","appendices"],["criterion","criteria"],["man","men"],["rodeo","_s"],["epoch","_s"],["zero","_s"],["avocado","_s"],["halo","_s"],["tornado","_s"],["tuxedo","_s"],["sombrero","_s"],["addendum","addenda"],["alga","_e"],["alumna","_e"],["alumnus","alumni"],["bacillus","bacilli"],["cactus","cacti"],["beau","_x"],["ch\xE2teau","_x"],["chateau","_x"],["tableau","_x"],["corpus","corpora"],["curriculum","curricula"],["echo","_es"],["embargo","_es"],["foot","feet"],["genus","genera"],["hippopotamus","hippopotami"],["larva","_e"],["libretto","libretti"],["loaf","loaves"],["matrix","matrices"],["memorandum","memoranda"],["mosquito","_es"],["opus","opera"],["ovum","ova"],["ox","_en"],["radius","radii"],["referendum","referenda"],["thief","thieves"],["tooth","teeth"]];_=_.map(function(V){return V[1]=V[1].replace("_",V[0]),V});const C=_.reduce((V,E)=>{return V[E[1]]=E[0],V},{}),j=_.reduce((V,E)=>{return V[E[0]]=E[1],V},{});N.exports={toSingle:C,toPlural:j}},{}],12:[function($,N,A){A.male=["messiaen","saddam hussain","virgin mary","van gogh","mitt romney","barack obama","kanye west","mubarek","lebron james","emeril lagasse","rush limbaugh","carson palmer","ray romano","ronaldinho","valentino rossi","rod stewart","kiefer sutherland","denzel washington","dick wolf","tiger woods","adolf hitler","hulk hogan","ashton kutcher","kobe bryant","cardinal wolsey","slobodan milosevic"],A.female=["jk rowling","oprah winfrey","reese witherspoon","tyra banks","halle berry","paris hilton","scarlett johansson"]},{}],13:[function($,N){N.exports=["lord","lady","king","queen","prince","princess","dutchess","president","excellency","professor","chancellor","father","pastor","brother","sister","doctor","captain","commander","general","lieutenant","reverend","rabbi","ayatullah","councillor","secretary","sultan","mayor","congressman","congresswoman"]},{}],14:[function($,N){"use strict";let C=["denar","dobra","forint","kwanza","kyat","lempira","pound sterling","riel","yen","zloty","dollar","cent","penny","dime","dinar","euro","lira","pound","pence","peso","baht","sterling","rouble","shekel","sheqel","yuan","franc","rupee","shilling","krona","dirham","bitcoin"];const j={yen:"yen",baht:"baht",riel:"riel",penny:"pennies"};let V=C.length;for(let E=0;E<V;E++)j[C[E]]?C.push(j[C[E]]):C.push(C[E]+"s");N.exports=["usd","cad","aud","gbp","krw","inr","hkd","dkk","cny","xaf","xof","eur","jpy","\u20AC","$","\xA5","\xA3","\u043B\u0432","\u20A1","kn","kr","\xA2","Ft","Rp","\uFDFC","\u20AD","\u0434\u0435\u043D","\u20A8","z\u0142","lei","\u0440\u0443\u0431","\u0E3F"].concat(C)},{}],15:[function($,N){N.exports={cardinal:{ones:{zero:0,one:1,two:2,three:3,four:4,five:5,six:6,seven:7,eight:8,nine:9},teens:{ten:10,eleven:11,twelve:12,thirteen:13,fourteen:14,fifteen:15,sixteen:16,seventeen:17,eighteen:18,nineteen:19},tens:{twenty:20,thirty:30,forty:40,fifty:50,sixty:60,seventy:70,eighty:80,ninety:90},multiples:{hundred:100,thousand:1000,grand:1000,million:1000000,billion:1000000000,trillion:1000000000000,quadrillion:1000000000000000,quintillion:1000000000000000000,sextillion:1e+21,septillion:1e+24}},ordinal:{ones:{zeroth:0,first:1,second:2,third:3,fourth:4,fifth:5,sixth:6,seventh:7,eighth:8,ninth:9},teens:{tenth:10,eleventh:11,twelfth:12,thirteenth:13,fourteenth:14,fifteenth:15,sixteenth:16,seventeenth:17,eighteenth:18,nineteenth:19},tens:{twentieth:20,thirtieth:30,fourtieth:40,fiftieth:50,sixtieth:60,seventieth:70,eightieth:80,ninetieth:90},multiples:{hundredth:100,thousandth:1000,millionth:1000000,billionth:1000000000,trillionth:1000000000000,quadrillionth:1000000000000000,quintillionth:1000000000000000000,sextillionth:1e+21,septillionth:1e+24}},prefixes:{yotta:1,zetta:1,exa:1,peta:1,tera:1,giga:1,mega:1,kilo:1,hecto:1,deka:1,deci:1,centi:1,milli:1,micro:1,nano:1,pico:1,femto:1,atto:1,zepto:1,yocto:1,square:1,cubic:1,quartic:1}}},{}],16:[function($,N){"use strict";const _=$("./numbers");let C={},j={};Object.keys(_.ordinal).forEach((V)=>{let E=Object.keys(_.ordinal[V]),z=Object.keys(_.cardinal[V]);for(let D=0;D<E.length;D++)C[z[D]]=E[D],j[E[D]]=z[D]}),N.exports={toOrdinal:C,toCardinal:j}},{"./numbers":15}],17:[function($,N){"use strict";const _={Temperature:{"\xB0c":"Celsius","\xB0f":"Fahrenheit",k:"Kelvin","\xB0re":"Reaumur","\xB0n":"Newton","\xB0ra":"Rankine"},Volume:{"m\xB3":"cubic meter",m3:"cubic meter","dm\xB3":"cubic decimeter",dm3:"cubic decimeter","cm\xB3":"cubic centimeter",cm3:"cubic centimeter",l:"liter",dl:"deciliter",cl:"centiliter",ml:"milliliter","in\xB3":"cubic inch",in3:"cubic inch","ft\xB3":"cubic foot",ft3:"cubic foot","yd\xB3":"cubic yard",yd3:"cubic yard",gal:"gallon",bbl:"petroleum barrel",pt:"pint",qt:"quart",tbl:"tablespoon",tsp:"teaspoon",tbsp:"tablespoon",cup:"cup","fl oz":"fluid ounce"},Distance:{km:"kilometer",m:"meter",dm:"decimeter",cm:"centimeter",mm:"millimeter",mi:"mile",ft:"foot",yd:"yard"},Weight:{t:"tonne",kg:"kilogram",hg:"hectogram",g:"gram",dg:"decigram",cg:"centigram",mg:"milligram",µg:"microgram",carat:"carat",grain:"grain",oz:"ounce",lb:"pound",ton:"tonne"},Area:{"km\xB2":"square kilometer",km2:"square kilometer","m\xB2":"square meter",m2:"square meter","dm\xB2":"square decimeter",dm2:"square decimeter","cm\xB2":"square centimeter",cm2:"square centimeter","mm\xB2":"square millimeter",mm2:"square millimeter",ha:"hectare","mile\xB2":"square mile",mile2:"square mile","in\xB2":"square inch",in2:"square inch","yd\xB2":"square yard",yd2:"square yard","ft\xB2":"square foot","sq ft":"square feet",ft2:"square foot",acre:"acre"},Frequency:{hz:"hertz"},Speed:{"km/h":"kilometer per hour",kmph:"kilometer per hour",mps:"meter per second","m/s":"meter per second",mph:"mile per hour","mi/h":"mile per hour",knot:"knot"},Data:{b:"byte",kb:"kilobyte",mb:"megabyte",gb:"gigabyte",tb:"terabyte",pt:"petabyte",eb:"exabyte",zb:"zettabyte",yb:"yottabyte"},Energy:{j:"joule",pa:"pascal",w:"watt",n:"newton",wb:"weber",h:"henry",c:"coulomb",v:"volt",f:"farad",s:"siemens",o:"ohm",lx:"lux",lm:"lumen"},Time:{year:"year",week:"week",day:"day",h:"hour",min:"minute",s:"second",ms:"millisecond",µs:"microsecond",nanosecond:"nanosecond",picosecond:"picosecond",femtosecond:"femtosecond",attosecond:"attosecond"}};let C={};Object.keys(_).forEach((j)=>{Object.keys(_[j]).forEach((V)=>{1<V.length&&(C[V]=!0);let E=_[j][V];C[E]=!0,C[E+"s"]=!0})}),C=Object.keys(C),N.exports={words:C,units:_}},{}],18:[function($,N){"use strict";const _=$("./participles");let C={take:{PerfectTense:"have taken",pluPerfectTense:"had taken",FuturePerfect:"will have taken"},can:{Gerund:"",PresentTense:"can",PastTense:"could",FutureTense:"can",PerfectTense:"could",pluPerfectTense:"could",FuturePerfect:"can",Actor:""},free:{Gerund:"freeing",Actor:""},arise:{PastTense:"arose",Participle:"arisen"},babysit:{PastTense:"babysat",Actor:"babysitter"},be:{PastTense:"was",Participle:"been",PresentTense:"is",Actor:"",Gerund:"am"},is:{PastTense:"was",PresentTense:"is",Actor:"",Gerund:"being"},beat:{Gerund:"beating",Actor:"beater",Participle:"beaten"},begin:{Gerund:"beginning",PastTense:"began"},ban:{PastTense:"banned",Gerund:"banning",Actor:""},bet:{Actor:"better"},bite:{Gerund:"biting",PastTense:"bit"},bleed:{PastTense:"bled"},breed:{PastTense:"bred"},bring:{PastTense:"brought"},broadcast:{PastTense:"broadcast"},build:{PastTense:"built"},buy:{PastTense:"bought"},choose:{Gerund:"choosing",PastTense:"chose"},cost:{PastTense:"cost"},deal:{PastTense:"dealt"},die:{PastTense:"died",Gerund:"dying"},dig:{Gerund:"digging",PastTense:"dug"},draw:{PastTense:"drew"},drink:{PastTense:"drank",Participle:"drunk"},drive:{Gerund:"driving",PastTense:"drove"},eat:{Gerund:"eating",PastTense:"ate",Actor:"eater",Participle:"eaten"},fall:{PastTense:"fell"},feed:{PastTense:"fed"},feel:{PastTense:"felt",Actor:"feeler"},fight:{PastTense:"fought"},find:{PastTense:"found"},fly:{PastTense:"flew",Participle:"flown"},blow:{PastTense:"blew",Participle:"blown"},forbid:{PastTense:"forbade"},forget:{Gerund:"forgeting",PastTense:"forgot"},forgive:{Gerund:"forgiving",PastTense:"forgave"},freeze:{Gerund:"freezing",PastTense:"froze"},get:{PastTense:"got"},give:{Gerund:"giving",PastTense:"gave"},go:{PastTense:"went",PresentTense:"goes"},hang:{PastTense:"hung"},have:{Gerund:"having",PastTense:"had",PresentTense:"has"},hear:{PastTense:"heard"},hide:{PastTense:"hid"},hold:{PastTense:"held"},hurt:{PastTense:"hurt"},lay:{PastTense:"laid"},lead:{PastTense:"led"},leave:{PastTense:"left"},lie:{Gerund:"lying",PastTense:"lay"},light:{PastTense:"lit"},lose:{Gerund:"losing",PastTense:"lost"},make:{PastTense:"made"},mean:{PastTense:"meant"},meet:{Gerund:"meeting",PastTense:"met",Actor:"meeter"},pay:{PastTense:"paid"},read:{PastTense:"read"},ring:{PastTense:"rang"},rise:{PastTense:"rose",Gerund:"rising",pluPerfectTense:"had risen",FuturePerfect:"will have risen"},run:{Gerund:"running",PastTense:"ran"},say:{PastTense:"said"},see:{PastTense:"saw"},sell:{PastTense:"sold"},shine:{PastTense:"shone"},shoot:{PastTense:"shot"},show:{PastTense:"showed"},sing:{PastTense:"sang",Participle:"sung"},sink:{PastTense:"sank",pluPerfectTense:"had sunk"},sit:{PastTense:"sat"},slide:{PastTense:"slid"},speak:{PastTense:"spoke",PerfectTense:"have spoken",pluPerfectTense:"had spoken",FuturePerfect:"will have spoken"},spin:{Gerund:"spinning",PastTense:"spun"},stand:{PastTense:"stood"},steal:{PastTense:"stole",Actor:"stealer"},stick:{PastTense:"stuck"},sting:{PastTense:"stung"},stream:{Actor:"streamer"},strike:{Gerund:"striking",PastTense:"struck"},swear:{PastTense:"swore"},swim:{PastTense:"swam"},swing:{PastTense:"swung"},teach:{PastTense:"taught",PresentTense:"teaches"},tear:{PastTense:"tore"},tell:{PastTense:"told"},think:{PastTense:"thought"},understand:{PastTense:"understood"},wake:{PastTense:"woke"},wear:{PastTense:"wore"},win:{Gerund:"winning",PastTense:"won"},withdraw:{PastTense:"withdrew"},write:{Gerund:"writing",PastTense:"wrote",Participle:"written"},tie:{Gerund:"tying",PastTense:"tied"},ski:{PastTense:"skiied"},boil:{Actor:"boiler"},miss:{PresentTense:"miss"},act:{Actor:"actor"},compete:{Gerund:"competing",PastTense:"competed",Actor:"competitor"},being:{Gerund:"are",PastTense:"were",PresentTense:"are"},imply:{PastTense:"implied",PresentTense:"implies"},ice:{Gerund:"icing",PastTense:"iced"},develop:{PastTense:"developed",Actor:"developer",Gerund:"developing"},wait:{Gerund:"waiting",PastTense:"waited",Actor:"waiter"},aim:{Actor:"aimer"},spill:{PastTense:"spilt"},drop:{Gerund:"dropping",PastTense:"dropped"},log:{Gerund:"logging",PastTense:"logged"},rub:{Gerund:"rubbing",PastTense:"rubbed"},smash:{PresentTense:"smashes"},suit:{Gerund:"suiting",PastTense:"suited",Actor:"suiter"}};[["break",{PastTense:"broke"}],["catch",{PastTense:"caught"}],["do",{PastTense:"did",PresentTense:"does"}],["bind",{PastTense:"bound"}],["spread",{PastTense:"spread"}]].forEach((V)=>{C[V[0]]=V[1]}),Object.keys(_).forEach((V)=>{C[V]?C[V].Participle=_[V]:C[V]={Participle:_[V]}}),N.exports=C},{"./participles":19}],19:[function($,N){N.exports={become:"become",begin:"begun",bend:"bent",bet:"bet",bite:"bitten",bleed:"bled",brake:"broken",bring:"brought",build:"built",burn:"burned",burst:"burst",buy:"bought",choose:"chosen",cling:"clung",come:"come",creep:"crept",cut:"cut",deal:"dealt",dig:"dug",dive:"dived",draw:"drawn",dream:"dreamt",drive:"driven",eat:"eaten",fall:"fallen",feed:"fed",fight:"fought",flee:"fled",fling:"flung",forget:"forgotten",forgive:"forgiven",freeze:"frozen",got:"gotten",give:"given",go:"gone",grow:"grown",hang:"hung",have:"had",hear:"heard",hide:"hidden",hit:"hit",hold:"held",hurt:"hurt",keep:"kept",kneel:"knelt",know:"known",lay:"laid",lead:"led",leap:"leapt",leave:"left",lend:"lent",light:"lit",loose:"lost",make:"made",mean:"meant",meet:"met",pay:"paid",prove:"proven",put:"put",quit:"quit",read:"read",ride:"ridden",ring:"rung",rise:"risen",run:"run",say:"said",see:"seen",seek:"sought",sell:"sold",send:"sent",set:"set",sew:"sewn",shake:"shaken",shave:"shaved",shine:"shone",shoot:"shot",shut:"shut",seat:"sat",slay:"slain",sleep:"slept",slide:"slid",sneak:"snuck",speak:"spoken",speed:"sped",spend:"spent",spill:"spilled",spin:"spun",spit:"spat",split:"split",spring:"sprung",stink:"stunk",strew:"strewn",sware:"sworn",sweep:"swept",thrive:"thrived",undergo:"undergone",upset:"upset",weave:"woven",weep:"wept",wind:"wound",wring:"wrung"}},{}],20:[function($,N){"use strict";const _=$("../fns");N.exports=_.uncompress_suffixes(["abandon","accept","add","added","adopt","aid","appeal","applaud","archive","ask","assign","associate","assume","attempt","avoid","ban","become","bomb","cancel","claim","claw","come","control","convey","cook","copy","cut","deem","defy","deny","describe","design","destroy","die","divide","do","doubt","drag","drift","drop","echo","embody","enjoy","envy","excel","fall","fail","fix","float","flood","focus","fold","get","goes","grab","grasp","grow","happen","head","help","hold fast","hope","include","instruct","invest","join","keep","know","learn","let","lift","link","load","loan","look","make due","mark","melt","minus","multiply","name","need","occur","overcome","overlap","overwhelm","owe","pay","plan","plug","plus","pop","pour","proclaim","put","rank","reason","reckon","relax","repair","reply","reveal","revel","risk","rub","ruin","sail","seek","seem","send","set","shout","sleep","sneak","sort","spoil","stem","step","stop","study","take","talk","thank","took","trade","transfer","trap","travel","tune","undergo","undo","uplift","walk","watch","win","wipe","work","yawn","yield"],{prove:",im,ap,disap",serve:",de,ob,re",ress:"exp,p,prog,st,add,d",lect:"ref,se,neg,col,e",sist:"in,con,per,re,as",tain:"ob,con,main,s,re",mble:"rese,gru,asse,stu",ture:"frac,lec,tor,fea",port:"re,sup,ex,im",ate:"rel,oper,indic,cre,h,activ,estim,particip,d,anticip,evalu",use:",ca,over,ref,acc,am,pa",ive:"l,rece,d,arr,str,surv,thr,rel",are:"prep,c,comp,sh,st,decl,d,sc",ine:"exam,imag,determ,comb,l,decl,underm,def",nce:"annou,da,experie,influe,bou,convi,enha",ain:"tr,rem,expl,dr,compl,g,str",ent:"prev,repres,r,res,rel,inv",age:"dam,mess,man,encour,eng,discour",rge:"su,cha,eme,u,me",ise:"ra,exerc,prom,surpr,pra",ect:"susp,dir,exp,def,rej",ter:"en,mat,cen,ca,al",end:",t,dep,ext,att",est:"t,sugg,prot,requ,r",ock:"kn,l,sh,bl,unl",nge:"cha,excha,ra,challe,plu",ase:"incre,decre,purch,b,ce",ish:"establ,publ,w,fin,distingu",mit:"per,ad,sub,li",ure:"fig,ens,end,meas",der:"won,consi,mur,wan",ave:"s,sh,w,cr",ire:"requ,des,h,ret",tch:"scra,swi,ma,stre",ack:"att,l,p,cr",ion:"ment,quest,funct,envis",ump:"j,l,p,d",ide:"dec,prov,gu,s",ush:"br,cr,p,r",eat:"def,h,tr,ch",ash:"sm,spl,w,fl",rry:"ca,ma,hu,wo",ear:"app,f,b,disapp",er:"answ,rememb,off,suff,cov,discov,diff,gath,deliv,both,empow,with",le:"fi,sett,hand,sca,whist,enab,smi,ming,ru,sprink,pi",st:"exi,foreca,ho,po,twi,tru,li,adju,boa,contra,boo",it:"vis,ed,depos,sp,awa,inhib,cred,benef,prohib,inhab",nt:"wa,hu,pri,poi,cou,accou,confro,warra,pai",ch:"laun,rea,approa,sear,tou,ar,enri,atta",ss:"discu,gue,ki,pa,proce,cro,glo,dismi",ll:"fi,pu,ki,ca,ro,sme,reca,insta",rn:"tu,lea,conce,retu,bu,ea,wa,gove",ce:"redu,produ,divor,noti,for,repla",te:"contribu,uni,tas,vo,no,constitu,ci",rt:"sta,comfo,exe,depa,asse,reso,conve",ck:"su,pi,che,ki,tri,wre",ct:"intera,restri,predi,attra,depi,condu",ke:"sta,li,bra,overta,smo,disli",se:"collap,suppo,clo,rever,po,sen",nd:"mi,surrou,dema,remi,expa,comma",ve:"achie,invol,remo,lo,belie,mo",rm:"fo,perfo,confi,confo,ha",or:"lab,mirr,fav,monit,hon",ue:"arg,contin,val,iss,purs",ow:"all,foll,sn,fl,borr",ay:"pl,st,betr,displ,portr",ze:"recogni,reali,snee,ga,emphasi",ip:"cl,d,gr,sl,sk",re:"igno,sto,interfe,sco",ng:"spri,ba,belo,cli",ew:"scr,vi,revi,ch",gh:"cou,lau,outwei,wei",ly:"app,supp,re,multip",ge:"jud,acknowled,dod,alle",en:"list,happ,threat,strength",ee:"fors,agr,disagr,guarant",et:"budg,regr,mark,targ",rd:"rega,gua,rewa,affo",am:"dre,j,sl,ro",ry:"va,t,c,bu"})},{"../fns":5}],21:[function($,N,A){"use strict";const _=$("./tags/colors"),C={reset:"\x1B[0m",red:"\x1B[31m",green:"\x1B[32m",yellow:"\x1B[33m",blue:"\x1B[34m",magenta:"\x1B[35m",cyan:"\x1B[36m",black:"\x1B[30m"};"undefined"==typeof N&&Object.keys(C).forEach((j)=>{C[j]=""}),A.ensureString=(j)=>{if("string"==typeof j)return j;return"number"==typeof j?""+j:""},A.ensureObject=(j)=>{return"object"==typeof j?null===j||j instanceof Array?{}:j:{}},A.endsWith=function(j,V){return j&&j.substr(-V.length)===V},A.startsWith=function(j,V){return j&&V&&j.substr(0,V.length)===V},A.titleCase=(j)=>{return j.charAt(0).toUpperCase()+j.substr(1)},A.flatten=function(j){let V=[];return j.forEach(function(E){V=V.concat(E)}),V},A.copy=(j)=>{let V={};return j=A.ensureObject(j),Object.keys(j).forEach((E)=>{V[E]=j[E]}),V},A.extend=(j,V)=>{j=A.copy(j);let E=Object.keys(V);for(let z=0;z<E.length;z++)j[E[z]]=V[E[z]];return j},A.green=function(j){return C.green+j+C.reset},A.red=function(j){return C.red+j+C.reset},A.blue=function(j){return C.blue+j+C.reset},A.magenta=function(j){return C.magenta+j+C.reset},A.cyan=function(j){return C.cyan+j+C.reset},A.yellow=function(j){return C.yellow+j+C.reset},A.black=function(j){return C.black+j+C.reset},A.printTag=function(j){return _[j]?A[_[j]](j):j},A.printTerm=function(j){let V=Object.keys(j.tag);for(let E=0;E<V.length;E++)if(_[V[E]]){let z=_[V[E]];return A[z](j.plaintext)}return C.reset+j.plaintext+C.reset},A.leftPad=function(j,V,E){for(E=E||" ",j=j.toString();j.length<V;)j+=E;return j}},{"./tags/colors":173}],22:[function($,N){(function(_){"use strict";const C=$("./result/build"),j=$("../package.json"),V=$("./log"),E=function(z,D,O){return C(z,D,O)};E.version=j.version,E.lexicon=function(){return $("./data/lexicon")},E.verbose=function(z){V.enable(z)},"undefined"==typeof self?"undefined"==typeof window?"undefined"!=typeof _&&(_.nlp=E):window.nlp=E:self.nlp=E,"function"==typeof y&&y.amd&&y(E),"undefined"!=typeof N&&(N.exports=E)}).call(this,"undefined"==typeof global?"undefined"==typeof self?"undefined"==typeof window?{}:window:self:global)},{"../package.json":1,"./data/lexicon":7,"./log":23,"./result/build":24}],23:[function($,N){"use strict";const _=$("../fns");let C=!1;N.exports={enable:(j)=>{j===void 0&&(j=!0),C=j},here:(j)=>{(!0===C||C===j)&&console.log("  "+j)},tell:(j,V)=>{(!0===C||C===V)&&("object"==typeof j&&(j=JSON.stringify(j)),j="    "+j,console.log(j))},tagAs:(j,V,E)=>{if(!0===C||"tagger"===C){let z=j.normal||"["+j.silent_term+"]";z=_.yellow(z),z=_.leftPad("'"+z+"'",20),z+="  ->   "+_.printTag(V),z=_.leftPad(z,54),console.log("       "+z+"("+_.cyan(E||"")+")")}}}},{"../fns":21}],24:[function($,N){"use strict";const _=$("./index"),C=$("./tokenize"),j=$("./paths").Terms,V=$("../term/methods/normalize/normalize").normalize,E=$("../tags"),z=function(M){return M=M||{},Object.keys(M).reduce((F,S)=>{F[S]=M[S];let W=V(S);return S!==W&&(F[W]=M[S]),F},{})},D=function(M){console.log(M),console.log(E)};N.exports=(M,F,S)=>{let W=C(M);F=z(F);let q=W.map((I)=>j.fromString(I,F));S&&D(S);let G=new _(q,F,null,S);return G.list.forEach((I)=>{I.refText=G}),G}},{"../tags":175,"../term/methods/normalize/normalize":182,"./index":25,"./paths":37,"./tokenize":130}],25:[function($,N){"use strict";class _{constructor(j,V,E,z){this.list=j||[],this.reference=E,this.tagSet=z}get found(){return 0<this.list.length}get length(){return this.list.length}get isA(){return"Text"}get parent(){return this.reference||this}set parent(j){return this.reference=j,this}all(){return this.parent}index(){return this.list.map((j)=>j.index())}data(){return this.list.map((j)=>{return{normal:j.out("normal"),text:j.out("text")}})}debug(j){return out(this,"debug",j)}get whitespace(){return{before:(j)=>{return this.list.forEach((V)=>{V.whitespace.before(j)}),this},after:(j)=>{return this.list.forEach((V)=>{V.whitespace.after(j)}),this}}}}N.exports=_,_=$("./methods/array")(_),_=$("./methods/loops")(_),_=$("./methods/match")(_),_=$("./methods/out")(_),_=$("./methods/sort")(_),_=$("./methods/split")(_),_=$("./methods/tag")(_),_=$("./methods/normalize")(_);const C={acronyms:$("./subset/acronyms"),adjectives:$("./subset/adjectives"),adverbs:$("./subset/adverbs"),clauses:$("./subset/clauses"),contractions:$("./subset/contractions"),dates:$("./subset/dates"),hashTags:$("./subset/hashTags"),nouns:$("./subset/nouns"),organizations:$("./subset/organizations"),people:$("./subset/people"),phoneNumbers:$("./subset/phoneNumbers"),places:$("./subset/places"),questions:$("./subset/sentences/questions"),quotations:$("./subset/quotations"),sentences:$("./subset/sentences"),statements:$("./subset/sentences/statements"),terms:$("./subset/terms"),topics:$("./subset/topics"),urls:$("./subset/urls"),values:$("./subset/values"),verbs:$("./subset/verbs"),ngrams:$("./subset/ngrams"),startGrams:$("./subset/ngrams/startGrams"),endGrams:$("./subset/ngrams/endGrams")};Object.keys(C).forEach((j)=>{_.prototype[j]=function(V,E){let z=C[j],D=z.find(this,V,E);return new C[j](D.list,this.lexicon,this.parent)}})},{"./methods/array":26,"./methods/loops":27,"./methods/match":28,"./methods/normalize":29,"./methods/out":30,"./methods/sort":33,"./methods/split":35,"./methods/tag":36,"./subset/acronyms":38,"./subset/adjectives":39,"./subset/adverbs":47,"./subset/clauses":49,"./subset/contractions":53,"./subset/dates":55,"./subset/hashTags":62,"./subset/ngrams":66,"./subset/ngrams/endGrams":63,"./subset/ngrams/startGrams":67,"./subset/nouns":69,"./subset/organizations":78,"./subset/people":80,"./subset/phoneNumbers":82,"./subset/places":83,"./subset/quotations":85,"./subset/sentences":86,"./subset/sentences/questions":87,"./subset/sentences/statements":90,"./subset/terms":93,"./subset/topics":95,"./subset/urls":96,"./subset/values":97,"./subset/verbs":110}],26:[function($,N){"use strict";const _=$("../../terms");N.exports=(j)=>{const V={clone:function(){let E=this.list.map((z)=>{return z.clone()});return new j(E)},term:function(E){let z=this.list.map((D)=>{let O=[],M=D.terms[E];return M&&(O=[M]),new _(O,this.lexicon,this.refText,this.refTerms)});return new j(z,this.lexicon,this.parent)},firstTerm:function(){return this.match("^.")},lastTerm:function(){return this.match(".$")},slice:function(E,z){return this.list=this.list.slice(E,z),this},get:function(E){if(!E&&0!==E||!this.list[E])return new j([],this.lexicon,this.parent);let z=this.list[E];return new j([z],this.lexicon,this.parent)},first:function(E){return E||0===E?new j(this.list.slice(0,E),this.lexicon,this.parent):this.get(0)},last:function(E){if(!E&&0!==E)return this.get(this.list.length-1);let z=this.list.length;return new j(this.list.slice(z-E,z),this.lexicon,this.parent)},concat:function(){for(let z,E=0;E<arguments.length;E++)z=arguments[E],"object"==typeof z&&("Text"===z.isA&&z.list&&(this.list=this.list.concat(z.list)),"Terms"===z.isA&&this.list.push(z));return this},flatten:function(){let E=[];if(this.list.forEach((D)=>{E=E.concat(D.terms)}),!E.length)return new j(null,this.lexicon,this.parent);let z=new _(E,this.lexicon,this,null);return new j([z],this.lexicon,this.parent)}};return Object.keys(V).forEach((E)=>{j.prototype[E]=V[E]}),j}},{"../../terms":195}],27:[function($,N){"use strict";let _=["toTitleCase","toUpperCase","toLowerCase","toCamelCase","hyphenate","dehyphenate","insertBefore","insertAfter","insertAt","replace","replaceWith","delete"];N.exports=(j)=>{return _.forEach((V)=>{j.prototype[V]=function(){let z=arguments;return this.list.forEach((D)=>{D[V].apply(D,z)}),this}}),j}},{}],28:[function($,N){"use strict";N.exports=(C)=>{const j={match:function(V,E){let z=[];this.list.forEach((O)=>{let M=O.match(V,E);M.list.forEach((F)=>{z.push(F)})});let D=this.parent||this;return new C(z,this.lexicon,D)},not:function(V,E){let z=[];this.list.forEach((O)=>{let M=O.not(V,E);z=z.concat(M.list)});let D=this.parent||this;return new C(z,this.lexicon,D)},if:function(V,E){let z=[];for(let M,O=0;O<this.list.length;O++)M=this.list[O].match(V,E),M.found&&z.push(this.list[O]);let D=this.parent||this;return new C(z,this.lexicon,D)},ifNo:function(V,E){let z=[];for(let M,O=0;O<this.list.length;O++)M=this.list[O].match(V,E),M.found||z.push(this.list[O]);let D=this.parent||this;return new C(z,this.lexicon,D)}};return j.and=j.match,Object.keys(j).forEach((V)=>{C.prototype[V]=j[V]}),C}},{}],29:[function($,N){"use strict";const _={whitespace:!0,case:!0,numbers:!0,punctuation:!0,unicode:!0,contractions:!0},C={whitespace:(V)=>{return V.terms().list.forEach((E,z)=>{let D=E.terms[0];0<z?D.whitespace.before=" ":0===z&&(D.whitespace.before=""),D.whitespace.after=""}),V},case:(V)=>{return V.list.forEach((E)=>{E.terms.forEach((z,D)=>{0===D||z.tag.Person||z.tag.Place||z.tag.Organization?E.toTitleCase():E.toLowerCase()})}),V},numbers:(V)=>{return V.values().toNumber()},punctuation:(V)=>{return V.list.forEach((E)=>{E.terms[0]._text=E.terms[0]._text.replace(/^¿/,"");for(let O,D=0;D<E.terms.length-1;D++)O=E.terms[D],O._text=O._text.replace(/[:;,]$/,"");let z=E.terms[E.terms.length-1];z._text=z._text.replace(/\.+$/,"."),z._text=z._text.replace(/!+$/,"!"),z._text=z._text.replace(/\?+!?$/,"?")}),V},contractions:(V)=>{return V.contractions().expand()}};N.exports=(V)=>{return V.prototype.normalize=function(E){return E=E||_,Object.keys(E).forEach((z)=>{C[z]&&C[z](this)}),this},V}},{}],30:[function($,N){"use strict";const _=$("./topk"),C=$("./offset"),j={text:(E)=>{return E.list.reduce((z,D)=>{return z+=D.out("text"),z},"")},normal:(E)=>{return E.list.map((z)=>{let D=z.out("normal"),O=z.last();if(O){let M=O.endPunctuation();("."===M||"!"===M||"?"===M)&&(D+=M)}return D}).join(" ")},root:(E)=>{return E.list.map((z)=>{return z.out("root")}).join(" ")},offsets:(E)=>{return C(E)},grid:(E)=>{return E.list.reduce((z,D)=>{return z+=D.out("grid"),z},"")},color:(E)=>{return E.list.reduce((z,D)=>{return z+=D.out("color"),z},"")},array:(E)=>{return E.list.reduce((z,D)=>{return z.push(D.out("normal")),z},[])},json:(E)=>{return E.list.reduce((z,D)=>{let O=D.terms.map((M)=>{return{text:M.text,normal:M.normal,tags:M.tag}});return z.push(O),z},[])},html:(E)=>{let z=E.list.reduce((D,O)=>{let M=O.terms.reduce((F,S)=>{return F+="\n    "+S.out("html"),F},"");return D+="\n  <span>"+M+"\n  </span>"},"");return"<span> "+z+"\n</span>"},terms:(E)=>{let z=[];return E.list.forEach((D)=>{D.terms.forEach((O)=>{z.push({text:O.text,normal:O.normal,tags:Object.keys(O.tag)})})}),z},debug:(E)=>{return console.log("===="),E.list.forEach((z)=>{console.log("   --"),z.debug()}),E},topk:(E)=>{return _(E)}};j.plaintext=j.text,j.normalized=j.normal,j.colors=j.color,j.tags=j.terms,j.offset=j.offsets,j.frequency=j.topk,j.freq=j.topk,j.arr=j.array;N.exports=(E)=>{return E.prototype.out=function(z){return j[z]?j[z](this):j.text(this)},E.prototype.debug=function(){return j.debug(this)},E}},{"./offset":31,"./topk":32}],31:[function($,N){"use strict";const _=(j,V)=>{let E=0;for(let z=0;z<j.list.length;z++)for(let O,D=0;D<j.list[z].terms.length;D++){if(O=j.list[z].terms[D],O.uid===V.uid)return E;E+=O.whitespace.before.length+O._text.length+O.whitespace.after.length}return null};N.exports=(j)=>{let V=j.all();return j.list.map((E)=>{return{text:E.out("text"),normal:E.out("normal"),offset:_(V,E.terms[0]),length:E.out("text").length}})}},{}],32:[function($,N){"use strict";N.exports=function(C,j){let V={};C.list.forEach((z)=>{let D=z.out("root");V[D]=V[D]||0,V[D]+=1});let E=[];return Object.keys(V).forEach((z)=>{E.push({normal:z,count:V[z]})}),E.forEach((z)=>{z.percent=parseFloat((100*(z.count/C.list.length)).toFixed(2))}),E=E.sort((z,D)=>{return z.count>D.count?-1:1}),j&&(E=E.splice(0,j)),E}},{}],33:[function($,N){"use strict";const _=$("./methods");N.exports=(j)=>{const V={sort:function(E){return E=E||"alphabetical",E=E.toLowerCase(),E&&"alpha"!==E&&"alphabetical"!==E?"chron"===E||"chronological"===E?_.chron(this,j):"length"===E?_.lengthFn(this,j):"freq"===E||"frequency"===E?_.freq(this,j):"wordcount"===E?_.wordCount(this,j):this:_.alpha(this,j)},reverse:function(){return this.list=this.list.reverse(),this},unique:function(){let E={};return this.list=this.list.filter((z)=>{let D=z.out("root");return!E[D]&&(E[D]=!0,!0)}),this}};return Object.keys(V).forEach((E)=>{j.prototype[E]=V[E]}),j}},{"./methods":34}],34:[function($,N,A){"use strict";const _=function(C){return C=C.sort((j,V)=>{return j.index>V.index?1:j.index===V.index?0:-1}),C.map((j)=>j.ts)};A.alpha=function(C){return C.list.sort((j,V)=>{if(j===V)return 0;if(j.terms[0]&&V.terms[0]){if(j.terms[0].root>V.terms[0].root)return 1;if(j.terms[0].root<V.terms[0].root)return-1}return j.out("root")>V.out("root")?1:-1}),C},A.chron=function(C){let j=C.list.map((V)=>{return{ts:V,index:V.termIndex()}});return C.list=_(j),C},A.lengthFn=function(C){let j=C.list.map((V)=>{return{ts:V,index:V.chars()}});return C.list=_(j).reverse(),C},A.wordCount=function(C){let j=C.list.map((V)=>{return{ts:V,index:V.length}});return C.list=_(j),C},A.freq=function(C){let j={};C.list.forEach((E)=>{let z=E.out("root");j[z]=j[z]||0,j[z]+=1});let V=C.list.map((E)=>{let z=j[E.out("root")]||0;return{ts:E,index:-1*z}});return C.list=_(V),C}},{}],35:[function($,N){"use strict";N.exports=(C)=>{const j={splitAfter:function(V,E){let z=[];return this.list.forEach((D)=>{D.splitAfter(V,E).forEach((O)=>{z.push(O)})}),this.list=z,this},splitBefore:function(V,E){let z=[];return this.list.forEach((D)=>{D.splitBefore(V,E).forEach((O)=>{z.push(O)})}),this.list=z,this},splitOn:function(V,E){let z=[];return this.list.forEach((D)=>{D.splitOn(V,E).forEach((O)=>{z.push(O)})}),this.list=z,this}};return Object.keys(j).forEach((V)=>{C.prototype[V]=j[V]}),C}},{}],36:[function($,N){"use strict";N.exports=(C)=>{const j={tag:function(V,E){return this.list.forEach((z)=>{z.tagAs(V,E,this.tagSet)}),this},unTag:function(V,E){return this.list.forEach((z)=>{z.unTag(V,E,this.tagSet)}),this},canBe:function(V){return this.list.forEach((E)=>{E.terms=E.terms.filter((z)=>{return z.canBe(V,this.tagSet)})}),this}};return Object.keys(j).forEach((V)=>{C.prototype[V]=j[V]}),C}},{}],37:[function($,N){N.exports={fns:$("../fns"),log:$("../log"),data:$("../data"),Terms:$("../terms"),tags:$("../tags")}},{"../data":6,"../fns":21,"../log":23,"../tags":175,"../terms":195}],38:[function($,N){"use strict";const _=$("../../index");N.exports=class extends _{data(){return this.terms().list.map((j)=>{let V=j.terms[0],E=V.text.toUpperCase().replace(/\./g).split("");return{periods:E.join("."),normal:E.join(""),text:V.text}})}static find(j,V){return j=j.match("#Acronym"),"number"==typeof V&&(j=j.get(V)),j}}},{"../../index":25}],39:[function($,N){"use strict";const _=$("../../index"),C=$("./methods");N.exports=class extends _{data(){return this.list.map((V)=>{const E=V.out("normal");return{comparative:C.toComparative(E),superlative:C.toSuperlative(E),adverbForm:C.toAdverb(E),nounForm:C.toNoun(E),verbForm:C.toVerb(E),normal:E,text:this.out("text")}})}static find(V,E){return V=V.match("#Adjective"),"number"==typeof E&&(V=V.get(E)),V}}},{"../../index":25,"./methods":41}],40:[function($,N){"use strict";const _=$("../../../../data"),C={};_.superlatives.forEach((j)=>{C[j]=!0}),_.verbConverts.forEach((j)=>{C[j]=!0}),N.exports=C},{"../../../../data":6}],41:[function($,N){"use strict";N.exports={toNoun:$("./toNoun"),toSuperlative:$("./toSuperlative"),toComparative:$("./toComparative"),toAdverb:$("./toAdverb"),toVerb:$("./toVerb")}},{"./toAdverb":42,"./toComparative":43,"./toNoun":44,"./toSuperlative":45,"./toVerb":46}],42:[function($,N){"use strict";N.exports=function(C){const j={idle:"idly","public":"publicly",vague:"vaguely",day:"daily",icy:"icily",single:"singly",female:"womanly",male:"manly",simple:"simply",whole:"wholly",special:"especially",straight:"straight",wrong:"wrong",fast:"fast",hard:"hard",late:"late",early:"early",well:"well",good:"well",little:"little",long:"long",low:"low",best:"best",latter:"latter",bad:"badly"},E=[{reg:/al$/i,repl:"ally"},{reg:/ly$/i,repl:"ly"},{reg:/(.{3})y$/i,repl:"$1ily"},{reg:/que$/i,repl:"quely"},{reg:/ue$/i,repl:"uly"},{reg:/ic$/i,repl:"ically"},{reg:/ble$/i,repl:"bly"},{reg:/l$/i,repl:"ly"}],z=[/airs$/,/ll$/,/ee.$/,/ile$/];if({foreign:1,black:1,modern:1,next:1,difficult:1,degenerate:1,young:1,awake:1,back:1,blue:1,brown:1,orange:1,complex:1,cool:1,dirty:1,done:1,empty:1,fat:1,fertile:1,frozen:1,gold:1,grey:1,gray:1,green:1,medium:1,parallel:1,outdoor:1,unknown:1,undersized:1,used:1,welcome:1,yellow:1,white:1,fixed:1,mixed:1,"super":1,guilty:1,tiny:1,able:1,unable:1,same:1,adult:1}[C])return null;if(j[C])return j[C];if(3>=C.length)return null;for(let D=0;D<z.length;D++)if(C.match(z[D]))return null;for(let D=0;D<E.length;D++)if(C.match(E[D].reg))return C.replace(E[D].reg,E[D].repl);return C+"ly"}},{}],43:[function($,N){"use strict";const _=$("./convertable"),C={grey:"greyer",gray:"grayer",green:"greener",yellow:"yellower",red:"redder",good:"better",well:"better",bad:"worse",sad:"sadder",big:"bigger"},j={overweight:1,main:1,nearby:1,asleep:1,weekly:1,secret:1,certain:1},V=[{reg:/y$/i,repl:"ier"},{reg:/([aeiou])t$/i,repl:"$1tter"},{reg:/([aeou])de$/i,repl:"$1der"},{reg:/nge$/i,repl:"nger"}],E=[/ght$/,/nge$/,/ough$/,/ain$/,/uel$/,/[au]ll$/,/ow$/,/old$/,/oud$/,/e[ae]p$/],z=[/ary$/,/ous$/];N.exports=function(O){if(j.hasOwnProperty(O))return null;if(C.hasOwnProperty(O))return C[O];for(let M=0;M<V.length;M++)if(O.match(V[M].reg))return O.replace(V[M].reg,V[M].repl);if(_[O]!==void 0)return O.match(/e$/)?O+"r":O+"er";for(let M=0;M<z.length;M++)if(O.match(z[M]))return"more "+O;for(let M=0;M<E.length;M++)if(O.match(E[M]))return O+"er";return"more "+O}},{"./convertable":40}],44:[function($,N){"use strict";N.exports=function(C){const j={clean:"cleanliness",naivety:"naivety",hurt:"hurt"};if(!C)return"";if(j.hasOwnProperty(C))return j[C];if(C.match(" "))return C;if(C.match(/w$/))return C;const V=[{reg:/y$/,repl:"iness"},{reg:/le$/,repl:"ility"},{reg:/ial$/,repl:"y"},{reg:/al$/,repl:"ality"},{reg:/ting$/,repl:"ting"},{reg:/ring$/,repl:"ring"},{reg:/bing$/,repl:"bingness"},{reg:/sing$/,repl:"se"},{reg:/ing$/,repl:"ment"},{reg:/ess$/,repl:"essness"},{reg:/ous$/,repl:"ousness"}];for(let E=0;E<V.length;E++)if(C.match(V[E].reg))return C.replace(V[E].reg,V[E].repl);return C.match(/s$/)?C:C+"ness"}},{}],45:[function($,N){"use strict";const _=$("./convertable"),C={nice:"nicest",late:"latest",hard:"hardest",inner:"innermost",outer:"outermost",far:"furthest",worse:"worst",bad:"worst",good:"best",big:"biggest"},j={overweight:1,ready:1},V=[{reg:/y$/i,repl:"iest"},{reg:/([aeiou])t$/i,repl:"$1ttest"},{reg:/([aeou])de$/i,repl:"$1dest"},{reg:/nge$/i,repl:"ngest"}],E=[/ght$/,/nge$/,/ough$/,/ain$/,/uel$/,/[au]ll$/,/ow$/,/oud$/,/...p$/],z=[/ary$/],D=function(M){return M.match(/e$/)?M+"st":M+"est"};N.exports=function(M){if(C.hasOwnProperty(M))return C[M];for(let F=0;F<V.length;F++)if(M.match(V[F].reg))return M.replace(V[F].reg,V[F].repl);if(_.hasOwnProperty(M))return D(M);if(j.hasOwnProperty(M))return"most "+M;for(let F=0;F<z.length;F++)if(M.match(z[F]))return"most "+M;for(let F=0;F<E.length;F++)if(M.match(E[F]))return C.hasOwnProperty(M)?C[M]:D(M);return"most "+M}},{"./convertable":40}],46:[function($,N){"use strict";const _=$("../../../../data"),C={red:"redden",sad:"sadden",fat:"fatten"},j=_.verbConverts.reduce((E,z)=>{return E[z]=!0,E},{});N.exports=(E)=>{return j[E]?C[E]?C[E]:E.match(/e$/)?E+"n":E+"en":E}},{"../../../../data":6}],47:[function($,N){"use strict";const _=$("../../index"),C=$("./toAdjective");N.exports=class extends _{data(){return this.terms().list.map((V)=>{let E=V.terms[0];return{adjectiveForm:C(E.normal),normal:E.normal,text:E.text}})}static find(V,E){return V=V.match("#Adverb+"),"number"==typeof E&&(V=V.get(E)),V}}},{"../../index":25,"./toAdjective":48}],48:[function($,N){"use strict";const _={idly:"idle",sporadically:"sporadic",basically:"basic",grammatically:"grammatical",alphabetically:"alphabetical",economically:"economical",conically:"conical",politically:"political",vertically:"vertical",practically:"practical",theoretically:"theoretical",critically:"critical",fantastically:"fantastic",mystically:"mystical",pornographically:"pornographic",fully:"full",jolly:"jolly",wholly:"whole"},C=[{reg:/bly$/i,repl:"ble"},{reg:/gically$/i,repl:"gical"},{reg:/([rsdh])ically$/i,repl:"$1ical"},{reg:/ically$/i,repl:"ic"},{reg:/uly$/i,repl:"ue"},{reg:/ily$/i,repl:"y"},{reg:/(.{3})ly$/i,repl:"$1"}];N.exports=function(V){if(_.hasOwnProperty(V))return _[V];for(let E=0;E<C.length;E++)if(V.match(C[E].reg))return V.replace(C[E].reg,C[E].repl);return V}},{}],49:[function($,N){"use strict";const _=$("../../index");N.exports=class extends _{static find(j,V){return j=j.splitAfter("#ClauseEnd"),"number"==typeof V&&(j=j.get(V)),j}}},{"../../index":25}],50:[function($,N){"use strict";const _=(j,V)=>{V.whitespace.after=j.whitespace.after,j.whitespace.after="",V.whitespace.before="",j.silent_term=j.text,V.silent_term=V.text,V.text="",j.tagAs("Contraction","new-contraction"),V.tagAs("Contraction","new-contraction")};N.exports=function(j){return!1===j.expanded||j.match("#Contraction").found?j:(j.match("(#Noun|#QuestionWord) is").list.forEach((V)=>{_(V.terms[0],V.terms[1]),V.terms[0].text+="'s",V.contracted=!0}),j.match("#PronNoun did").list.forEach((V)=>{_(V.terms[0],V.terms[1]),V.terms[0].text+="'d",V.contracted=!0}),j.match("#QuestionWord (did|do)").list.forEach((V)=>{_(V.terms[0],V.terms[1]),V.terms[0].text+="'d",V.contracted=!0}),j.match("#Noun (could|would)").list.forEach((V)=>{_(V.terms[0],V.terms[1]),V.terms[0].text+="'d",V.contracted=!0}),j.match("(they|we|you) are").list.forEach((V)=>{_(V.terms[0],V.terms[1]),V.terms[0].text+="'re",V.contracted=!0}),j.match("i am").list.forEach((V)=>{_(V.terms[0],V.terms[1]),V.terms[0].text+="'m",V.contracted=!0}),j.match("(#Noun|#QuestionWord) will").list.forEach((V)=>{_(V.terms[0],V.terms[1]),V.terms[0].text+="'ll",V.contracted=!0}),j.match("(they|we|you|i) have").list.forEach((V)=>{_(V.terms[0],V.terms[1]),V.terms[0].text+="'ve",V.contracted=!0}),j.match("(#Copula|#Modal|do) not").list.forEach((V)=>{_(V.terms[0],V.terms[1]),V.terms[0].text+="n't",V.contracted=!0}),j)}},{}],51:[function($,N){"use strict";const _=$("../../paths").Terms,C=$("./contract"),j=function(E){return!1===E.contracted?E:(E.terms.forEach((z)=>{z.silent_term&&(!z.text&&(z.whitespace.before=" "),z._text=z.silent_term,z.normalize(),z.silent_term=null,z.unTag("Contraction","expanded"))}),E)};N.exports=class extends _{data(){let E=j(this.clone()),z=C(this.clone());return{text:this.out("text"),normal:this.out("normal"),expanded:{normal:E.out("normal"),text:E.out("text")},contracted:{normal:z.out("normal"),text:z.out("text")},isContracted:!!this.contracted}}expand(){return j(this)}contract(){return C(this)}}},{"../../paths":37,"./contract":50}],52:[function($,N){"use strict";N.exports=(C)=>{let j=C.not("#Contraction"),V=j.match("(#Noun|#QuestionWord) (#Copula|did|do|have|had|could|would|will)");return V.concat(j.match("(they|we|you|i) have")),V.concat(j.match("i am")),V.concat(j.match("(#Copula|#Modal|do) not")),V.list.forEach((E)=>{E.expanded=!0}),V}},{}],53:[function($,N){"use strict";const _=$("../../index"),C=$("./contraction"),j=$("./findPossible");N.exports=class extends _{data(){return this.list.map((E)=>E.data())}contract(){return this.list.forEach((E)=>E.contract()),this}expand(){return this.list.forEach((E)=>E.expand()),this}contracted(){return this.list=this.list.filter((E)=>{return E.contracted}),this}expanded(){return this.list=this.list.filter((E)=>{return!E.contracted}),this}static find(E,z){let D=E.match("#Contraction #Contraction #Contraction?");D.list=D.list.map((M)=>{let F=new C(M.terms,M.lexicon,M.refText,M.refTerms);return F.contracted=!0,F});let O=j(E);return O.list.forEach((M)=>{let F=new C(M.terms,M.lexicon,M.refText,M.refTerms);F.contracted=!1,D.list.push(F)}),D.sort("chronological"),"number"==typeof z&&(D=D.get(z)),D}}},{"../../index":25,"./contraction":51,"./findPossible":52}],54:[function($,N){"use strict";const _=$("../../paths").Terms,C=$("./parseDate");N.exports=class extends _{constructor(V,E,z,D){super(V,E,z,D),this.month=this.match("#Month")}data(){return{text:this.out("text"),normal:this.out("normal"),date:C(this)}}}},{"../../paths":37,"./parseDate":58}],55:[function($,N){"use strict";const _=$("../../index"),C=$("./date"),j=$("./weekday"),V=$("./month");N.exports=class extends _{data(){return this.list.map((z)=>z.data())}toShortForm(){return this.match("#Month").terms().list.forEach((z)=>{let D=z.terms[0];V.toShortForm(D)}),this.match("#WeekDay").terms().list.forEach((z)=>{let D=z.terms[0];j.toShortForm(D)}),this}toLongForm(){return this.match("#Month").terms().list.forEach((z)=>{let D=z.terms[0];V.toLongForm(D)}),this.match("#WeekDay").terms().list.forEach((z)=>{let D=z.terms[0];j.toLongForm(D)}),this}static find(z,D){let O=z.match("#Date+");return"number"==typeof D&&(O=O.get(D)),O.list=O.list.map((M)=>{return new C(M.terms,M.lexicon,M.refText,M.refTerms)}),O}}},{"../../index":25,"./date":54,"./month":57,"./weekday":61}],56:[function($,N,A){A.longMonths={january:0,february:1,march:2,april:3,may:4,june:5,july:6,august:7,september:8,october:9,november:10,december:11},A.shortMonths={jan:0,feb:1,febr:1,mar:2,apr:3,may:4,jun:5,jul:6,aug:7,sep:8,sept:8,oct:9,nov:10,dec:11}},{}],57:[function($,N){"use strict";const _=$("./data"),C=_.shortMonths,j=_.longMonths;N.exports={index:function(V){if(V.tag.Month){if(j[V.normal]!==void 0)return j[V.normal];if(void 0!==C[V.normal])return C[V.normal]}return null},toShortForm:function(V){if(void 0!==V.tag.Month&&void 0!==j[V.normal]){let E=Object.keys(C);V.text=E[j[V.normal]]}return V.dirty=!0,V},toLongForm:function(V){if(void 0!==V.tag.Month&&void 0!==C[V.normal]){let E=Object.keys(j);V.text=E[C[V.normal]]}return V.dirty=!0,V}}},{"./data":56}],58:[function($,N){"use strict";const _=$("./parseTime"),C=$("./weekday"),j=$("./month"),V=(D)=>{return D&&31>D&&0<D},E=(D)=>{return D&&1e3<D&&3e3>D};N.exports=(D)=>{let O={month:null,date:null,weekday:null,year:null,named:null,time:null},M=D.match("(#Holiday|today|tomorrow|yesterday)");if(M.found&&(O.named=M.out("normal")),M=D.match("#Month"),M.found&&(O.month=j.index(M.list[0].terms[0])),M=D.match("#WeekDay"),M.found&&(O.weekday=C.index(M.list[0].terms[0])),M=D.match("#Time"),M.found&&(O.time=_(D),D.not("#Time")),M=D.match("#Month #Value #Year"),M.found){let F=M.values().numbers();V(F[0])&&(O.date=F[0]);let S=parseInt(D.match("#Year").out("normal"),10);E(S)&&(O.year=S)}if(!M.found){if(M=D.match("#Month #Value"),M.found){let F=M.values().numbers(),S=F[0];V(S)&&(O.date=S)}if(M=D.match("#Month #Year"),M.found){let F=parseInt(D.match("#Year").out("normal"),10);E(F)&&(O.year=F)}}if(M=D.match("#Value of #Month"),M.found){let F=M.values().numbers()[0];V(F)&&(O.date=F)}return O}},{"./month":57,"./parseTime":59,"./weekday":61}],59:[function($,N){"use strict";const _=(V)=>{return V&&0<V&&25>V},C=(V)=>{return V&&0<V&&60>V};N.exports=(V)=>{let E={logic:null,hour:null,minute:null,second:null,timezone:null},z=V.match("(by|before|for|during|at|until|after) #Time").firstTerm();z.found&&(E.logic=z.out("normal"));let D=V.match("#Time");return D.terms().list.forEach((O)=>{let M=O.terms[0],F=M.text.match(/([12]?[0-9]) ?(am|pm)/i);F&&(E.hour=parseInt(F[1],10),"pm"===F[2]&&(E.hour+=12),!_(E.hour)&&(E.hour=null)),F=M.text.match(/([12]?[0-9]):([0-9][0-9]) ?(am|pm)?/i),F&&(E.hour=parseInt(F[1],10),E.minute=parseInt(F[2],10),!C(E.minute)&&(E.minute=null),"pm"===F[3]&&(E.hour+=12),!_(E.hour)&&(E.hour=null))}),E}},{}],60:[function($,N,A){A.longDays={sunday:0,monday:1,tuesday:2,wednesday:3,thursday:4,friday:5,saturday:6},A.shortDays={sun:0,mon:1,tues:2,wed:3,thurs:4,fri:5,sat:6}},{}],61:[function($,N){"use strict";const _=$("./data"),C=_.shortDays,j=_.longDays;N.exports={index:function(V){if(V.tag.WeekDay){if(j[V.normal]!==void 0)return j[V.normal];if(void 0!==C[V.normal])return C[V.normal]}return null},toShortForm:function(V){if(V.tag.WeekDay&&void 0!==j[V.normal]){let E=Object.keys(C);V.text=E[j[V.normal]]}return V},toLongForm:function(V){if(V.tag.WeekDay&&void 0!==C[V.normal]){let E=Object.keys(j);V.text=E[C[V.normal]]}return V}}},{"./data":60}],62:[function($,N){"use strict";const _=$("../../index");N.exports=class extends _{static find(j,V){return j=j.match("#HashTag").terms(),"number"==typeof V&&(j=j.get(V)),j}}},{"../../index":25}],63:[function($,N){"use strict";const _=$("./index"),C=$("./getGrams");class j extends _{static find(V,E,z){let D={size:[1,2,3,4],edge:"end"};z&&(D.size=[z]);let O=C(V,D);return V=new j(O),V.sort(),"number"==typeof E&&(V=V.get(E)),V}}N.exports=j},{"./getGrams":64,"./index":66}],64:[function($,N){"use strict";const _=$("./gram"),C=function(z,D){let O=z.terms;if(O.length<D)return[];let M=[];for(let S,F=0;F<O.length-D+1;F++)S=new _(O.slice(F,F+D)),M.push(S);return M},j=function(z,D){let O=z.terms;if(O.length<D)return[];let M=[new _(O.slice(0,D))];return M},V=function(z,D){let O=z.terms;if(O.length<D)return[];let M=[new _(O.slice(O.length-D,O.length))];return M};N.exports=function(z,D){D=D||{},D.size=D.size||[1,2,3],"number"==typeof D.size&&(D.size=[D.size]);let O={};D.size.forEach((F)=>{z.list.forEach((S)=>{let W=[];W="start"===D.edge?j(S,F):"end"===D.edge?V(S,F):C(S,F),W.forEach((q)=>{O[q.key]?O[q.key].inc():O[q.key]=q})})});let M=Object.keys(O).map((F)=>O[F]);return M}},{"./gram":65}],65:[function($,N){"use strict";const _=$("../../paths").Terms;N.exports=class extends _{constructor(j,V,E,z){super(j,V,E,z),this.key=this.out("normal"),this.size=j.length,this.count=1}inc(){this.count+=1}}},{"../../paths":37}],66:[function($,N){"use strict";const _=$("../../index"),C=$("./getGrams");class j extends _{data(){return this.list.map((V)=>{return{normal:V.out("normal"),count:V.count,size:V.size}})}unigrams(){return this.list=this.list.filter((V)=>1===V.size),this}bigrams(){return this.list=this.list.filter((V)=>2===V.size),this}trigrams(){return this.list=this.list.filter((V)=>3===V.size),this}sort(){return this.list=this.list.sort((V,E)=>{return V.count>E.count?-1:V.count===E.count&&(V.size>E.size||V.key.length>E.key.length)?-1:1}),this}static find(V,E,z){let D={size:[1,2,3,4]};z&&(D.size=[z]);let O=C(V,D);return V=new j(O),V.sort(),"number"==typeof E&&(V=V.get(E)),V}}N.exports=j},{"../../index":25,"./getGrams":64}],67:[function($,N){"use strict";const _=$("./index"),C=$("./getGrams");class j extends _{static find(V,E,z){let D={size:[1,2,3,4],edge:"start"};z&&(D.size=[z]);let O=C(V,D);return V=new j(O),V.sort(),"number"==typeof E&&(V=V.get(E)),V}}N.exports=j},{"./getGrams":64,"./index":66}],68:[function($,N){"use strict";const _=$("../../../tries").utils.uncountable;N.exports=function(j){if(!j.tag.Noun)return!1;if(j.tag.Plural)return!0;const V=["Pronoun","Place","Value","Person","Month","WeekDay","RelativeDay","Holiday"];for(let E=0;E<V.length;E++)if(j.tag[V[E]])return!1;return!_.has(j.normal)}},{"../../../tries":215}],69:[function($,N){"use strict";const _=$("../../index"),C=$("./noun");N.exports=class extends _{isPlural(){return this.list.map((V)=>V.isPlural())}hasPlural(){return this.list.map((V)=>V.hasPlural())}toPlural(){return this.list.forEach((V)=>V.toPlural()),this}toSingular(){return this.list.forEach((V)=>V.toSingular()),this}data(){return this.list.map((V)=>V.data())}static find(V,E){return V=V.clauses(),V=V.match("#Noun+"),V=V.not("#Pronoun"),V=V.not("(#Month|#WeekDay)"),"number"==typeof E&&(V=V.get(E)),V.list=V.list.map((z)=>{return new C(z.terms,z.lexicon,z.refText,z.refTerms)}),V}}},{"../../index":25,"./noun":77}],70:[function($,N){"use strict";const _=$("../../../data").irregular_plurals,C=$("./methods/data/indicators"),j={i:!1,he:!1,she:!1,we:!0,they:!0},V=["Place","Value","Person","Month","WeekDay","RelativeDay","Holiday"],E=(D)=>{for(let O=0;O<V.length;O++)if(D.tag[V[O]])return!1;return!0};N.exports=function(D){let O=D.normal;if(void 0!==j[O])return j[O];if(!E(D))return!1;const M=O.match(/([a-z]*) (of|in|by|for) [a-z]/);if(M&&M[1]&&(O=M[1]),_.toSingle[O])return!0;if(_.toPlural[O])return!1;for(let F=0;F<C.plural_indicators.length;F++)if(O.match(C.plural_indicators[F]))return!0;for(let F=0;F<C.singular_indicators.length;F++)if(O.match(C.singular_indicators[F]))return!1;return O.match(/s$/)&&!O.match(/ss$/)&&3<O.length}},{"../../../data":6,"./methods/data/indicators":72}],71:[function($,N){"use strict";const _={hour:"an",heir:"an",heirloom:"an",honest:"an",honour:"an",honor:"an",uber:"an"},C={a:!0,e:!0,f:!0,h:!0,i:!0,l:!0,m:!0,n:!0,o:!0,r:!0,s:!0,x:!0},j=[/^onc?e/i,/^u[bcfhjkqrstn][aeiou]/i,/^eul/i];N.exports=function(E){let z=E.normal;if(_.hasOwnProperty(z))return _[z];let D=z.substr(0,1);if(E.isAcronym()&&C.hasOwnProperty(D))return"an";for(let O=0;O<j.length;O++)if(z.match(j[O]))return"a";return z.match(/^[aeiou]/i)?"an":"a"}},{}],72:[function($,N){"use strict";const _=[/(^v)ies$/i,/ises$/i,/ives$/i,/(antenn|formul|nebul|vertebr|vit)ae$/i,/(octop|vir|radi|nucle|fung|cact|stimul)i$/i,/(buffal|tomat|tornad)oes$/i,/(analy|ba|diagno|parenthe|progno|synop|the)ses$/i,/(vert|ind|cort)ices$/i,/(matr|append)ices$/i,/(x|ch|ss|sh|s|z|o)es$/i,/men$/i,/news$/i,/.tia$/i,/(^f)ves$/i,/(lr)ves$/i,/(^aeiouy|qu)ies$/i,/(m|l)ice$/i,/(cris|ax|test)es$/i,/(alias|status)es$/i,/ics$/i],C=[/(ax|test)is$/i,/(octop|vir|radi|nucle|fung|cact|stimul)us$/i,/(octop|vir)i$/i,/(rl)f$/i,/(alias|status)$/i,/(bu)s$/i,/(al|ad|at|er|et|ed|ad)o$/i,/(ti)um$/i,/(ti)a$/i,/sis$/i,/(?:(^f)fe|(lr)f)$/i,/hive$/i,/(^aeiouy|qu)y$/i,/(x|ch|ss|sh|z)$/i,/(matr|vert|ind|cort)(ix|ex)$/i,/(m|l)ouse$/i,/(m|l)ice$/i,/(antenn|formul|nebul|vertebr|vit)a$/i,/.sis$/i,/^(?!talis|.*hu)(.*)man$/i];N.exports={singular_indicators:C,plural_indicators:_}},{}],73:[function($,N){N.exports=[[/(ax|test)is$/i,"$1es"],[/(octop|vir|radi|nucle|fung|cact|stimul)us$/i,"$1i"],[/(octop|vir)i$/i,"$1i"],[/(kn|l|w)ife$/i,"$1ives"],[/^((?:ca|e|ha|(?:our|them|your)?se|she|wo)l|lea|loa|shea|thie)f$/i,"$1ves"],[/^(dwar|handkerchie|hoo|scar|whar)f$/i,"$1ves"],[/(alias|status)$/i,"$1es"],[/(bu)s$/i,"$1ses"],[/(al|ad|at|er|et|ed|ad)o$/i,"$1oes"],[/([ti])um$/i,"$1a"],[/([ti])a$/i,"$1a"],[/sis$/i,"ses"],[/(hive)$/i,"$1s"],[/([^aeiouy]|qu)y$/i,"$1ies"],[/(x|ch|ss|sh|s|z)$/i,"$1es"],[/(matr|vert|ind|cort)(ix|ex)$/i,"$1ices"],[/([m|l])ouse$/i,"$1ice"],[/([m|l])ice$/i,"$1ice"],[/^(ox)$/i,"$1en"],[/^(oxen)$/i,"$1"],[/(quiz)$/i,"$1zes"],[/(antenn|formul|nebul|vertebr|vit)a$/i,"$1ae"],[/(sis)$/i,"ses"],[/^(?!talis|.*hu)(.*)man$/i,"$1men"],[/(.*)/i,"$1s"]].map(function(_){return{reg:_[0],repl:_[1]}})},{}],74:[function($,N){N.exports=[[/([^v])ies$/i,"$1y"],[/ises$/i,"isis"],[/(kn|[^o]l|w)ives$/i,"$1ife"],[/^((?:ca|e|ha|(?:our|them|your)?se|she|wo)l|lea|loa|shea|thie)ves$/i,"$1f"],[/^(dwar|handkerchie|hoo|scar|whar)ves$/i,"$1f"],[/(antenn|formul|nebul|vertebr|vit)ae$/i,"$1a"],[/(octop|vir|radi|nucle|fung|cact|stimul)(i)$/i,"$1us"],[/(buffal|tomat|tornad)(oes)$/i,"$1o"],[/((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$/i,"$1sis"],[/(vert|ind|cort)(ices)$/i,"$1ex"],[/(matr|append)(ices)$/i,"$1ix"],[/(x|ch|ss|sh|s|z|o)es$/i,"$1"],[/men$/i,"man"],[/(n)ews$/i,"$1ews"],[/([ti])a$/i,"$1um"],[/([^aeiouy]|qu)ies$/i,"$1y"],[/(s)eries$/i,"$1eries"],[/(m)ovies$/i,"$1ovie"],[/([m|l])ice$/i,"$1ouse"],[/(cris|ax|test)es$/i,"$1is"],[/(alias|status)es$/i,"$1"],[/(ss)$/i,"$1"],[/(ics)$/i,"$1"],[/s$/i,""]].map(function(_){return{reg:_[0],repl:_[1]}})},{}],75:[function($,N){"use strict";const _=$("../../../../data").irregular_plurals.toPlural,C=$("./data/pluralRules"),j=function(V){if(_[V])return _[V];if(V.match(/([a-z]*) (of|in|by|for) [a-z]/)){const E=(V.match(/^([a-z]*) (of|in|by|for) [a-z]/)||[])[1];if(E){const z=j(E);return z+V.replace(E,"")}}for(let E=0;E<C.length;E++)if(V.match(C[E].reg))return V.replace(C[E].reg,C[E].repl);return null};N.exports=j},{"../../../../data":6,"./data/pluralRules":73}],76:[function($,N){"use strict";const _=$("../../../../data").irregular_plurals.toSingle,C=$("./data/singleRules"),j=function(V){if(_[V])return _[V];if(V.match(/([a-z]*) (of|in|by|for) [a-z]/)){const E=(V.match(/^([a-z]*) (of|in|by|for) [a-z]/)||[])[1];if(E){const z=j(E);return z+V.replace(E,"")}}for(let E=0;E<C.length;E++)if(V.match(C[E].reg))return V.replace(C[E].reg,C[E].repl);return null};N.exports=j},{"../../../../data":6,"./data/singleRules":74}],77:[function($,N){"use strict";const _=$("../../paths").Terms,C=$("./hasPlural"),j=$("./isPlural"),V=$("./makeArticle"),E=$("./methods/pluralize"),z=$("./methods/singularize");N.exports=class extends _{constructor(O,M,F,S){super(O,M,F,S),this.t=this.terms[0]}article(){let O=this.t;return V(O)}isPlural(){let O=this.t;return j(O)}hasPlural(){let O=this.t;return C(O)}toPlural(){let O=this.t;return C(O)&&!j(O)&&(O.text=E(O.text),O.unTag("Plural","toPlural"),O.tagAs("Singular","toPlural")),this}toSingular(){let O=this.t;return j(O)&&(O.text=z(O.text),O.unTag("Plural","toSingular"),O.tagAs("Singular","toSingular")),this}data(){return{article:this.article(),singular:this.toSingular().out("normal"),plural:this.toPlural().out("normal")}}}},{"../../paths":37,"./hasPlural":68,"./isPlural":70,"./makeArticle":71,"./methods/pluralize":75,"./methods/singularize":76}],78:[function($,N){"use strict";const _=$("../../index");N.exports=class extends _{static find(j,V){return j=j.splitAfter("#Comma"),j=j.match("#Organization+"),"number"==typeof V&&(j=j.get(V)),j}}},{"../../index":25}],79:[function($,N){"use strict";const _=$("../../paths").log;N.exports=function(j){return j?j.match(/.(i|ee|[a|e]y|a)$/i)?(_.tell("Female-name suffix"),"Female"):j.match(/[ou]$/i)?(_.tell("Male-name suffix"),"Male"):j.match(/(nn|ll|tt)/i)?(_.tell("Female-name consonant-doubling"),"Female"):null:null}},{"../../paths":37}],80:[function($,N){"use strict";const _=$("../../index"),C=$("./person");N.exports=class extends _{data(){return this.list.map((V)=>V.data())}pronoun(){return this.list.map((V)=>V.pronoun())}static find(V,E){let z=V.clauses();return z=z.match("#Person+"),"number"==typeof E&&(z=z.get(E)),z.list=z.list.map((D)=>{return new C(D.terms,D.lexicon,D.refText,D.refTerms)}),z}}},{"../../index":25,"./person":81}],81:[function($,N){"use strict";const _=$("../../paths").Terms,C=$("./guessGender"),j=$("../../paths").log;N.exports=class extends _{data(){return{text:this.out("text"),normal:this.out("normal"),firstName:this.firstName.out("normal"),middleName:this.middleName.out("normal"),lastName:this.lastName.out("normal"),genderGuess:this.guessGender(),pronoun:this.pronoun(),honorifics:this.honorifics.out("array")}}constructor(E,z,D,O){if(super(E,z,D,O),this.firstName=this.match("#FirstName+"),this.middleName=this.match("#Acronym+"),this.honorifics=this.match("#Honorific"),this.lastName=this.match("#LastName+"),!this.firstName.found&&1<this.length){let M=this.not("(#Acronym|#Honorific)");this.firstName=M.first(),this.lastName=M.last()}return this}guessGender(){if(this.honorifics.match("(mr|mister|sr|sir|jr)").found)return j.tell("known male honorific"),"Male";if(this.honorifics.match("(mrs|miss|ms|misses|mme|mlle)").found)return j.tell("known female honorific"),"Female";if(this.firstName.match("#MaleName").found)return j.tell("known male name"),"Male";if(this.firstName.match("#FemaleName").found)return j.tell("known female name"),"Female";let E=this.firstName.out("normal");return C(E)}pronoun(){let E=this.firstName.out("normal"),z=this.guessGender(E);return"Male"===z?"he":"Female"===z?"she":"they"}root(){let E=this.firstName.out("root"),z=this.lastName.out("root");return E&&z?E+" "+z:z||E||this.out("root")}}},{"../../paths":37,"./guessGender":79}],82:[function($,N){"use strict";const _=$("../../index");N.exports=class extends _{data(){return this.terms().list.map((j)=>{let V=j.terms[0];return{text:V.text}})}static find(j){return j=j.splitAfter("#Comma"),j=j.match("#PhoneNumber+"),"number"==typeof n&&(j=j.get(n)),j}}},{"../../index":25}],83:[function($,N){"use strict";const _=$("../../index"),C=$("./place");N.exports=class extends _{static find(V,E){return V=V.splitAfter("#Comma"),V=V.match("#Place+"),"number"==typeof E&&(V=V.get(E)),V.list=V.list.map((z)=>{return new C(z.terms,z.lexicon,z.refText,z.refTerms)}),V}}},{"../../index":25,"./place":84}],84:[function($,N){"use strict";const _=$("../../paths").Terms;class C extends _{constructor(j,V,E,z){super(j,V,E,z),this.city=this.match("#City"),this.country=this.match("#Country")}get isA(){return"Place"}root(){return this.city.out("root")}}N.exports=C},{"../../paths":37}],85:[function($,N){"use strict";const _=$("../../index");N.exports=class extends _{static find(j,V){return j=j.match("#Quotation+"),"number"==typeof V&&(j=j.get(V)),j}}},{"../../index":25}],86:[function($,N){"use strict";const _=$("../../index"),C=$("./sentence");N.exports=class extends _{constructor(V,E,z){super(V,E,z)}toPastTense(){return this.list=this.list.map((V)=>{return V=V.toPastTense(),new C(V.terms,V.lexicon,V.refText,V.refTerms)}),this}toPresentTense(){return this.list=this.list.map((V)=>{return V=V.toPresentTense(),new C(V.terms,V.lexicon,V.refText,V.refTerms)}),this}toFutureTense(){return this.list=this.list.map((V)=>{return V=V.toFutureTense(),new C(V.terms,V.lexicon,V.refText,V.refTerms)}),this}toNegative(){return this.list=this.list.map((V)=>{return V=V.toNegative(),new C(V.terms,V.lexicon,V.refText,V.refTerms)}),this}toPositive(){return this.list=this.list.map((V)=>{return V=V.toPositive(),new C(V.terms,V.lexicon,V.refText,V.refTerms)}),this}isPassive(){return this.list=this.list.filter((V)=>{return V.isPassive()}),this}prepend(V){return this.list=this.list.map((E)=>{return E.prepend(V)}),this}append(V){return this.list=this.list.map((E)=>{return E.append(V)}),this}toExclamation(){return this.list.forEach((V)=>{V.setPunctuation("!")}),this}toQuestion(){return this.list.forEach((V)=>{V.setPunctuation("?")}),this}toStatement(){return this.list.forEach((V)=>{V.setPunctuation(".")}),this}static find(V,E){return V=V.all(),"number"==typeof E&&(V=V.get(E)),V.list=V.list.map((z)=>{return new C(z.terms,z.lexicon,z.refText,z.refTerms)}),V}}},{"../../index":25,"./sentence":88}],87:[function($,N){"use strict";const _=$("../index");N.exports=class extends _{static find(j,V){j=j.all(),"number"==typeof V&&(j=j.get(V));let E=j.list.filter((z)=>{return"?"===z.last().endPunctuation()});return new _(E,this.lexicon,this.parent)}}},{"../index":86}],88:[function($,N){"use strict";const _=$("../../paths").Terms,C=$("./toNegative"),j=$("./toPositive"),V=$("../verbs/verb"),E=$("./smartInsert");N.exports=class extends _{constructor(D,O,M,F){super(D,O,M,F)}toSingular(){let D=this.match("#Noun").match("!#Pronoun").firstTerm();return D.things().toSingular(),this}toPlural(){let D=this.match("#Noun").match("!#Pronoun").firstTerm();return D.things().toPlural(),this}mainVerb(){let D=this.match("(#Adverb|#Auxillary|#Verb|#Negative|#Particle)+").if("#Verb");return D.found?(D=D.list[0].terms,new V(D,this.lexicon,this.refText,this.refTerms)):null}toPastTense(){let D=this.mainVerb();if(D){let O=D.out("normal");D.toPastTense();let M=D.out("normal"),F=this.parentTerms.replace(O,M);return F}return this}toPresentTense(){let D=this.mainVerb();if(D){let O=D.out("normal");D.toPresentTense();let M=D.out("normal");return this.parentTerms.replace(O,M)}return this}toFutureTense(){let D=this.mainVerb();if(D){let O=D.out("normal");D.toFutureTense();let M=D.out("normal");return this.parentTerms.replace(O,M)}return this}isNegative(){return 1===this.match("#Negative").list.length}toNegative(){return this.isNegative()?this:C(this)}toPositive(){return this.isNegative()?j(this):this}append(D){return E.append(this,D)}prepend(D){return E.prepend(this,D)}setPunctuation(D){let O=this.terms[this.terms.length-1];O.setPunctuation(D)}getPunctuation(){let D=this.terms[this.terms.length-1];return D.getPunctuation()}isPassive(){return this.match("was #Adverb? #PastTense #Adverb? by").found}}},{"../../paths":37,"../verbs/verb":129,"./smartInsert":89,"./toNegative":91,"./toPositive":92}],89:[function($,N){"use strict";N.exports={append:(j,V)=>{let E=j.terms[j.terms.length-1],z=E.endPunctuation();z&&E.killPunctuation(),j.insertAt(j.terms.length,V);let D=j.terms[j.terms.length-1];return z&&(D.text+=z),E.whitespace.after&&(D.whitespace.after=E.whitespace.after,E.whitespace.after=""),j},prepend:(j,V)=>{let E=j.terms[0];if(j.insertAt(0,V),E.text.match(/^[A-Z]/)){!1===E.needsTitleCase()&&E.toLowerCase();let z=j.terms[0];z.toTitleCase()}return j}}},{}],90:[function($,N){"use strict";const _=$("../index");N.exports=class extends _{static find(j,V){j=j.all(),"number"==typeof V&&(j=j.get(V));let E=j.list.filter((z)=>{return"?"!==z.last().endPunctuation()});return new _(E,this.lexicon,this.parent)}}},{"../index":86}],91:[function($,N){"use strict";const _={everyone:"no one",everybody:"nobody",someone:"no one",somebody:"nobody",always:"never"};N.exports=(j)=>{let V=j.match("(everyone|everybody|someone|somebody|always)").first();if(V.found&&_[V.out("normal")]){let z=V.out("normal");return j=j.match(z).replaceWith(_[z]).list[0],j.parentTerms}let E=j.mainVerb();return E&&E.toNegative(),j}},{}],92:[function($,N){"use strict";const _={never:"always",nothing:"everything"};N.exports=(j)=>{let V=j.match("(never|nothing)").first();if(V.found){let E=V.out("normal");if(_[E])return j=j.match(E).replaceWith(_[E]).list[0],j.parentTerms}return j.delete("#Negative"),j}},{}],93:[function($,N){"use strict";const _=$("../../index"),C=$("./term");N.exports=class extends _{data(){return this.list.map((V)=>{return V.data()})}static find(V,E){return V=V.match("."),"number"==typeof E&&(V=V.get(E)),V.list=V.list.map((z)=>{return new C(z.terms,z.lexicon,z.refText,z.refTerms)}),V}}},{"../../index":25,"./term":94}],94:[function($,N){"use strict";const _=$("../../paths").Terms,C=$("../../paths").tags,j={Auxillary:!0};N.exports=class extends _{constructor(E,z,D,O){super(E,z,D,O),this.t=this.terms[0]}data(){let E=this.t;return{spaceBefore:E.whitespace.before,text:E.text,spaceAfter:E.whitespace.after,normal:E.normal,implicit:E.silent_term,bestTag:this.bestTag(),tags:Object.keys(E.tag)}}bestTag(){let E=Object.keys(this.t.tag);return E=E.sort(),E=E.sort((z,D)=>{return!j[D]&&C[z]&&C[D]?C[z].parents.length>C[D].parents.length?-1:1:-1}),E[0]}}},{"../../paths":37}],95:[function($,N){"use strict";const _=$("../../index");N.exports=class extends _{static find(j,V){j=j.clauses();let E=j.people();return E.concat(j.places()),E.concat(j.organizations()),E.sort("chronological"),"number"==typeof V&&(E=E.get(V)),E}}},{"../../index":25}],96:[function($,N){"use strict";const _=$("../../index");N.exports=class extends _{static find(j,V){return j=j.match("#Url"),"number"==typeof V&&(j=j.get(V)),j}}},{"../../index":25}],97:[function($,N){"use strict";const _=$("../../index"),C=$("./value");class j extends _{data(){return this.list.map((V)=>{return V.data()})}noDates(){return this.not("#Date")}numbers(){return this.list.map((V)=>{return V.number()})}toNumber(){return this.list=this.list.map((V)=>{return V.toNumber()}),this}toTextValue(){return this.list=this.list.map((V)=>{return V.toTextValue()}),this}toCardinal(){return this.list=this.list.map((V)=>{return V.toCardinal()}),this}toOrdinal(){return this.list=this.list.map((V)=>{return V.toOrdinal()}),this}toNiceNumber(){return this.list=this.list.map((V)=>{return V.toNiceNumber()}),this}static find(V,E){return V=V.match("#Value+"),V.splitOn("#Year"),"number"==typeof E&&(V=V.get(E)),V.list=V.list.map((z)=>{return new C(z.terms,z.lexicon,z.refText,z.refTerms)}),V}}j.prototype.clone=function(){let V=this.list.map((E)=>{return E.clone()});return new j(V,this.lexicon)},N.exports=j},{"../../index":25,"./value":109}],98:[function($,N){"use strict";const _=$("../toNumber");N.exports=function(j){let V=_(j);if(!V&&0!==V)return null;let E=V%100;if(10<E&&20>E)return""+V+"th";const z={0:"th",1:"st",2:"nd",3:"rd"};let D=""+V,O=D.slice(D.length-1,D.length);return D+=z[O]?z[O]:"th",D}},{"../toNumber":104}],99:[function($,N){N.exports=$("../../paths")},{"../../paths":37}],100:[function($,N){"use strict";const _=$("../toNumber"),C=$("../toText"),j=$("../../../paths").data.ordinalMap.toOrdinal;N.exports=(E)=>{let z=_(E),D=C(z),O=D[D.length-1];return D[D.length-1]=j[O]||O,D.join(" ")}},{"../../../paths":37,"../toNumber":104,"../toText":108}],101:[function($,N){"use strict";N.exports=function(C){if(!C&&0!==C)return null;C=""+C;let j=C.split("."),V=j[0],E=1<j.length?"."+j[1]:"",z=/(\d+)(\d{3})/;for(;z.test(V);)V=V.replace(z,"$1,$2");return V+E}},{}],102:[function($,N){const _=$("../paths"),C=_.data.numbers,j=_.fns,V=j.extend(C.ordinal.ones,C.cardinal.ones),E=j.extend(C.ordinal.teens,C.cardinal.teens),z=j.extend(C.ordinal.tens,C.cardinal.tens),D=j.extend(C.ordinal.multiples,C.cardinal.multiples);N.exports={ones:V,teens:E,tens:z,multiples:D}},{"../paths":99}],103:[function($,N){"use strict";N.exports=(C)=>{const j=[{reg:/^(minus|negative)[\s\-]/i,mult:-1},{reg:/^(a\s)?half[\s\-](of\s)?/i,mult:0.5}];for(let V=0;V<j.length;V++)if(C.match(j[V].reg))return{amount:j[V].mult,str:C.replace(j[V].reg,"")};return{amount:1,str:C}}},{}],104:[function($,N){"use strict";const _=$("./parseNumeric"),C=$("./findModifiers"),j=$("./data"),V=$("./validate"),E=$("./parseDecimals"),z=$("../paths").log,D="parseNumber",O={"a couple":2,"a dozen":12,"two dozen":24,zero:0},M=(W)=>{return Object.keys(W).reduce((q,G)=>{return q+=W[G],q},0)},F=(W)=>{for(let q=0;q<W.terms.length;q++)if(!W.terms[q].tag.NumericValue)return!1;return!0};N.exports=function(W){z.here("parseNumber",D);let q=W.out("normal");if(void 0!==O[q])return O[q];if("a"===q||"an"===q)return 1;if(F(W))return _(W.out("normal"));let G=C(q);q=G.str;let I=null,L={},R=0,B=!1,U=q.split(/[ -]/);for(let Y,Q=0;Q<U.length;Q++)if(Y=U[Q],Y&&"and"!==Y){if("-"===Y||"negative"===Y){B=!0;continue}if(Y.startsWith("-")&&(B=!0,Y=Y.substr(1)),"point"===Y)return R+=M(L),R+=E(U.slice(Q+1,U.length)),R*=G.amount,R;const Z=Y.match(/^([0-9,\. ]+)\/([0-9,\. ]+)$/);if(Z){z.here("fractionMath",D);const K=parseFloat(Z[1].replace(/[, ]/g,"")),X=parseFloat(Z[2].replace(/[, ]/g,""));X&&(R+=K/X||0);continue}if(!V(Y,L))return z.tell("invalid state",D),z.tell(L,D),null;if(Y.match(/^[0-9\.]+$/))L.ones=parseFloat(Y,10);else if(j.ones[Y])L.ones=j.ones[Y];else if(j.teens[Y])L.teens=j.teens[Y];else if(j.tens[Y])L.tens=j.tens[Y];else if(j.multiples[Y]){let K=j.multiples[Y];if(K===I)return z.tell("invalid multiplier",D),null;if(100===K&&U[Q+1]){var H=U[Q+1];j.multiples[H]&&(K*=j.multiples[H],Q+=1)}null==I||K<I?(R+=(M(L)||1)*K,I=K,L={}):(R+=M(L),I=K,R=(R||1)*K,L={})}}return R+=M(L),R*=G.amount,R*=B?-1:1,0===R?null:R}},{"../paths":99,"./data":102,"./findModifiers":103,"./parseDecimals":105,"./parseNumeric":106,"./validate":107}],105:[function($,N){"use strict";const _=$("./data");N.exports=function(j){let V="0.";for(let z,E=0;E<j.length;E++)if(z=j[E],_.ones[z])V+=_.ones[z];else if(_.teens[z])V+=_.teens[z];else if(_.tens[z])V+=_.tens[z];else if(z.match(/^[0-9]$/))V+=z;else return 0;return parseFloat(V)}},{"./data":102}],106:[function($,N){"use strict";N.exports=(C)=>{return C=C.replace(/1st$/,"1"),C=C.replace(/2nd$/,"2"),C=C.replace(/3rd$/,"3"),C=C.replace(/([4567890])r?th$/,"$1"),C=C.replace(/^[$€¥£¢]/,""),C=C.replace(/[%$€¥£¢]$/,""),C=C.replace(/,/g,""),C=C.replace(/([0-9])([a-z]{1,2})$/,"$1"),parseFloat(C)}},{}],107:[function($,N){"use strict";const _=$("./data");N.exports=(j,V)=>{if(_.ones[j]){if(V.ones||V.teens)return!1;}else if(_.teens[j]){if(V.ones||V.teens||V.tens)return!1;}else if(_.tens[j]&&(V.ones||V.teens||V.tens))return!1;return!0}},{"./data":102}],108:[function($,N){"use strict";const _=function(E){let z=E,D=[];return[[1000000000,"million"],[100000000,"hundred million"],[1000000,"million"],[100000,"hundred thousand"],[1000,"thousand"],[100,"hundred"],[1,"one"]].forEach((M)=>{if(E>M[0]){let F=Math.floor(z/M[0]);z-=F*M[0],F&&D.push({unit:M[1],count:F})}}),D},C=function(E){const z=[["ninety",90],["eighty",80],["seventy",70],["sixty",60],["fifty",50],["forty",40],["thirty",30],["twenty",20]],D=["","one","two","three","four","five","six","seven","eight","nine","ten","eleven","twelve","thirteen","fourteen","fifteen","sixteen","seventeen","eighteen","nineteen"];let O=[];for(let M=0;M<z.length;M++)E>=z[M][1]&&(E-=z[M][1],O.push(z[M][0]));return D[E]&&O.push(D[E]),O},j=(E)=>{const z=["zero","one","two","three","four","five","six","seven","eight","nine"];let D=[],O=(""+E).match(/\.([0-9]+)/);if(!O||!O[0])return D;D.push("point");let M=O[0].split("");for(let F=0;F<M.length;F++)D.push(z[M[F]]);return D};N.exports=function(E){let z=[];0>E&&(z.push("negative"),E=Math.abs(E));let D=_(E);for(let M,O=0;O<D.length;O++)M=D[O].unit,"one"===M&&(M="",1<z.length&&z.push("and")),z=z.concat(C(D[O].count)),z.push(M);return z=z.concat(j(E)),z=z.filter((O)=>O),0===z.length&&(z[0]="zero"),z}},{}],109:[function($,N){"use strict";const _=$("../../paths"),C=_.Terms,j=$("./toNumber"),V=$("./toText"),E=$("./toNiceNumber"),z=$("./numOrdinal"),D=$("./textOrdinal"),O=(W)=>{let q=W.terms[W.terms.length-1];return!!q&&!0===q.tag.Ordinal},M=(W)=>{for(let q=0;q<W.terms.length;q++)if(W.terms[q].tag.TextValue)return!0;return!1},F=(W)=>{for(let G,q=0;q<W.terms.length;q++)if(G=W.terms[q],G.tag.TextValue||G.tag.NiceNumber||!G.tag.NumericValue)return!1;return!0};class S extends C{constructor(W,q,G,I){super(W,q,G,I),this.val=this.match("#Value+").list[0],this.unit=this.match("#Unit$").list[0]}number(){let W=j(this.val);return W}toNumber(){let W=this.val;if(F(W))return this;if(O(W)){let q=z(W);this.replaceWith(q,"Value")}else{let q=j(W);null!==q&&this.replaceWith(""+q,"Value")}return this}toTextValue(){let W=this.val;if(M(W))return this;if(O(W)){let I=D(W);return this.replaceWith(I,"Value")}let q=""+j(W),G=V(q).join(" ");return this.replaceWith(G,"Value"),this}toCardinal(){let W=this.val;if(!O(W))return this;if(M(W)){let G=""+j(W),I=V(G).join(" ");return this.replaceWith(I,"Value")}let q=""+j(W);return this.replaceWith(q,"Value")}toOrdinal(){let W=this.val;if(O(W))return this;if(M(W)){let q=D(W);this.replaceWith(q,"Value")}else{let q=z(W);this.replaceWith(q,"Value")}return this}toNiceNumber(){let W=j(this),q=E(W);return this.replaceWith(q,"Value"),this}data(){let W=this.clone().toNumber(),q=this.clone().toTextValue(),G={NumericValue:{cardinal:W.toCardinal().out("text"),ordinal:W.toOrdinal().out("text"),nicenumber:this.toNiceNumber().out("text")},TextValue:{cardinal:q.toCardinal().out("text"),ordinal:q.toOrdinal().out("text")},unit:""};return this.unit&&(G.unit=this.unit.out("text")),G.number=this.number(),G}}S.prototype.clone=function(){let W=this.terms.map((q)=>{return q.clone()});return new S(W,this.lexicon,this.refText,this.refTerms)},N.exports=S},{"../../paths":37,"./numOrdinal":98,"./textOrdinal":100,"./toNiceNumber":101,"./toNumber":104,"./toText":108}],110:[function($,N){"use strict";const _=$("../../index"),C=$("./verb");N.exports=class extends _{constructor(V,E,z){super(V,E,z)}data(){return this.list.map((V)=>{return V.data()})}conjugation(V){return this.list.map((E)=>{return E.conjugation(V)})}conjugate(V){return this.list.map((E)=>{return E.conjugate(V)})}isPlural(){return this.list=this.list.filter((V)=>{return V.isPlural()}),this}isSingular(){return this.list=this.list.filter((V)=>{return!V.isPlural()}),this}isNegative(){return this.list=this.list.filter((V)=>{return V.isNegative()}),this}isPositive(){return this.list=this.list.filter((V)=>{return!V.isNegative()}),this}toNegative(){return this.list=this.list.map((V)=>{return V.toNegative()}),this}toPositive(){return this.list.forEach((V)=>{V.toPositive()}),this}toPastTense(){return this.list.forEach((V)=>{V.toPastTense()}),this}toPresentTense(){return this.list.forEach((V)=>{V.toPresentTense()}),this}toFutureTense(){return this.list.forEach((V)=>{V.toFutureTense()}),this}toInfinitive(){return this.list.forEach((V)=>{V.toInfinitive()}),this}asAdjective(){return this.list.map((V)=>V.asAdjective())}static find(V,E){return V=V.match("(#Adverb|#Auxillary|#Verb|#Negative|#Particle)+").if("#Verb"),V=V.splitAfter("#Comma"),"number"==typeof E&&(V=V.get(E)),V.list=V.list.map((z)=>{return new C(z.terms,z.lexicon,z.refText,z.refTerms)}),new _(V.list,this.lexicon,this.parent)}}},{"../../index":25,"./verb":129}],111:[function($,N){"use strict";const _=$("./methods/predict"),C=function(M){return M.match("#Gerund").found},j=function(M){let F=M.match("#Negative").list;return 2!==F.length&&!(1!==F.length)},V=function(M){return!!M.match("is being #PastTense").found||!!M.match("(had|has) been #PastTense").found||!!M.match("will have been #PastTense").found},E=function(M){return!!M.match("^(had|have) #PastTense")},z=function(M){let F=M.match("#Modal");return F.found?F.out("normal"):null},D=function(M){if(M.auxillary.found){if(M.match("will have #PastTense").found)return"Past";if(M.auxillary.match("will").found)return"Future";if(M.auxillary.match("was").found)return"Past"}if(M.verb){let S=_(M.verb);return{PastTense:"Past",FutureTense:"Future",FuturePerfect:"Future"}[S]||"Present"}return"Present"};N.exports=(M)=>{let F=j(M),S={negative:F,continuous:C(M),passive:V(M),perfect:E(M),modal:z(M),tense:D(M)};return S}},{"./methods/predict":123}],112:[function($,N){"use strict";const _=$("./irregulars"),C=$("./suffixes"),j=$("./toActor"),V=$("./toAdjective"),E=$("./generic"),z=$("../predict"),D=$("../toInfinitive"),O=$("./toBe");N.exports=function(F,S){if("is"===F.normal||"was"===F.normal||"will"===F.normal)return O();F.tag.Contraction&&(F.text=F.silent_term);let W={PastTense:null,PresentTense:null,Infinitive:null,Gerund:null,Actor:null},q=z(F);q&&(W[q]=F.normal),"Infinitive"!==q&&(W.Infinitive=D(F,S)||"");const G=_(W.Infinitive)||{};Object.keys(G).forEach((R)=>{G[R]&&!W[R]&&(W[R]=G[R])});let I=W.Infinitive||F.normal;const L=C(I);return Object.keys(L).forEach((R)=>{L[R]&&!W[R]&&(W[R]=L[R])}),W.Actor||(W.Actor=j(I)),W.Adjective=V(W.Infinitive),Object.keys(W).forEach((R)=>{!W[R]&&E[R]&&(W[R]=E[R](W))}),W}},{"../predict":123,"../toInfinitive":126,"./generic":115,"./irregulars":117,"./suffixes":118,"./toActor":119,"./toAdjective":120,"./toBe":121}],113:[function($,N){N.exports=[{reg:/(eave)$/i,repl:{pr:"$1s",pa:"$1d",gr:"eaving",ar:"$1r"}},{reg:/(ink)$/i,repl:{pr:"$1s",pa:"unk",gr:"$1ing",ar:"$1er"}},{reg:/(end)$/i,repl:{pr:"$1s",pa:"ent",gr:"$1ing",ar:"$1er"}},{reg:/(ide)$/i,repl:{pr:"$1s",pa:"ode",gr:"iding",ar:"ider"}},{reg:/(ake)$/i,repl:{pr:"$1s",pa:"ook",gr:"aking",ar:"$1r"}},{reg:/(eed)$/i,repl:{pr:"$1s",pa:"$1ed",gr:"$1ing",ar:"$1er"}},{reg:/(e)(ep)$/i,repl:{pr:"$1$2s",pa:"$1pt",gr:"$1$2ing",ar:"$1$2er"}},{reg:/(a[tg]|i[zn]|ur|nc|gl|is)e$/i,repl:{pr:"$1es",pa:"$1ed",gr:"$1ing",prt:"$1en"}},{reg:/([i|f|rr])y$/i,repl:{pr:"$1ies",pa:"$1ied",gr:"$1ying"}},{reg:/([td]er)$/i,repl:{pr:"$1s",pa:"$1ed",gr:"$1ing"}},{reg:/([bd]l)e$/i,repl:{pr:"$1es",pa:"$1ed",gr:"$1ing"}},{reg:/(ish|tch|ess)$/i,repl:{pr:"$1es",pa:"$1ed",gr:"$1ing"}},{reg:/(ion|end|e[nc]t)$/i,repl:{pr:"$1s",pa:"$1ed",gr:"$1ing"}},{reg:/(om)e$/i,repl:{pr:"$1es",pa:"ame",gr:"$1ing"}},{reg:/([aeiu])([pt])$/i,repl:{pr:"$1$2s",pa:"$1$2",gr:"$1$2$2ing"}},{reg:/(er)$/i,repl:{pr:"$1s",pa:"$1ed",gr:"$1ing"}},{reg:/(en)$/i,repl:{pr:"$1s",pa:"$1ed",gr:"$1ing"}},{reg:/(..)(ow)$/i,repl:{pr:"$1$2s",pa:"$1ew",gr:"$1$2ing",prt:"$1$2n"}},{reg:/(..)([cs]h)$/i,repl:{pr:"$1$2es",pa:"$1$2ed",gr:"$1$2ing"}},{reg:/([^aeiou][ou])(g|d)$/i,repl:{pr:"$1$2s",pa:"$1$2$2ed",gr:"$1$2$2ing"}},{reg:/([^aeiou][aeiou])(b|t|p|m)$/i,repl:{pr:"$1$2s",pa:"$1$2$2ed",gr:"$1$2$2ing"}},{reg:/([aeiou]zz)$/i,repl:{pr:"$1es",pa:"$1ed",gr:"$1ing"}}]},{}],114:[function($,N){"use strict";const _=$("./irregulars"),C=$("./suffixes"),j=$("./generic"),V=["Gerund","PastTense","PresentTense"];N.exports=(z)=>{let D={Infinitive:z};const O=_(D.Infinitive);null!==O&&Object.keys(O).forEach((F)=>{O[F]&&!D[F]&&(D[F]=O[F])});const M=C(z);Object.keys(M).forEach((F)=>{M[F]&&!D[F]&&(D[F]=M[F])});for(let F=0;F<V.length;F++)D[V[F]]||(D[V[F]]=j[V[F]](D));return D}},{"./generic":115,"./irregulars":117,"./suffixes":118}],115:[function($,N){"use strict";const _=$("../../../../../fns");N.exports={Gerund:(j)=>{let V=j.Infinitive;return _.endsWith(V,"e")?V.replace(/e$/,"ing"):V+"ing"},PresentTense:(j)=>{let V=j.Infinitive;return _.endsWith(V,"s")?V+"es":V.match(/[bcdfghjklmnpqrstvwxz]y$/)?V.slice(0,-1)+"ies":V+"s"},PastTense:(j)=>{let V=j.Infinitive;return _.endsWith(V,"e")?V+"d":_.endsWith(V,"ed")?V:V.match(/[bcdfghjklmnpqrstvwxz]y$/)?V.slice(0,-1)+"ied":V+"ed"}}},{"../../../../../fns":21}],116:[function($,N){"use strict";const _=$("./conjugate"),C=$("./toBe");N.exports=(V,E)=>{let z=V.negative.found;if(V.verb.tag.Copula||"be"===V.verb.normal&&V.auxillary.match("will").found)return C(!1,z);let O=_(V.verb,E);return V.particle.found&&Object.keys(O).forEach((M)=>{O[M]+=V.particle.out()}),V.adverbs.found&&Object.keys(O).forEach((M)=>{O[M]+=V.adverbs.out()}),z&&(O.PastTense="did not "+O.Infinitive,O.PresentTense="does not "+O.Infinitive),O.FutureTense||(z?O.FutureTense="will not "+O.Infinitive:O.FutureTense="will "+O.Infinitive),O}},{"./conjugate":112,"./toBe":121}],117:[function($,N){"use strict";const _=$("../../../../../data").irregular_verbs,C=$("../../../../../fns"),j=Object.keys(_),V=["Participle","Gerund","PastTense","PresentTense","FuturePerfect","PerfectTense","Actor"];N.exports=function(z){if(void 0!==_[z]){let D=C.copy(_[z]);return D.Infinitive=z,D}for(let D=0;D<j.length;D++)for(let M,O=0;O<V.length;O++)if(M=_[j[D]],M[V[O]]===z){let F=C.copy(M);return F.Infinitive=j[D],F}return{}}},{"../../../../../data":6,"../../../../../fns":21}],118:[function($,N){"use strict";const _=$("./data/rules"),C={pr:"PresentTense",pa:"PastTense",gr:"Gerund",prt:"Participle",ar:"Actor"},j=Object.keys(C);N.exports=function(E){let z={};for(let D=0;D<_.length;D++)if(E.match(_[D].reg)){let O=_[D].repl;for(let M=0;M<j.length;M++)if(O[j[M]]){let F=C[j[M]];z[F]=E.replace(_[D].reg,O[j[M]])}return z}return z}},{"./data/rules":113}],119:[function($,N){"use strict";const _={tie:"tier",dream:"dreamer",sail:"sailer",run:"runner",rub:"rubber",begin:"beginner",win:"winner",claim:"claimant",deal:"dealer",spin:"spinner"},C={aid:1,fail:1,appear:1,happen:1,seem:1,"try":1,say:1,marry:1,be:1,forbid:1,understand:1,bet:1},j=[{reg:/e$/i,repl:"er"},{reg:/([aeiou])([mlgp])$/i,repl:"$1$2$2er"},{reg:/([rlf])y$/i,repl:"$1ier"},{reg:/^(.?.[aeiou])t$/i,repl:"$1tter"}];N.exports=function(E){if(C[E])return null;if(_[E])return _[E];for(let z=0;z<j.length;z++)if(E.match(j[z].reg))return E.replace(j[z].reg,j[z].repl);return E+"er"}},{}],120:[function($,N){"use strict";const _=[[/[^aeiou]y$/,"i"],[/([aeiou][n])$/,"$1n"]],C={collect:!0,exhaust:!0,convert:!0,digest:!0,discern:!0,dismiss:!0,reverse:!0,access:!0,collapse:!0,express:!0},j={eat:"edible",hear:"audible",see:"visible",defend:"defensible",write:"legible",move:"movable",divide:"divisible",perceive:"perceptible"};N.exports=function(E){if(j[E])return j[E];for(let D=0;D<_.length;D++)E.match(_[D][0])&&(E=E.replace(_[D][0],_[D][1]));let z=E+"able";return C[E]&&(z=E+"ible"),z}},{}],121:[function($,N){"use strict";N.exports=(C,j)=>{let V={PastTense:"was",PresentTense:"is",FutureTense:"will be",Infinitive:"is",Gerund:"being",Actor:"",PerfectTense:"been",Pluperfect:"been"};return C&&(V.PastTense="were",V.PresentTense="are",V.Infinitive="are"),j&&(V.PastTense+=" not",V.PresentTense+=" not",V.FutureTense="will not be",V.Infinitive+=" not",V.PerfectTense="not "+V.PerfectTense,V.Pluperfect="not "+V.Pluperfect),V}},{}],122:[function($,N){"use strict";N.exports=(C)=>{if(C.match("(are|were|does)").found)return!0;if(C.match("(is|am|do|was)").found)return!1;let j=C.getNoun();if(j&&j.found){if(j.match("#Plural").found)return!0;if(j.match("#Singular").found)return!1}return null}},{}],123:[function($,N){"use strict";const _=$("../../../../../fns"),C=$("./suffix_rules"),j={Infinitive:!0,Gerund:!0,PastTense:!0,PresentTense:!0,FutureTense:!0,PerfectTense:!0,Pluperfect:!0,FuturePerfect:!0,Participle:!0};N.exports=function(E,z){let D=Object.keys(j);for(let M=0;M<D.length;M++)if(E.tag[D[M]])return z&&console.log("predicted "+D[M]+" from pos",path),D[M];const O=Object.keys(C);for(let M=0;M<O.length;M++)if(_.endsWith(E.normal,O[M])&&O[M].length<E.normal.length){if(z){const F="predicted "+C[O[M]]+" from suffix "+O[M];console.log(F,path)}return C[O[M]]}return null}},{"../../../../../fns":21,"./suffix_rules":124}],124:[function($,N){"use strict";const _={Gerund:["ing"],Actor:["erer"],Infinitive:["ate","ize","tion","rify","then","ress","ify","age","nce","ect","ise","ine","ish","ace","ash","ure","tch","end","ack","and","ute","ade","ock","ite","ase","ose","use","ive","int","nge","lay","est","ain","ant","ent","eed","er","le","own","unk","ung","en"],PastTense:["ed","lt","nt","pt","ew","ld"],PresentTense:["rks","cks","nks","ngs","mps","tes","zes","ers","les","acks","ends","ands","ocks","lays","eads","lls","els","ils","ows","nds","ays","ams","ars","ops","ffs","als","urs","lds","ews","ips","es","ts","ns","s"]},C={},j=Object.keys(_),V=j.length;for(let z,E=0;E<V;E++){z=_[j[E]].length;for(let D=0;D<z;D++)C[_[j[E]][D]]=j[E]}N.exports=C},{}],125:[function($,N){"use strict";const _=[[/y$/,"i"],[/([aeiou][n])$/,"$1n"]],C={collect:!0,exhaust:!0,convert:!0,digest:!0,discern:!0,dismiss:!0,reverse:!0,access:!0,collapse:!0,express:!0},j={eat:"edible",hear:"audible",see:"visible",defend:"defensible",write:"legible",move:"movable",divide:"divisible",perceive:"perceptible"};N.exports=function(E){if(j[E])return j[E];for(let D=0;D<_.length;D++)E.match(_[D][0])&&(E=E.replace(_[D][0],_[D][1]));let z=E+"able";return C[E]&&(z=E+"ible"),z}},{}],126:[function($,N){"use strict";const _=$("./rules");let C=$("../../../../../data").irregular_verbs;const j=$("../predict");C=(()=>{return Object.keys(C).reduce((z,D)=>{return Object.keys(C[D]).forEach((O)=>{z[C[D][O]]=D}),z},{})})();N.exports=function(z){if(z.tag.Infinitive)return z.normal;if(C[z.normal])return C[z.normal];let D=j(z);if(_[D])for(let M,O=0;O<_[D].length;O++)if(M=_[D][O],z.normal.match(M.reg))return z.normal.replace(M.reg,M.to);return z.normal}},{"../../../../../data":6,"../predict":123,"./rules":127}],127:[function($,N){"use strict";let _={Participle:[{reg:/own$/i,to:"ow"},{reg:/(.)un([g|k])$/i,to:"$1in$2"}],Actor:[{reg:/(er)er$/i,to:"$1"}],PresentTense:[{reg:/(ies)$/i,to:"y"},{reg:/(tch|sh)es$/i,to:"$1"},{reg:/(ss|zz)es$/i,to:"$1"},{reg:/([tzlshicgrvdnkmu])es$/i,to:"$1e"},{reg:/(n[dtk]|c[kt]|[eo]n|i[nl]|er|a[ytrl])s$/i,to:"$1"},{reg:/(ow)s$/i,to:"$1"},{reg:/(op)s$/i,to:"$1"},{reg:/([eirs])ts$/i,to:"$1t"},{reg:/(ll)s$/i,to:"$1"},{reg:/(el)s$/i,to:"$1"},{reg:/(ip)es$/i,to:"$1e"},{reg:/ss$/i,to:"ss"},{reg:/s$/i,to:""}],Gerund:[{reg:/pping$/i,to:"p"},{reg:/lling$/i,to:"ll"},{reg:/tting$/i,to:"t"},{reg:/ssing$/i,to:"ss"},{reg:/gging$/i,to:"g"},{reg:/([^aeiou])ying$/i,to:"$1y"},{reg:/([^ae]i.)ing$/i,to:"$1e"},{reg:/(ea.)ing$/i,to:"$1"},{reg:/(u[rtcb]|[bdtpkg]l|n[cg]|a[gdkvtc]|[ua]s|[dr]g|yz|o[rlsp]|cre)ing$/i,to:"$1e"},{reg:/(ch|sh)ing$/i,to:"$1"},{reg:/(..)ing$/i,to:"$1"}],PastTense:[{reg:/(ued)$/i,to:"ue"},{reg:/([aeiou]zz)ed$/i,to:"$1"},{reg:/(e|i)lled$/i,to:"$1ll"},{reg:/(sh|ch)ed$/i,to:"$1"},{reg:/(tl|gl)ed$/i,to:"$1e"},{reg:/(um?pt?)ed$/i,to:"$1"},{reg:/(ss)ed$/i,to:"$1"},{reg:/pped$/i,to:"p"},{reg:/tted$/i,to:"t"},{reg:/gged$/i,to:"g"},{reg:/(h|ion|n[dt]|ai.|[cs]t|pp|all|ss|tt|int|ail|ld|en|oo.|er|k|pp|w|ou.|rt|ght|rm)ed$/i,to:"$1"},{reg:/(.ut)ed$/i,to:"$1e"},{reg:/(us)ed$/i,to:"$1e"},{reg:/(..[^aeiouy])ed$/i,to:"$1e"},{reg:/ied$/i,to:"y"},{reg:/(.o)ed$/i,to:"$1o"},{reg:/(.i)ed$/i,to:"$1"},{reg:/(a[^aeiou])ed$/i,to:"$1"},{reg:/([rl])ew$/i,to:"$1ow"},{reg:/([pl])t$/i,to:"$1t"}]};N.exports=_},{}],128:[function($,N){"use strict";const _=$("./methods/toInfinitive");N.exports=(j)=>{let V=j.match("#Auxillary").first();if(V.found){let S=V.list[0].index();return j.parentTerms.insertAt(S+1,"not","Verb")}let E=j.match("(#Copula|will|has|had|do)").first();if(E.found){let S=E.list[0].index();return j.parentTerms.insertAt(S+1,"not","Verb")}let z=j.isPlural(),D=j.match("#PastTense").last();if(D.found){let S=D.list[0],W=S.index();return S.terms[0].text=_(S.terms[0]),z?j.parentTerms.insertAt(W,"do not","Verb"):j.parentTerms.insertAt(W,"did not","Verb")}let O=j.match("#PresentTense").first();if(O.found){let S=O.list[0],W=S.index();S.terms[0].text=_(S.terms[0]);let q=j.getNoun();return q.match("(i|we|they|you)").found?j.parentTerms.insertAt(W,"do not","Verb"):j.parentTerms.insertAt(W,"does not","Verb")}let M=j.match("#Gerund").last();if(M.found){let S=M.list[0].index();return j.parentTerms.insertAt(S,"not","Verb")}let F=j.match("#Verb").last();if(F.found){F=F.list[0];let S=F.index();return F.terms[0].text=_(F.terms[0]),z?j.parentTerms.insertAt(S,"does not","Verb"):j.parentTerms.insertAt(S,"did not","Verb")}return j}},{"./methods/toInfinitive":126}],129:[function($,N){"use strict";const _=$("../../paths").Terms,C=$("./methods/conjugate"),j=$("./methods/toAdjective"),V=$("./interpret"),E=$("./toNegative"),z=$("./methods/isPlural");N.exports=class extends _{constructor(O,M,F,S){super(O,M,F,S),this.parse()}parse(){this.negative=this.match("#Negative"),this.adverbs=this.match("#Adverb");let O=this.clone().not("(#Adverb|#Negative)");this.verb=O.match("#Verb").not("#Particle").last(),this.particle=O.match("#Particle").last(),this.verb.found&&(this.verb=this.verb.list[0].terms[0]),this.auxillary=O.match("#Auxillary+")}data(O){return{text:this.out("text"),normal:this.out("normal"),parts:{negative:this.negative.out("normal"),auxillary:this.auxillary.out("normal"),verb:this.verb.out("normal"),adverbs:this.adverbs.out("normal")},interpret:V(this,O),conjugations:this.conjugate()}}getNoun(){if(!this.refTerms)return null;let O="#Adjective? #Noun+ "+this.out("normal");return this.refTerms.match(O).match("#Noun+")}conjugation(){return V(this,!1).tense}conjugate(O){return C(this,O)}isPlural(){return z(this)}isNegative(){return 1===this.match("#Negative").list.length}isPerfect(){return this.auxillary.match("(have|had)").found}toNegative(){return this.isNegative()?this:E(this)}toPositive(){return this.match("#Negative").delete()}toPastTense(){let O=this.conjugate();return this.replaceWith(O.PastTense)}toPresentTense(){let O=this.conjugate();return this.replaceWith(O.PresentTense)}toFutureTense(){let O=this.conjugate();return this.replaceWith(O.FutureTense)}toInfinitive(){let O=this.conjugate();return this.terms[this.terms.length-1].text=O.Infinitive,this}asAdjective(){return j(this.verb.out("normal"))}}},{"../../paths":37,"./interpret":111,"./methods/conjugate":116,"./methods/isPlural":122,"./methods/toAdjective":125,"./toNegative":128}],130:[function($,N){"use strict";const _=$("./paths").fns,C=$("../data/index"),j=Object.keys(C.abbreviations),V=function(z){let D=z.split(/(\n+)/);return D=D.map(function(O){return O.split(/(\S.+?[.!?])(?=\s+|$)/g)}),_.flatten(D)};N.exports=function(z){let D=[];z=_.ensureString(z);let O=[];if(!z||"string"!=typeof z||!z.match(/\S/))return D;let M=V(z);for(let G,q=0;q<M.length;q++)if(G=M[q],G&&""!==G){if(!G.match(/\S/))if(O[O.length-1]){O[O.length-1]+=G;continue}else if(M[q+1]){M[q+1]=G+M[q+1];continue}O.push(G)}const F=new RegExp("\\b("+j.join("|")+")[.!?] ?$","i"),S=/[ |.][A-Z].?( *)?$/i,W=/\.\.+( +)?$/;for(let q=0;q<O.length;q++)O[q+1]&&(O[q].match(F)||O[q].match(S)||O[q].match(W))?O[q+1]=O[q]+(O[q+1]||""):O[q]&&0<O[q].length&&(D.push(O[q]),O[q]="");return 0===D.length?[z]:D}},{"../data/index":6,"./paths":37}],131:[function($,N){"use strict";const _=$("./fix"),C={wanna:["want","to"],gonna:["going","to"],im:["i","am"],alot:["a","lot"],dont:["do","not"],dun:["do","not"],ive:["i","have"],"won't":["will","not"],wont:["will","not"],"can't":["can","not"],cant:["can","not"],cannot:["can","not"],aint:["is","not"],"ain't":["is","not"],"shan't":["should","not"],imma:["I","will"],"where'd":["where","did"],whered:["where","did"],"when'd":["when","did"],whend:["when","did"],"how'd":["how","did"],howd:["how","did"],"what'd":["what","did"],whatd:["what","did"],"let's":["let","us"],dunno:["do","not","know"],brb:["be","right","back"],gtg:["got","to","go"],irl:["in","real","life"],tbh:["to","be","honest"],imo:["in","my","opinion"],til:["today","i","learned"],rn:["right","now"]};N.exports=(V)=>{let E=Object.keys(C);for(let z=0;z<E.length;z++)for(let D=0;D<V.terms.length;D++)if(V.terms[D].normal===E[z]){let O=C[E[z]];V=_(V,O,D);break}return V}},{"./fix":135}],132:[function($,N){"use strict";const _=$("./fix"),C=$("./split"),j=(E,z)=>{let D=E.terms[z],O=E.terms[z+1];return D.tag.Pronoun||D.tag.QuestionWord?!1:!O||!O.tag.VerbPhrase&&(!!O.tag.Noun||O.tag.Adjective&&E.terms[z+2]&&E.terms[z+2].tag.Noun||(O.tag.Adjective||O.tag.Adverb||O.tag.Verb)&&!1)};N.exports=(E)=>{for(let z=0;z<E.terms.length;z++)if(!E.terms[z].silent_term){let D=C(E.terms[z]);if(D&&"s"===D.end){if(j(E,z)){E.terms[z].tagAs("#Possessive","hard-contraction");continue}let O=[D.start,"is"];E=_(E,O,z),z+=1}}return E}},{"./fix":135,"./split":137}],133:[function($,N){"use strict";const _=$("./fix"),C=$("./split"),j={ll:"will",d:"would",ve:"have",re:"are",m:"am","n't":"not"};N.exports=(E)=>{for(let z=0;z<E.terms.length;z++)if(!E.terms[z].silent_term){let D=C(E.terms[z]);if(D&&j[D.end]){let O=[D.start,j[D.end]];E=_(E,O,z),z+=1}}return E}},{"./fix":135,"./split":137}],134:[function($,N){"use strict";const _=$("./fix"),C=$("../../term");N.exports=(V)=>{for(let z,E=0;E<V.terms.length;E++)if(z=V.terms[E],!z.silent_term){if(z.tag.Value&&0<E&&" - "===z.whitespace.before){let D=new C("");return D.silent_term="to",V.insertAt(E,D),V.terms[E-1].tagAs("NumberRange"),V.terms[E].tagAs("NumberRange"),V.terms[E].whitespace.before="",V.terms[E].whitespace.after="",V.terms[E+1].tagAs("NumberRange"),V}if(z.tag.NumberRange){let D=z.text.split(/(-)/);D[1]="to",V=_(V,D,E),V.terms[E].tagAs("NumberRange"),V.terms[E+1].tagAs("NumberRange"),V.terms[E+2].tagAs("NumberRange"),E+=2}}return V}},{"../../term":177,"./fix":135}],135:[function($,N){"use strict";const _=$("../../term"),C={not:"Negative",will:"Verb",would:"Modal",have:"Verb",are:"Copula",is:"Copula",am:"Verb"},j=(E)=>{C[E.silent_term]&&E.tagAs(C[E.silent_term])};N.exports=(E,z,D)=>{let O=E.terms[D];O.silent_term=z[0],O.tagAs("Contraction","tagger-contraction");let M=new _("");if(M.silent_term=z[1],M.tagAs("Contraction","tagger-contraction"),E.insertAt(D+1,M),M.whitespace.before="",M.whitespace.after="",j(M),z[2]){let F=new _("");F.silent_term=z[2],E.insertAt(D+2,F),F.tagAs("Contraction","tagger-contraction"),j(F)}return E}},{"../../term":177}],136:[function($,N){"use strict";const _=$("./01-irregulars"),C=$("./02-hardOne"),j=$("./03-easyOnes"),V=$("./04-numberRange");N.exports=function(z){return z=_(z),z=C(z),z=j(z),z=V(z),z}},{"./01-irregulars":131,"./02-hardOne":132,"./03-easyOnes":133,"./04-numberRange":134}],137:[function($,N){"use strict";const _={re:!0,ve:!0,ll:!0,t:!0,s:!0,d:!0,m:!0};N.exports=(j)=>{let V=j.text.match(/^([a-z]+)'([a-z][a-z]?)$/i);return V&&V[1]&&_[V[2]]?("t"===V[2]&&V[1].match(/[a-z]n$/)&&(V[1]=V[1].replace(/n$/,""),V[2]="n't"),j.tag.TitleCase&&(V[1]=V[1].replace(/^[a-z]/,(E)=>E.toUpperCase())),{start:V[1],end:V[2]}):(V=j.text.match(/[a-z]s'$/i),V?{start:j.normal.replace(/s'?$/,""),end:""}:null)}},{}],138:[function($,N){"use strict";const _=$("../paths").log,j=$("./verb_corrections");N.exports=function(E){return _.here("correction"),E.match("so #Adjective").match("so").tag("Adverb","so-adv"),E.match("so #Noun").match("so").tag("Conjunction","so-conj"),E.match("do so").match("so").tag("Noun","so-noun"),E.match("still #Adjective").match("still").tag("Adverb","still-advb"),E.match("more #Noun").tag("Noun","more-noun"),E.match("still #Verb").term(0).tag("Adverb","still-verb"),E.match("second #Noun").term(0).unTag("Unit").tag("Ordinal","second-noun"),E.match("(foot|feet)").tag("Noun","foot-noun"),E.match("#Value (foot|feet)").match("(foot|feet)").tag("Unit","foot-unit"),E.match("how (#Copula|#Modal|#PastTense)").term(0).tag("QuestionWord","how-question"),E.match("will #Adjective").term(1).tag("Verb","will-adj"),E.match("u #Verb").term(0).tag("Pronoun","u-pronoun-1"),E.match("#Conjunction u").term(1).tag("Pronoun","u-pronoun-2"),E.match("is no #Verb").term(2).tag("Noun","is-no-verb"),E.match("the #Verb #Preposition .").match("#Verb").tag("Noun","correction-determiner1"),E.match("the #Verb").match("#Verb").tag("Noun","correction-determiner2"),E.match("the #Adjective #Verb").match("#Verb").tag("Noun","correction-determiner3"),E.match("the #Adverb #Adjective #Verb").match("#Verb").tag("Noun","correction-determiner4"),E.match("#Organization of the? #TitleCase").tag("Organization","org-of-place"),E.match("#Organization #Country").tag("Organization","org-country"),E.match("(world|global|international|national|#Demonym) #Organization").tag("Organization","global-org"),E.match("#TitleCase (ltd|co|inc|dept|assn|bros)").tag("Organization","org-abbrv"),E.match("#Determiner #Verb of").term(1).tag("Noun","the-verb-of"),E.match("#Noun #Adverb #Noun").term(2).tag("Verb","correction"),E.match("#Copula #Adjective to #Verb").match("#Adjective to").tag("Verb","correction"),E.match("#Verb than").term(0).tag("Noun","correction"),E.match("#Possessive #Verb").term(1).tag("Noun","correction-possessive"),E.match("just like").term(1).tag("Preposition","like-preposition"),E.match("#Noun like #Noun").term(1).tag("Preposition","noun-like"),E.match("#Verb like").term(1).tag("Adverb","verb-like"),E.match("#Adverb like").term(1).tag("Adverb","adverb-like"),E.match("#Determiner #Noun of #Verb").match("#Verb").tag("Noun","noun-of-noun"),E.match("#Adjective #PresentTense").term(1).tag("Noun","adj-presentTense"),E.match("#Possessive #FirstName").term(1).unTag("Person","possessive-name"),E.match("(a|an) (#Duration|#Value)").ifNo("#Plural").term(0).tag("Value","a-is-one"),E.match("half a? #Value").tag("Value","half-a-value"),E.match("#Value and a (half|quarter)").tag("Value","value-and-a-half"),E.match("#Value").match("!#Ordinal").tag("#Cardinal","not-ordinal"),E.match("#Value+ #Currency").tag("Money","value-currency"),E.match("#Money and #Money #Currency?").tag("Money","money-and-money"),E.match("holy (shit|fuck|hell)").tag("Expression","swears-expression"),E.match("#Determiner (shit|damn|hell)").term(1).tag("Noun","swears-noun"),E.match("(shit|damn|fuck) (#Determiner|#Possessive|them)").term(0).tag("Verb","swears-verb"),E.match("#Copula fucked up?").not("#Copula").tag("Adjective","swears-adjective"),E=j(E),E}},{"../paths":145,"./verb_corrections":139}],139:[function($,N){"use strict";N.exports=function(C){let j="(#Adverb|not)+?";return C.match(`(has|had) ${j} #PastTense`).not("#Verb$").tag("Auxillary","had-walked"),C.match(`#Copula ${j} #Gerund`).not("#Verb$").tag("Auxillary","copula-walking"),C.match(`(be|been) ${j} #Gerund`).not("#Verb$").tag("Auxillary","be-walking"),C.match(`(#Modal|did) ${j} #Verb`).not("#Verb$").tag("Auxillary","modal-verb"),C.match(`#Modal ${j} have ${j} had ${j} #Verb`).not("#Verb$").tag("Auxillary","would-have"),C.match(`(#Modal) ${j} be ${j} #Verb`).not("#Verb$").tag("Auxillary","would-be"),C.match(`(#Modal|had|has) ${j} been ${j} #Verb`).not("#Verb$").tag("Auxillary","would-be"),C}},{}],140:[function($,N){"use strict";const _={interpret:$("./contraction")},C={lexicon_lump:$("./lumper/lexicon_lump"),lump_two:$("./lumper/lump_two"),lump_three:$("./lumper/lump_three")},j={punctuation_step:$("./steps/01-punctuation_step"),lexicon_step:$("./steps/02-lexicon_step"),capital_step:$("./steps/03-capital_step"),web_step:$("./steps/04-web_step"),suffix_step:$("./steps/05-suffix_step"),neighbour_step:$("./steps/06-neighbour_step"),noun_fallback:$("./steps/07-noun_fallback"),date_step:$("./steps/08-date_step"),auxillary_step:$("./steps/09-auxillary_step"),negation_step:$("./steps/10-negation_step"),phrasal_step:$("./steps/12-phrasal_step"),comma_step:$("./steps/13-comma_step"),possessive_step:$("./steps/14-possessive_step"),value_step:$("./steps/15-value_step"),acronym_step:$("./steps/16-acronym_step"),emoji_step:$("./steps/17-emoji_step"),person_step:$("./steps/18-person_step"),quotation_step:$("./steps/19-quotation_step"),organization_step:$("./steps/20-organization_step"),plural_step:$("./steps/21-plural_step")},V=$("./corrections"),E=$("./phrase");N.exports=function(D){D=j.punctuation_step(D),D=j.emoji_step(D),D=C.lexicon_lump(D),D=j.lexicon_step(D),D=j.web_step(D),D=j.suffix_step(D),D=j.neighbour_step(D),D=j.capital_step(D),D=j.noun_fallback(D),D=_.interpret(D),D=j.date_step(D),D=j.auxillary_step(D),D=j.negation_step(D),D=j.phrasal_step(D),D=j.comma_step(D),D=j.possessive_step(D),D=j.value_step(D),D=j.acronym_step(D),D=j.person_step(D),D=j.quotation_step(D),D=j.organization_step(D),D=j.plural_step(D);for(let O=0;3>O;O++)D=C.lump_three(D),D=C.lump_two(D);return D=V(D),D=E(D),D}},{"./contraction":136,"./corrections":138,"./lumper/lexicon_lump":142,"./lumper/lump_three":143,"./lumper/lump_two":144,"./phrase":147,"./steps/01-punctuation_step":148,"./steps/02-lexicon_step":149,"./steps/03-capital_step":150,"./steps/04-web_step":151,"./steps/05-suffix_step":152,"./steps/06-neighbour_step":153,"./steps/07-noun_fallback":154,"./steps/08-date_step":155,"./steps/09-auxillary_step":156,"./steps/10-negation_step":157,"./steps/12-phrasal_step":158,"./steps/13-comma_step":159,"./steps/14-possessive_step":160,"./steps/15-value_step":161,"./steps/16-acronym_step":162,"./steps/17-emoji_step":163,"./steps/18-person_step":164,"./steps/19-quotation_step":165,"./steps/20-organization_step":166,"./steps/21-plural_step":167}],141:[function($,N){"use strict";const _=$("../paths"),C=$("../../term"),j=_.log,E=(D,O)=>{let M=D.whitespace.before+D.text+D.whitespace.after;return M+=O.whitespace.before+O.text+O.whitespace.after,M};N.exports=function(D,O){let M=D.terms[O],F=D.terms[O+1];if(F){j.tell("--combining: \""+M.normal+"\"+\""+F.normal+"\"","tagger/combine");let S=E(M,F);return D.terms[O]=new C(S,M.context),D.terms[O].normal=M.normal+" "+F.normal,D.terms[O+1]=null,void(D.terms=D.terms.filter((W)=>null!==W))}}},{"../../term":177,"../paths":145}],142:[function($,N){"use strict";const _=$("./combine"),C=$("../paths"),j=C.log,V=C.lexicon,E=C.fns,D=$("../../tries"),O=(S,W,q)=>{for(let G=0;G<q;G++)_(S,W)},M=(S,W,q)=>{let G="",I="",L="";for(let R=W;R<q.terms.length;R++){if(R===W?(G=q.terms[R].text,I=q.terms[R].normal,L=q.terms[R].root):(G+=" "+q.terms[R].text,I+=" "+q.terms[R].normal,L+=" "+q.terms[R].root),G===S||I===S||L===S){let B=R-W;return O(q,W,B),!0}if(I.length>S.length)return!1}return!1};N.exports=function(S){j.here("tagger/multiple");let W=S.lexicon||{};for(let q=0;q<S.terms.length-1;q++){let G=S.terms[q].normal+" "+S.terms[q+1].normal,I=S.terms[q].text+" "+S.terms[q+1].text,L=V[G]||V[I];L||(L=D.lookupMulti(G)),L&&(_(S,q),S.terms[q].tagAs(L,"multiples-lexicon"))}return Object.keys(W).forEach((q)=>{for(let G=0;G<S.terms.length;G++)(E.startsWith(q,S.terms[G].normal)||E.startsWith(q,S.terms[G].text))&&M(q,G,S)&&S.terms[G].tagAs(W[q],"user-lexicon-lump")}),S}},{"../../tries":215,"../paths":145,"./combine":141}],143:[function($,N){"use strict";const _=$("../paths").log,j=$("./combine"),V=[{condition:(z,D,O)=>z.tag.Noun&&("&"===D.text||"n"===D.normal)&&O.tag.Noun,result:"Organization",reason:"Noun-&-Noun"},{condition:(z,D,O)=>z.tag.Value&&D.tag.Value&&O.tag.PhoneNumber&&3===D.normal.length&&3>z.normal.length,result:"PhoneNumber",reason:"1-800-PhoneNumber"}];N.exports=function(z){_.here("lumper/lump_three");for(let D=0;D<V.length;D++)for(let O=0;O<z.terms.length-2;O++){let M=z.terms[O],F=z.terms[O+1],S=z.terms[O+2];V[D].condition(M,F,S)&&(j(z,O),j(z,O),z.terms[O].tagAs(V[D].result,"lump-three ("+V[D].reason+")"))}return z}},{"../paths":145,"./combine":141}],144:[function($,N){"use strict";const _=$("../paths").log,j=$("./combine"),V={standard:!0,daylight:!0,summer:!0,eastern:!0,pacific:!0,central:!0,mountain:!0},E=[{condition:(D,O)=>D.tag.Holiday&&("day"===O.normal||"eve"===O.normal),result:"Holiday",reason:"holiday-day"},{condition:(D,O)=>D.tag.Noun&&O.tag.Actor,result:"Actor",reason:"thing-doer"},{condition:(D,O)=>V[D.normal]&&("standard time"===O.normal||"time"===O.normal),result:"Time",reason:"timezone"},{condition:(D,O)=>D.tag.Demonym&&O.tag.Currency,result:"Currency",reason:"demonym-currency"},{condition:(D,O)=>D.tag.NumericValue&&O.tag.PhoneNumber&&3>=D.normal.length,result:"PhoneNumber",reason:"(800) PhoneNumber"}];N.exports=function(D){_.here("lumper/lump_two");for(let O=0;O<E.length;O++)for(let M=0;M<D.terms.length-1;M++){let F=D.terms[M],S=D.terms[M+1];E[O].condition(F,S)&&(j(D,M),D.terms[M].tagAs(E[O].result,"lump-two ("+E[O].reason+")"))}return D}},{"../paths":145,"./combine":141}],145:[function($,N){N.exports={fns:$("../fns"),lexicon:$("../data/lexicon"),tries:$("../tries"),log:$("../log"),data:$("../data"),Terms:$("../terms"),tags:$("../tags")}},{"../data":6,"../data/lexicon":7,"../fns":21,"../log":23,"../tags":175,"../terms":195,"../tries":215}],146:[function($,N){"use strict";N.exports=function(C){let j=C.match("#Condition {1,7} #ClauseEnd");return j.found&&j.match("#Comma$")&&j.tag("ConditionPhrase"),j=C.match("#Condition {1,13} #ClauseEnd #Pronoun"),j.found&&j.match("#Comma$")&&j.not("#Pronoun$").tag("ConditionPhrase","end-pronoun"),j=C.match("#Condition {1,7} then"),j.found&&j.not("then$").tag("ConditionPhrase","cond-then"),j=C.match("#Comma #Condition {1,7} .$"),j.found&&j.not("^#Comma").tag("ConditionPhrase","comma-7-end"),j=C.match("#Condition {1,4}$"),j.found&&j.tag("ConditionPhrase","cond-4-end"),C}},{}],147:[function($,N){"use strict";const _=$("./00-conditionPass");N.exports=function(j){return j=_(j),j}},{"./00-conditionPass":146}],148:[function($,N){"use strict";const _=$("../paths").log,C=$("./rules/punct_rules"),V=function(D){if(!D.canBe("RomanNumeral"))return!1;const O=D.text;return 1<O.length&&O.match(/^[IVXCM]+$/)},E={a:!0,i:!0,u:!0,r:!0,c:!0,k:!0};N.exports=function(D){return _.here("tagger/punctuation"),D.terms.forEach((O)=>{let M=O.text;M.match(/^[A-Z][a-z']/)&&O.tagAs("TitleCase","punct-rule"),M=M.replace(/[,\.\?]$/,"");for(let S,F=0;F<C.length;F++)if(S=C[F],M.match(S.reg))return void(O.canBe(S.tag)&&O.tagAs(S.tag,"punctuation-rule- \""+S.str+"\""));1!==M.length||E[M.toLowerCase()]||O.tagAs("Acronym","one-letter-acronym"),V(O)&&O.tagAs("RomanNumeral","is-roman-numeral")}),D}},{"../paths":145,"./rules/punct_rules":171}],149:[function($,N){"use strict";const _=$("../paths"),C=$("../contraction/split"),j=$("../../tries"),V=_.lexicon,E=_.log,D=(M,F)=>{let S=F.lexicon||{};if(S[M])return S[M];if(V[M])return V[M];let W=j.lookup(M);return W?W:null};N.exports=function(M){E.here("tagger/lexicon");let F;for(let W,S=0;S<M.terms.length;S++){if(W=M.terms[S],F=D(W.normal,M),F){W.tagAs(F,"lexicon-match");continue}if(F=D(W.text,M),F){W.tagAs(F,"lexicon-match-text");continue}let q=C(W);if(q&&q.start&&(F=D(q.start.toLowerCase(),M),F)){W.tagAs(F,"contraction-lexicon");continue}if(F=D(W.silent_term,M),W.silent_term&&F){W.tagAs(F,"silent_term-lexicon");continue}let G=W.normal.split(/[ -]/);if(1<G.length&&(F=D(G[G.length-1],M),F)){W.tagAs(F,"multiword-lexicon");continue}}return M}},{"../../tries":215,"../contraction/split":137,"../paths":145}],150:[function($,N){"use strict";const _=$("../paths").log;N.exports=function(V){_.here("tagger/capital");for(let D,z=1;z<V.terms.length;z++)D=V.terms[z],D.tag.TitleCase&&D.isWord()&&(D.tagAs("Noun","capital-step"),D.tagAs("TitleCase","capital-step"));let E=V.terms[0];return E&&E.tag.TitleCase&&(E.tag.Person||E.tag.Organization||E.tag.Place)&&E.tagAs("TitleCase","first-term-capital"),V}},{"../paths":145}],151:[function($,N){"use strict";const _=$("../paths").log,j=function(O){return!!O.match(/^\w+@\w+\.[a-z]{2,3}$/)},V=function(O){return!!O.match(/^#[a-z0-9_]{2,}$/)},E=function(O){return!!O.match(/^@\w{2,}$/)},z=function(O){return!!O.match(/^(https?:\/\/|www\.)\w+\.[a-z]{2,3}/)||!!O.match(/^[\w\.\/]+\.(com|net|gov|org|ly|edu|info|biz|ru|jp|de|in|uk|br)/)};N.exports=function(O){_.here("tagger/web_step");for(let M=0;M<O.length;M++){let F=O.get(M),S=F.text.trim().toLowerCase();j(S)&&F.tagAs("Email","web_pass"),V(S)&&F.tagAs("HashTag","web_pass"),E(S)&&F.tagAs("AtMention","web_pass"),z(S)&&F.tagAs("Url","web_pass")}return O}},{"../paths":145}],152:[function($,N){"use strict";const _=$("../paths").log,C=$("./rules/word_rules");N.exports=function(E){return _.here("tagger/suffix"),E.terms.forEach((z)=>{for(let O,D=0;D<C.length;D++)if(O=C[D],z.normal.match(O.reg))return void(z.canBe(O.tag)&&z.tagAs(O.tag,"word-rule- \""+O.str+"\""))}),E}},{"../paths":145,"./rules/word_rules":172}],153:[function($,N){"use strict";const _=$("./rules/neighbours"),C=_.afterThisWord,j=_.beforeThisWord,V=_.beforeThisPos,E=_.afterThisPos,z=$("../paths").log;N.exports=function(M){return z.here("tagger/neighbours"),M.terms.forEach((F,S)=>{let W=Object.keys(F.tag);if(0===W.length){let q=M.terms[S-1],G=M.terms[S+1];if(q&&C[q.normal])return void F.tagAs(C[q.normal],"neighbour-after-\""+q.normal+"\"");if(G&&j[G.normal])return void F.tagAs(j[G.normal],"neighbour-before-\""+G.normal+"\"");let I=[];if(q){I=Object.keys(q.tag);for(let L=0;L<I.length;L++)if(E[I[L]])return void F.tagAs(E[I[L]],"neighbour-after-["+I[L]+"]")}if(G){I=Object.keys(G.tag);for(let L=0;L<I.length;L++)if(V[I[L]])return void F.tagAs(V[I[L]],"neighbour-before-["+I[L]+"]")}}}),M}},{"../paths":145,"./rules/neighbours":170}],154:[function($,N){"use strict";const _=$("../paths").log,j={TitleCase:!0,UpperCase:!0,CamelCase:!0},V=function(z){if(z.tag.Noun||z.tag.Verb||z.tag.Adjective)return!1;let D=Object.keys(z.tag);return!(0!==D.length)||!(0!==D.filter((O)=>!j[O]).length)};N.exports=function(z){_.here("tagger/noun_fallback");for(let O,D=0;D<z.terms.length;D++)if((O=z.terms[D],!(O.tag.Noun||O.tag.Verb))&&V(O)){if(!1===O.isWord())continue;O.tagAs("Noun","noun-fallback")}return z}},{"../paths":145}],155:[function($,N){"use strict";const _=$("../paths").log,j="(may|march|jan|april|sep)",V="(in|by|before|for|during|on|until|after|of|within)",E="(last|next|this|previous|current|upcoming|coming)",z="(start|end|middle|starting|ending|midpoint|beginning)",D=(M)=>{return M&&1e3<M&&3e3>M};N.exports=function(M){_.here("tagger/datePass"),M.match(`#Month #DateRange+`).tag("Date","correction-numberRange"),M.match(`${j} (#Determiner|#Value|#Date)`).term(0).tag("Month","correction-may"),M.match(`#Date ${j}`).term(1).tag("Month","correction-may"),M.match(`${V} ${j}`).term(1).tag("Month","correction-may"),M.match(`(next|this|last) ${j}`).term(1).tag("Month","correction-may"),M.match("#Value #Abbreviation").tag("Value","value-abbr"),M.match("a #Value").tag("Value","a-value"),M.match("(minus|negative) #Value").tag("Value","minus-value"),M.match("#Value grand").tag("Value","value-grand"),M.match("(half|quarter) #Ordinal").tag("Value","half-ordinal"),M.match("(hundred|thousand|million|billion|trillion) and #Value").tag("Value","magnitude-and-value"),M.match("#Value point #Value").tag("Value","value-point-value"),M.match("#Cardinal #Time").tag("Time","value-time"),M.match("(by|before|after|at|@|about) #Time").tag("Time","preposition-time"),M.match("(#Value|#Time) (am|pm)").tag("Time","value-ampm"),M.match("all day").tag("Time","all-day"),M.match(`${V}? ${E} (spring|summer|winter|fall|autumn)`).tag("Date","thisNext-season"),M.match(`the? ${z} of (spring|summer|winter|fall|autumn)`).tag("Date","section-season"),M.match("#Date the? #Ordinal").tag("Date","correction-date"),M.match("#Value of? #Month").tag("Date","value-of-month"),M.match("#Cardinal #Month").tag("Date","cardinal-month"),M.match("#Month #Value to #Value").tag("Date","value-to-value"),M.match(`${E} #Date`).tag("Date","thisNext-date"),M.match(`${V}? #Value #Duration`).tag("Date","value-duration"),M.match("due? (by|before|after|until) #Date").tag("Date","by-date"),M.match("#Date (by|before|after|at|@|about) #Cardinal").not("^#Date").tag("Time","date-before-Cardinal"),M.match("#Time (eastern|pacific|central|mountain)").term(1).tag("Time","timezone"),M.match("#Time (est|pst|gmt)").term(1).tag("Time","timezone abbr"),M.match("#Date (am|pm)").term(1).unTag("Verb").unTag("Copula").tag("Time","date-am"),M.match("at night").tag("Time","at-night"),M.match("in the (night|evening|morning|afternoon|day|daytime)").tag("Time","in-the-night"),M.match("(early|late) (at|in)? the? (night|evening|morning|afternoon|day|daytime)").tag("Time","early-evening"),M.match("#Month #Value #Cardinal").tag("Date","month-value-cardinal"),M.match("(last|next|this|previous|current|upcoming|coming|the) #Date").tag("Date","next-feb"),M.match("#Date #Value").tag("Date","date-value"),M.match("#Value #Date").tag("Date","value-date"),M.match("#Date #Preposition #Date").tag("Date","date-prep-date"),M.match("#Value #Duration #Conjunction").tag("Date","val-duration-conjunction"),M.match(`the? ${z} of #Date`).tag("Date","section-of-date");let F=M.match(`#Date #Value #Cardinal`).lastTerm().values(),S=F.numbers()[0];return D(S)&&F.tag("Year","date-value-year"),F=M.match(`#Date+ #Cardinal`).lastTerm().values(),S=F.numbers()[0],D(S)&&F.tag("Year","date-year"),F=M.match(`#Month #Value #Cardinal`).lastTerm().values(),S=F.numbers()[0],D(S)&&F.tag("Year","date-year2"),F=M.match(`#Month #Value to #Value #Cardinal`).lastTerm().values(),S=F.numbers()[0],D(S)&&F.tag("Year","date-year3"),F=M.match(`(in|of|by|during|before|starting|ending|for|year) #Cardinal`).lastTerm().values(),S=F.numbers()[0],D(S)&&F.tag("Year","preposition-year"),M.match("#Duration in #Date").tag("Date","duration-in-date"),M}},{"../paths":145}],156:[function($,N){"use strict";const _=$("../paths").log,j={"do":!0,"don't":!0,does:!0,"doesn't":!0,will:!0,wont:!0,"won't":!0,have:!0,"haven't":!0,had:!0,"hadn't":!0,not:!0};N.exports=function(E){_.here("tagger/auxillary");for(let D,z=0;z<E.terms.length;z++)if(D=E.terms[z],j[D.normal]||j[D.silent_term]){let O=E.terms[z+1];if(O&&(O.tag.Verb||O.tag.Adverb||O.tag.Negative)){D.tagAs("Auxillary","corrections-auxillary");continue}}return E}},{"../paths":145}],157:[function($,N){"use strict";const _=$("../paths").log;N.exports=function(V){_.here("tagger/negation");for(let z,E=0;E<V.length;E++)if(z=V.get(E),"not"===z.normal||"not"===z.silent_term)for(let D=E+1;D<V.length;D++){if(V.get(D).tag.Verb){z.tagAs("VerbPhrase","negate-verb");break}if(V.get(D).tag.Adjective){z.tagAs("AdjectivePhrase","negate-adj");break}}return V}},{"../paths":145}],158:[function($,N){"use strict";const _=$("../paths").log,C=$("../paths").tries.utils.phrasals,j=$("../../result/subset/verbs/methods/toInfinitive/index.js"),E={aback:!0,along:!0,apart:!0,at:!0,away:!0,back:!0,by:!0,"do":!0,down:!0,forth:!0,forward:!0,"in":!0,into:!0,it:!0,off:!0,on:!0,out:!0,over:!0,round:!0,through:!0,together:!0,under:!0,up:!0,upon:!0,way:!0};N.exports=function(D){_.here("tagger/phrasal");for(let M,O=1;O<D.length;O++)if(M=D.get(O),E[M.normal]){let F=D.get(O-1);if(F.tag.Verb){let S=j(F);C.has(S+" "+M.normal)&&(M.tagAs("Particle","phrasalVerb-particle"),M.tagAs("PhrasalVerb","phrasalVerb-particle"),F.tagAs("PhrasalVerb","phrasalVerb-particle"))}}return D}},{"../../result/subset/verbs/methods/toInfinitive/index.js":126,"../paths":145}],159:[function($,N){"use strict";const _=(z,D)=>{let O=z.terms[D],M=z.terms[D+1];return M&&O.tag.Place&&!O.tag.Country&&M.tag.Country},C=(z)=>{return z.tag.Adjective?"Adjective":z.tag.Noun?"Noun":z.tag.Verb?"Verb":null},j=(z,D,O)=>{for(let M=D;M<=O;M++)z.terms[M].tag.List=!0},V=(z,D)=>{let O=D,M=C(z.terms[D]),F=0,S=0,W=!1;for(++D;D<z.terms.length;D++){let q=z.terms[D];if(0<S&&q.tag.Conjunction){W=!0;continue}if(q.tag[M]){if(q.tag.Comma){S+=1,F=0;continue}if(0<S&&W)return j(z,O,D),!0}if(F+=1,5<F)return!1}return!1};N.exports=function(z){for(let D=0;D<z.terms.length;D++){let O=z.terms[D],M=O.endPunctuation();if(","===M){O.tagAs("Comma","comma-step");continue}if(";"===M||":"===M){O.tagAs("ClauseEnd","clause-punt");continue}if(O.whitespace.after.match(/^\.\./)){O.tagAs("ClauseEnd","clause-elipses");continue}if(z.terms[D+1]&&z.terms[D+1].whitespace.before.match(/ - /)){O.tagAs("ClauseEnd","hypen-clause");continue}}for(let O,D=0;D<z.terms.length;D++)if(O=z.terms[D],O.tag.Comma){if(O.tag.List)continue;if(_(z,D))continue;if(V(z,D))continue;O.tag.ClauseEnd=!0}return z}},{}],160:[function($,N){"use strict";const _={"it's":!0,"that's":!0},C=function(V,E){let z=V.get(E);if(_[z.normal])return!1;if(z.normal.match(/[a-z]s'$/))return!0;if(!z.normal.match(/[a-z]'s$/))return!1;if(z.tag.Pronoun)return!1;let D=V.get(E+1);return!D||!!D.tag.Noun||D.tag.Adjective&&V.get(E+2)&&V.get(E+2).tag.Noun||(D.tag.Adjective||D.tag.Verb||D.tag.Adverb)&&!1};N.exports=function(V){for(let E=0;E<V.length;E++)if(C(V,E)){let z=V.get(E);z.tag.Noun||z.tagAs("Noun","possessive_pass"),z.tagAs("Possessive","possessive_pass")}return V}},{}],161:[function($,N){"use strict";"use strict";const _=$("../paths").log;N.exports=function(V){return _.here("tagger/value"),V.terms.forEach((E)=>{E.tag.Value&&(!E.tag.Ordinal&&!E.tag.Cardinal&&(E.normal.match(/^[0-9]([0-9]+,)*?(\.[0-9])$/)?E.tagAs("Cardinal","ordinal-regex"):E.tagAs("Cardinal","cardinal-regex")),!E.tag.TextValue&&!E.tag.NumericValue&&(E.normal.match(/^[a-z]/)?E.tagAs("TextValue","TextValue-regex"):E.tagAs("NumericValue","NumericValue-regex")))}),V}},{"../paths":145}],162:[function($,N){"use strict";"use strict";const _=$("../paths").log;N.exports=function(V){return _.here("tagger/acronym_step"),V.terms.forEach((E)=>{E.isAcronym()&&E.tagAs("Acronym","acronym-step")}),V}},{"../paths":145}],163:[function($,N){"use strict";const _=$("../paths").fns,C=$("./rules/emoji_regex"),j=$("./rules/emoticon_list"),V=(D)=>{return!!_.startsWith(D.text,":")&&!!D.text.match(/:.?$/)&&!D.text.match(" ")&&!(35<D.text.length)},E=(D)=>{let O=D.text.replace(/^[:;]/,":");return O=O.replace(/[:;]$/,":"),j[O]};N.exports=(D)=>{for(let M,O=0;O<D.terms.length;O++)M=D.terms[O],V(M)&&M.tagAs("Emoji","comma-emoji"),M.text.match(C)&&M.tagAs("Emoji","unicode-emoji"),E(M)&&M.tagAs("Emoji","emoticon-emoji");return D}},{"../paths":145,"./rules/emoji_regex":168,"./rules/emoticon_list":169}],164:[function($,N){"use strict";const _=$("../paths").log;let j=$("../paths").data.titles;j=j.reduce((E,z)=>{return E[z]=!0,E},{});N.exports=function(E){_.here("tagger/person_step");let z="person-step";E.match("#Noun #LastName").firstTerm().canBe("#FirstName").tag("#FirstName","noun-lastname");let D=E.match("#FirstName #Noun").ifNo("^#Possessive").ifNo("#ClauseEnd .");D.lastTerm().canBe("#LastName").tag("#LastName","firstname-noun"),E.match("#Acronym #TitleCase").canBe("#Person").tag("#Person","acronym-titlecase"),E.match("#Noun van der? #Noun").canBe("#Person").tag("#Person","von der noun"),E.match("#FirstName de #Noun").canBe("#Person").tag("#Person","firstname-de-noun"),E.match("(king|queen|prince|saint|lady) of? #Noun").canBe("#Person").tag("#Person","king-of-noun"),E.match("#FirstName (bin|al) #Noun").canBe("#Person").tag("#Person","firstname-al-noun");let O=["will","may","april","june","said","rob","wade","ray","rusty","drew","miles","jack","chuck","randy","jan","pat","cliff","bill"];O="("+O.join("|")+")",E.match(O+" #LastName").firstTerm().tag("#FirstName",z),O=["green","white","brown","hall","young","king","hill","cook","gray","price"],O="("+O.join("|")+")",E.match("#FirstName "+O).tag("#Person",z),E.match("#FirstName #Acronym #TitleCase").tag("Person","firstname-acronym-titlecase"),E.match("#FirstName #FirstName #TitleCase").tag("Person","firstname-firstname-titlecase"),E.match("#Honorific #FirstName? #TitleCase").tag("Person","Honorific-TitleCase"),E.match("#Honorific #Acronym").tag("Person","Honorific-TitleCase"),E.match("#FirstName #TitleCase").match("#FirstName #Noun").tag("Person","firstname-titlecase"),E.match("#TitleCase (van|al|bin) #TitleCase").tag("Person","correction-titlecase-van-titlecase"),E.match("#TitleCase (de|du) la? #TitleCase").tag("Person","correction-titlecase-van-titlecase"),E.match("#FirstName the #Adjective").tag("Person","correction-determiner5"),E.match("#Person #TitleCase").match("#TitleCase #Noun").tag("Person","correction-person-titlecase"),E.match("#FirstName #Acronym #Noun").ifNo("#Date").tag("#Person",z).lastTerm().tag("#LastName",z),E.match("#TitleCase #Acronym? #LastName").ifNo("#Date").tag("#Person",z).lastTerm().tag("#LastName",z),E.match("#FirstName (#Singular|#Possessive)").ifNo("#Date").tag("#Person",z).lastTerm().tag("#LastName",z),E.match("(lady|queen|sister) #TitleCase").ifNo("#Date").tag("#FemaleName",z),E.match("(king|pope|father) #TitleCase").ifNo("#Date").tag("#MaleName","correction-poe"),E.match("#Person #Person the? #RomanNumeral").tag("Person","correction-roman-numeral");for(let F,M=0;M<E.terms.length-1;M++)F=E.terms[M],j[F.normal]&&E.terms[M+1]&&E.terms[M+1].tag.Person&&F.tagAs("Person","title-person");return E.match("#Person+").match("^#Honorific$").unTag("Person","single-honorific"),E}},{"../paths":145}],165:[function($,N){"use strict";const _=$("../paths").log,j=function(E,z,D){E.terms.slice(z,D+1).forEach((O)=>{O.tagAs("Quotation","quotation_step")})};N.exports=(E)=>{_.here("tagger/person_step");for(let D,z=0;z<E.terms.length;z++)if(D=E.terms[z],D.text.match(/^["'\u201B\u201C\u2033\u201F\u2018]/))for(let O=0;O<E.terms.length&&E.terms[z+O]&&!(8<O);O++)if(E.terms[z+O].text.match(/.["'\u201D\u2036\u2019]([;:,.])?$/)){j(E,z,O+z),z+=O;break}return E}},{"../paths":145}],166:[function($,N){"use strict";const _=$("../paths").log;let j=$("../paths").tries.utils.orgWords;const V=function(z){return!!z.tag.Noun&&(z.tag.Pronoun||z.tag.Comma||z.tag.Possessive?!1:z.tag.TitleCase||z.tag.Organization||z.tag.Acronym)};N.exports=(z)=>{_.here("tagger/organization_step");for(let O,D=0;D<z.terms.length;D++)if(O=z.terms[D],j.has(O.normal)){let M=z.terms[D-1];if(M&&V(M)){M.tagAs("Organization","org-word-1"),O.tagAs("Organization","org-word-2");continue}let F=z.terms[D+1];if(F&&"of"===F.normal&&z.terms[D+2]&&V(z.terms[D+2])){O.tagAs("Organization","org-word-1"),F.tagAs("Organization","org-word-2"),z.terms[D+2].tagAs("Organization","org-word-3");continue}}return z}},{"../paths":145}],167:[function($,N){"use strict";const _=$("../paths").log,C=$("../../result/subset/nouns/isPlural");N.exports=function(E){_.here("tagger/plural");for(let D,z=0;z<E.terms.length;z++)if(D=E.terms[z],D.tag.Noun){if(D.tag.Singular||D.tag.Plural)continue;let O=C(D);O?D.tagAs("Plural","pluralStep"):!1===O&&D.tagAs("Singular","pluralStep")}return E}},{"../../result/subset/nouns/isPlural":70,"../paths":145}],168:[function($,N){N.exports=/(?:0\u20E3\n1\u20E3|2\u20E3|3\u20E3|4\u20E3|5\u20E3|6\u20E3|7\u20E3|8\u20E3|9\u20E3|#\u20E3|\*\u20E3|\uD83C(?:\uDDE6\uD83C(?:\uDDE8|\uDDE9|\uDDEA|\uDDEB|\uDDEC|\uDDEE|\uDDF1|\uDDF2|\uDDF4|\uDDF6|\uDDF7|\uDDF8|\uDDF9|\uDDFA|\uDDFC|\uDDFD|\uDDFF)|\uDDE7\uD83C(?:\uDDE6|\uDDE7|\uDDE9|\uDDEA|\uDDEB|\uDDEC|\uDDED|\uDDEE|\uDDEF|\uDDF1|\uDDF2|\uDDF3|\uDDF4|\uDDF6|\uDDF7|\uDDF8|\uDDF9|\uDDFB|\uDDFC|\uDDFE|\uDDFF)|\uDDE8\uD83C(?:\uDDE6|\uDDE8|\uDDE9|\uDDEB|\uDDEC|\uDDED|\uDDEE|\uDDF0|\uDDF1|\uDDF2|\uDDF3|\uDDF4|\uDDF5|\uDDF7|\uDDFA|\uDDFB|\uDDFC|\uDDFD|\uDDFE|\uDDFF)|\uDDE9\uD83C(?:\uDDEA|\uDDEC|\uDDEF|\uDDF0|\uDDF2|\uDDF4|\uDDFF)|\uDDEA\uD83C(?:\uDDE6|\uDDE8|\uDDEA|\uDDEC|\uDDED|\uDDF7|\uDDF8|\uDDF9|\uDDFA)|\uDDEB\uD83C(?:\uDDEE|\uDDEF|\uDDF0|\uDDF2|\uDDF4|\uDDF7)|\uDDEC\uD83C(?:\uDDE6|\uDDE7|\uDDE9|\uDDEA|\uDDEB|\uDDEC|\uDDED|\uDDEE|\uDDF1|\uDDF2|\uDDF3|\uDDF5|\uDDF6|\uDDF7|\uDDF8|\uDDF9|\uDDFA|\uDDFC|\uDDFE)|\uDDED\uD83C(?:\uDDF0|\uDDF2|\uDDF3|\uDDF7|\uDDF9|\uDDFA)|\uDDEE\uD83C(?:\uDDE8|\uDDE9|\uDDEA|\uDDF1|\uDDF2|\uDDF3|\uDDF4|\uDDF6|\uDDF7|\uDDF8|\uDDF9)|\uDDEF\uD83C(?:\uDDEA|\uDDF2|\uDDF4|\uDDF5)|\uDDF0\uD83C(?:\uDDEA|\uDDEC|\uDDED|\uDDEE|\uDDF2|\uDDF3|\uDDF5|\uDDF7|\uDDFC|\uDDFE|\uDDFF)|\uDDF1\uD83C(?:\uDDE6|\uDDE7|\uDDE8|\uDDEE|\uDDF0|\uDDF7|\uDDF8|\uDDF9|\uDDFA|\uDDFB|\uDDFE)|\uDDF2\uD83C(?:\uDDE6|\uDDE8|\uDDE9|\uDDEA|\uDDEB|\uDDEC|\uDDED|\uDDF0|\uDDF1|\uDDF2|\uDDF3|\uDDF4|\uDDF5|\uDDF6|\uDDF7|\uDDF8|\uDDF9|\uDDFA|\uDDFB|\uDDFC|\uDDFD|\uDDFE|\uDDFF)|\uDDF3\uD83C(?:\uDDE6|\uDDE8|\uDDEA|\uDDEB|\uDDEC|\uDDEE|\uDDF1|\uDDF4|\uDDF5|\uDDF7|\uDDFA|\uDDFF)|\uDDF4\uD83C\uDDF2|\uDDF5\uD83C(?:\uDDE6|\uDDEA|\uDDEB|\uDDEC|\uDDED|\uDDF0|\uDDF1|\uDDF2|\uDDF3|\uDDF7|\uDDF8|\uDDF9|\uDDFC|\uDDFE)|\uDDF6\uD83C\uDDE6|\uDDF7\uD83C(?:\uDDEA|\uDDF4|\uDDF8|\uDDFA|\uDDFC)|\uDDF8\uD83C(?:\uDDE6|\uDDE7|\uDDE8|\uDDE9|\uDDEA|\uDDEC|\uDDED|\uDDEE|\uDDEF|\uDDF0|\uDDF1|\uDDF2|\uDDF3|\uDDF4|\uDDF7|\uDDF8|\uDDF9|\uDDFB|\uDDFD|\uDDFE|\uDDFF)|\uDDF9\uD83C(?:\uDDE6|\uDDE8|\uDDE9|\uDDEB|\uDDEC|\uDDED|\uDDEF|\uDDF0|\uDDF1|\uDDF2|\uDDF3|\uDDF4|\uDDF7|\uDDF9|\uDDFB|\uDDFC|\uDDFF)|\uDDFA\uD83C(?:\uDDE6|\uDDEC|\uDDF2|\uDDF8|\uDDFE|\uDDFF)|\uDDFB\uD83C(?:\uDDE6|\uDDE8|\uDDEA|\uDDEC|\uDDEE|\uDDF3|\uDDFA)|\uDDFC\uD83C(?:\uDDEB|\uDDF8)|\uDDFD\uD83C\uDDF0|\uDDFE\uD83C(?:\uDDEA|\uDDF9)|\uDDFF\uD83C(?:\uDDE6|\uDDF2|\uDDFC)))|[\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2648-\u2653\u2660\u2663\u2665\u2666\u2668\u267B\u267F\u2692-\u2694\u2696\u2697\u2699\u269B\u269C\u26A0\u26A1\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD79\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED0\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3]|\uD83E[\uDD10-\uDD18\uDD80-\uDD84\uDDC0]/g},{}],169:[function($,N){N.exports={":(":!0,":)":!0,":P":!0,":p":!0,":O":!0,":3":!0,":|":!0,":/":!0,":\\":!0,":$":!0,":*":!0,":@":!0,":-(":!0,":-)":!0,":-P":!0,":-p":!0,":-O":!0,":-3":!0,":-|":!0,":-/":!0,":-\\":!0,":-$":!0,":-*":!0,":-@":!0,":^(":!0,":^)":!0,":^P":!0,":^p":!0,":^O":!0,":^3":!0,":^|":!0,":^/":!0,":^\\":!0,":^$":!0,":^*":!0,":^@":!0,"):":!0,"(:":!0,"$:":!0,"*:":!0,")-:":!0,"(-:":!0,"$-:":!0,"*-:":!0,")^:":!0,"(^:":!0,"$^:":!0,"*^:":!0,"<3":!0,"</3":!0,"<\\3":!0}},{}],170:[function($,N){"use strict";N.exports={beforeThisWord:{there:"Verb",me:"Verb",man:"Adjective",only:"Verb",him:"Verb",were:"Noun",what:"Verb",took:"Noun",himself:"Verb",went:"Noun",who:"Noun",jr:"Person"},afterThisWord:{i:"Verb",first:"Noun",it:"Verb",there:"Verb",not:"Verb",because:"Noun",if:"Noun",but:"Noun",who:"Verb",this:"Noun",his:"Noun",when:"Noun",you:"Verb",very:"Adjective",old:"Noun",never:"Verb",before:"Noun"},beforeThisPos:{Copula:"Noun",PastTense:"Noun",Conjunction:"Noun",Modal:"Noun",PluperfectTense:"Noun",PerfectTense:"Verb"},afterThisPos:{Adjective:"Noun",Possessive:"Noun",Determiner:"Noun",Adverb:"Verb",Pronoun:"Verb",Value:"Noun",Ordinal:"Noun",Modal:"Verb",Superlative:"Noun",Demonym:"Noun",Organization:"Verb",Honorific:"Person"}}},{}],171:[function($,N){N.exports=[["^#[a-z]+","HashTag"],["[a-z]+n'","Gerund"],["[a-z]+s'","Possessive"],["[0-9]{3}-[0-9]{4}","PhoneNumber"],["\\(?[0-9]{3}\\)?[ -]?[0-9]{3}-[0-9]{4}","PhoneNumber"],["[012]?[0-9](:[0-5][0-9])(:[0-5][0-9])","Time"],["[012]?[0-9](:[0-5][0-9])?(:[0-5][0-9])? ?(am|pm)","Time"],["[012]?[0-9](:[0-5][0-9])(:[0-5][0-9])? ?(am|pm)?","Time"],["[PMCE]ST","Time"],["utc ?[+-]?[0-9]+?","Time"],["[a-z0-9]*? o'?clock","Time"],["[0-9]{1,4}[/\\-\\.][0-9]{1,2}[/\\-\\.][0-9]{1,4}","Date"],["^[-+]?[$\u20AC\xA5\xA3][0-9]+(.[0-9]{1,2})?$","Money"],["^[-+]?[$\u20AC\xA5\xA3][0-9]{1,3}(,[0-9]{3})+(.[0-9]{1,2})?$","Money"],["[0-9]{1,4}(st|nd|rd|th)?-[0-9]{1,4}(st|nd|rd|th)?","NumberRange"],["^[-+]?[0-9]{1,3}(,[0-9]{3})+(.[0-9]+)?$","NiceNumber"],["^[-+]?[0-9]+(.[0-9]+)?$","NumericValue"],["[0-9]{1,4}/[0-9]{1,4}","Fraction"],["[0-9]{1,2}-[0-9]{1,2}","Value"],["ma?c'.*","LastName"],["o'[drlkn].*","LastName"]].map(function(_){return{reg:new RegExp("^"+_[0]+"$","i"),tag:_[1],str:_[0]}})},{}],172:[function($,N){"use strict";const _="Adjective",C="Infinitive",j="PresentTense",V="Singular",E="PastTense",z="Adverb",D="Expression",O="Plural",M="Actor",F="Verb",S="Noun",W="LastName";N.exports=[["^[0-9]+ ?(am|pm)$","Date"],["[0-9](st|nd|rd|r?th)$","Ordinal"],["([0-9])([a-z]{1,2})$","Cardinal"],["^[0-9,.]+$","Cardinal"],["^[a-z]et$",F],["cede$",C],[".[cts]hy$",_],[".[st]ty$",_],[".[lnr]ize$",C],[".[gk]y$",_],[".fies$",j],["ities$",O],[".some$",_],[".[nrtumcd]al$",_],[".que$",_],[".[tnl]ary$",_],[".[di]est$","Superlative"],["^(un|de|re)\\-[a-z]..",F],[".lar$",_],["[bszmp]{2}y",_],[".zes$",j],[".[icldtgrv]ent$",_],[".[rln]ates$",j],[".[oe]ry$",V],["[rdntkbhs]ly$",z],[".[lsrnpb]ian$",_],[".[^aeiou]ial$",_],[".[^aeiou]eal$",_],[".[vrl]id$",_],[".[ilk]er$","Comparative"],[".ike$",_],[".ends?$",F],[".wards$",z],[".rmy$",_],[".rol$",V],[".tors$",S],[".azy$",_],[".where$",z],[".ify$",C],[".bound$",_],[".[^z]ens$",F],[".oid$",_],[".vice$",V],[".rough$",_],[".mum$",_],[".teen(th)?$","Value"],[".oses$",j],[".ishes$",j],[".ects$",j],[".tieth$","Ordinal"],[".ices$",O],[".tage$",C],[".ions$",O],[".tion$",V],[".ean$",_],[".[ia]sed$",_],[".urned",E],[".tized$",E],[".[aeiou][td]ed",E],[".llen$",_],[".fore$",z],[".ances$",O],[".gate$",C],[".nes$",j],[".less$",z],[".ried$",_],[".gone$",_],[".made$",_],[".ing$","Gerund"],[".tures$",O],[".ous$",_],[".ports$",O],[". so$",z],[".ints$",O],[".[gt]led$",_],[".lked$",E],[".fully$",z],[".*ould$","Modal"],["^[-+]?[0-9]+(.[0-9]+)?$","NumericValue"],["[a-z]*\\-[a-z]*\\-",_],["[a-z]'s$",S],[".'n$",F],[".'re$","Copula"],[".'ll$","Modal"],[".'t$",F],[".tches$",j],["^https?:?//[a-z0-9]","Url"],["^www.[a-z0-9]","Url"],[".ize$",C],[".[^aeiou]ise$",C],[".[aeiou]te$",C],[".ea$",V],["[aeiou][pns]er$",V],[".ia$",S],[".sis$",V],[".[aeiou]na$",S],[".[^aeiou]ity$",V],[".[^aeiou]ium$",V],[".[^aeiou][ei]al$",_],[".ffy$",_],[".[^aeiou]ic$",_],[".(gg|bb|zz)ly$",_],[".[aeiou]my$",_],[".[^aeiou][ai]ble$",_],[".[^aeiou]eable$",_],[".[^aeiou]ful$",_],[".[^aeiouf]ish$",_],[".[^aeiou]ica$",V],["[aeiou][^aeiou]is$",V],["[^aeiou]ard$",V],["[^aeiou]ism$",V],[".[^aeiou]ity$",V],[".[^aeiou]ium$",V],[".[lstrn]us$",V],["..ic$",_],["[aeiou][^aeiou]id$",_],[".[^aeiou]ive$",_],["[ea]{2}zy$",_],["[^aeiou]ician$",M],[".keeper$",M],[".logist$",M],["..ier$",M],[".ettes$",O],[".ette$",V],[".[^aeiou][ao]pher$",M],[".tive$",M],["[aeiou].*ist$",_],["(over|under)[a-z]{2,}$",_],["[^i]fer$",C],["[aeiou]c?ked$",E],["(eastern|central|mountain|pacific)( standard)? time","Time"],["^um+$",D],["^([hyj]a)+$",D],["^(k)+$",D],["^(yo)+$",D],["^yes+$",D],["^no+$",D],["^lol[sz]$",D],["^woo+[pt]?$",D],["^ug?h+$",D],["^uh[ -]?oh$",D],["^ma?cd[aeiou]",W],[".sdottir$",W],[".sson$",W],[".[oau][wvl]ski$",W],[".[oau][wvl]ska$",W],[".czyk$",W],[".marek$",W],[".[^aeiou][ai][kln]ov$",W],["..chuk$",W],["..enko$",W],[".v[iy]ch$",W],[".opoulos$",W],[".akis$",W],[".auskas$",W],[".nss?en$",W]].map(function(q){return{reg:new RegExp(q[0]),tag:q[1],str:q[0]}})},{}],173:[function($,N){const _={blue:["Noun","Plural","Singular","Pronoun","Possessive","Place","Person","City"],red:["Value","Ordinal","Cardinal","TextValue","NumericValue"],green:["Verb","Auxillary","Negative","PastTense","PresentTense","FutureTense","Modal","Infinitive","Gerund","Copula","Participle"],cyan:["Preposition","Conjunction","Determiner"],black:["Adjective","Adverb"]};N.exports=Object.keys(_).reduce((C,j)=>{return _[j].forEach((V)=>{C[V]=j}),C},{})},{}],174:[function($,N){"use strict";const _=[["Noun","Verb","Adjective","Adverb","Determiner","Conjunction","Preposition","QuestionWord","Expression","Url","PhoneNumber","Email","Emoji"],["Person","Organization","Value","Place","Actor","Demonym","Pronoun"],["Plural","Singular"],["Plural","Person"],["Plural","Organization"],["Plural","Currency"],["Plural","Ordinal"],["MaleName","FemaleName"],["FirstName","LastName","Honorific"],["Comparative","Superlative"],["Value","Verb","Adjective"],["Ordinal","Cardinal"],["TextValue","NumericValue"],["NiceNumber","TextValue"],["Ordinal","Currency"],["PastTense","PerfectTense","Pluperfect","FuturePerfect","Copula","Modal","Participle","Infinitive","Gerund"],["Month","WeekDay","Year","Duration"],["Particle","Conjunction","Adverb","Preposition"],["Date","Verb","Adjective","Person"],["NounPhrase","VerbPhrase","AdjectivePhrase","ConditionalPhrase"],["Value","Determiner"],["Verb","NounPhrase"],["Noun","VerbPhrase"],["RomanNumeral","Fraction","NiceNumber"],["RomanNumeral","Money"],["UpperCase","TitleCase","CamelCase"]];N.exports=(j)=>{let V=[];for(let E=0;E<_.length;E++)-1!==_[E].indexOf(j)&&(V=V.concat(_[E]));return V.filter((E)=>E!==j)}},{}],175:[function($,N){"use strict";const _=$("./conflicts"),C=$("./tree"),j={Month:"Singular",Time:"Noun",WeekDay:"Noun",Duration:"Noun",NumberRange:"Contraction"},V=(z)=>{if(!0===z)return[];let D=Object.keys(z||{});return D.forEach((O)=>{if("object"==typeof z[O]){let M=Object.keys(z[O]);M.forEach((F)=>{if("object"==typeof z[O][F]){let S=Object.keys(z[O][F]);D=D.concat(S)}}),D=D.concat(M)}}),D};N.exports=function(){let z={};const D=(O,M)=>{Object.keys(O).forEach((F)=>{M=M.slice(0),z[F]={parents:M,children:V(O[F])},!0!==O[F]&&D(O[F],M.concat([F]))})};return D(C,[]),Object.keys(z).forEach((O)=>{j[O]&&z[O].parents.push(j[O])}),Object.keys(z).forEach((O)=>{z[O].not=_(O);let M=z[O].parents;for(let S,F=0;F<M.length;F++)S=_(M[F]),z[O].not=z[O].not.concat(S)}),z}()},{"./conflicts":174,"./tree":176}],176:[function($,N){N.exports={Noun:{Singular:{Person:{FirstName:{MaleName:!0,FemaleName:!0},LastName:!0,Honorific:!0},Place:{Country:!0,City:!0,Address:!0},Organization:{SportsTeam:!0,Company:!0,School:!0}},Plural:!0,Pronoun:!0,Actor:!0,Unit:!0,Demonym:!0,Possessive:!0},Date:{Month:!0,WeekDay:!0,RelativeDay:!0,Year:!0,Duration:!0,Time:!0,Holiday:!0},Verb:{PresentTense:{Infinitive:!0,Gerund:!0},PastTense:!0,PerfectTense:!0,FuturePerfect:!0,Pluperfect:!0,Copula:!0,Modal:!0,Participle:!0,Particle:!0,PhrasalVerb:!0},Adjective:{Comparative:!0,Superlative:!0},Adverb:!0,Value:{Ordinal:!0,Cardinal:{RomanNumeral:!0},Fraction:!0,TextValue:!0,NumericValue:!0,NiceNumber:!0,Money:!0,NumberRange:!0},Currency:!0,Determiner:!0,Conjunction:!0,Preposition:!0,QuestionWord:!0,Expression:!0,Url:!0,PhoneNumber:!0,HashTag:!0,Emoji:!0,Email:!0,Condition:!0,Auxillary:!0,Negative:!0,Contraction:!0,TitleCase:!0,CamelCase:!0,UpperCase:!0,Hyphenated:!0,Acronym:!0,ClauseEnd:!0,Quotation:!0}},{}],177:[function($,N){"use strict";const _=$("./paths").fns,C=$("./whitespace"),j=$("./makeUID");class V{constructor(E){this._text=_.ensureString(E),this.tag={};let z=C(this._text);this.whitespace=z.whitespace,this._text=z.text,this.parent=null,this.silent_term="",this.dirty=!1,this.normalize(),this.uid=j(this.normal)}set text(E){E=E||"",this._text=E.trim(),this.dirty=!0,this._text!==E&&(this.whitespace=C(E)),this.normalize()}get text(){return this._text}get isA(){return"Term"}index(){let E=this.parentTerms;return E?E.terms.indexOf(this):null}clone(){let E=new V(this._text,null);return E.tag=_.copy(this.tag),E.whitespace=_.copy(this.whitespace),E.silent_term=this.silent_term,E}}V=$("./methods/normalize")(V),V=$("./methods/isA")(V),V=$("./methods/out")(V),V=$("./methods/tag")(V),V=$("./methods/case")(V),V=$("./methods/punctuation")(V),N.exports=V},{"./makeUID":178,"./methods/case":179,"./methods/isA":180,"./methods/normalize":181,"./methods/out":185,"./methods/punctuation":187,"./methods/tag":188,"./paths":192,"./whitespace":193}],178:[function($,N){"use strict";N.exports=(C)=>{let j="";for(let V=0;5>V;V++)j+=parseInt(9*Math.random(),10);return C+"-"+j}},{}],179:[function($,N){"use strict";N.exports=(C)=>{const j={toUpperCase:function(){return this.text=this.text.toUpperCase(),this.tagAs("#UpperCase","toUpperCase"),this},toLowerCase:function(){return this.text=this.text.toLowerCase(),this.unTag("#TitleCase"),this.unTag("#UpperCase"),this},toTitleCase:function(){return this.text=this.text.replace(/^[a-z]/,(V)=>V.toUpperCase()),this.tagAs("#TitleCase","toTitleCase"),this},needsTitleCase:function(){const V=["Person","Place","Organization","Acronym","UpperCase","Currency","RomanNumeral","Month","WeekDay","Holiday","Demonym"];for(let z=0;z<V.length;z++)if(this.tag[V[z]])return!0;const E=["i","god","allah"];for(let z=0;z<E.length;z++)if(this.normal===E[z])return!0;return!1}};return Object.keys(j).forEach((V)=>{C.prototype[V]=j[V]}),C}},{}],180:[function($,N){"use strict";N.exports=(C)=>{const j={isAcronym:function(){return!!this.text.match(/([A-Z]\.)+[A-Z]?$/)||!!this.text.match(/^[A-Z]\.$/)||!!this.text.match(/[A-Z]{3}$/)},isWord:function(){let V=this;if(V.silent_term)return!0;if(!V.text.match(/[a-z|0-9]/i))return!1;if(V.normal.match(/[a-z]/)&&1<V.normal.length&&!V.normal.match(/[aeiouy]/i))return!1;if(V.normal.match(/[0-9]/)){if(V.normal.match(/[a-z][0-9][a-z]/))return!1;if(!V.normal.match(/^([$-])*?([0-9,\.])*?([s\$%])*?$/))return!1}return!0}};return Object.keys(j).forEach((V)=>{C.prototype[V]=j[V]}),C}},{}],181:[function($,N){"use strict";const _=$("./normalize").addNormal,C=$("./root");N.exports=(V)=>{const E={normalize:function(){return _(this),C(this),this}};return Object.keys(E).forEach((z)=>{V.prototype[z]=E[z]}),V}},{"./normalize":182,"./root":183}],182:[function($,N,A){"use strict";const _=$("./unicode");A.normalize=function(C){return C=C||"",C=C.toLowerCase(),C=C.trim(),C=_(C),C=C.replace(/^[#@]/,""),C=C.replace(/[\u2018\u2019\u201A\u201B\u2032\u2035]+/g,"'"),C=C.replace(/[\u201C\u201D\u201E\u201F\u2033\u2036"]+/g,""),C=C.replace(/\u2026/g,"..."),C.match(/^[:;]/)||(C=C.replace(/\.{3,}$/g,""),C=C.replace(/['",\.!:;\?\)]$/g,""),C=C.replace(/^['"\(]/g,"")),C},A.addNormal=function(C){let j=C._text||"";j=A.normalize(j),C.isAcronym()&&(j=j.replace(/\./g,"")),j=j.replace(/([0-9]),([0-9])/g,"$1$2"),C.normal=j}},{"./unicode":184}],183:[function($,N){"use strict";N.exports=function(C){let j=C.normal||C.silent_term||"";j=j.replace(/'s\b/,""),j=j.replace(/'\b/,""),C.root=j}},{}],184:[function($,N){"use strict";let _={"!":"\xA1","?":"\xBF\u0241",a:"\xAA\xC0\xC1\xC2\xC3\xC4\xC5\xE0\xE1\xE2\xE3\xE4\xE5\u0100\u0101\u0102\u0103\u0104\u0105\u01CD\u01CE\u01DE\u01DF\u01E0\u01E1\u01FA\u01FB\u0200\u0201\u0202\u0203\u0226\u0227\u023A\u0386\u0391\u0394\u039B\u03AC\u03B1\u03BB\u0410\u0414\u0430\u0434\u0466\u0467\u04D0\u04D1\u04D2\u04D3\u019B\u0245\xE6",b:"\xDF\xFE\u0180\u0181\u0182\u0183\u0184\u0185\u0243\u0392\u03B2\u03D0\u03E6\u0411\u0412\u042A\u042C\u0431\u0432\u044A\u044C\u0462\u0463\u048C\u048D\u0494\u0495\u01A5\u01BE",c:"\xA2\xA9\xC7\xE7\u0106\u0107\u0108\u0109\u010A\u010B\u010C\u010D\u0186\u0187\u0188\u023B\u023C\u037B\u037C\u037D\u03F2\u03F9\u03FD\u03FE\u03FF\u0404\u0421\u0441\u0454\u0480\u0481\u04AA\u04AB",d:"\xD0\u010E\u010F\u0110\u0111\u0189\u018A\u0221\u018B\u018C\u01F7",e:"\xC8\xC9\xCA\xCB\xE8\xE9\xEA\xEB\u0112\u0113\u0114\u0115\u0116\u0117\u0118\u0119\u011A\u011B\u018E\u018F\u0190\u01DD\u0204\u0205\u0206\u0207\u0228\u0229\u0246\u0247\u0388\u0395\u039E\u03A3\u03AD\u03B5\u03BE\u03F1\u03F5\u03F6\u0400\u0401\u0415\u042D\u0435\u0450\u0451\u04BC\u04BD\u04BE\u04BF\u04D6\u04D7\u04D8\u04D9\u04DA\u04DB\u04EC\u04ED",f:"\u0191\u0192\u03DC\u03DD\u04FA\u04FB\u0492\u0493\u04F6\u04F7\u017F",g:"\u011C\u011D\u011E\u011F\u0120\u0121\u0122\u0123\u0193\u01E4\u01E5\u01E6\u01E7\u01F4\u01F5",h:"\u0124\u0125\u0126\u0127\u0195\u01F6\u021E\u021F\u0389\u0397\u0402\u040A\u040B\u041D\u043D\u0452\u045B\u04A2\u04A3\u04A4\u04A5\u04BA\u04BB\u04C9\u04CA",I:"\xCC\xCD\xCE\xCF",i:"\xEC\xED\xEE\xEF\u0128\u0129\u012A\u012B\u012C\u012D\u012E\u012F\u0130\u0131\u0196\u0197\u0208\u0209\u020A\u020B\u038A\u0390\u03AA\u03AF\u03B9\u03CA\u0406\u0407\u0456\u0457",j:"\u0134\u0135\u01F0\u0237\u0248\u0249\u03F3\u0408\u0458",k:"\u0136\u0137\u0138\u0198\u0199\u01E8\u01E9\u039A\u03BA\u040C\u0416\u041A\u0436\u043A\u045C\u049A\u049B\u049C\u049D\u049E\u049F\u04A0\u04A1",l:"\u0139\u013A\u013B\u013C\u013D\u013E\u013F\u0140\u0141\u0142\u019A\u01AA\u01C0\u01CF\u01D0\u0234\u023D\u0399\u04C0\u04CF",m:"\u039C\u03FA\u03FB\u041C\u043C\u04CD\u04CE",n:"\xD1\xF1\u0143\u0144\u0145\u0146\u0147\u0148\u0149\u014A\u014B\u019D\u019E\u01F8\u01F9\u0220\u0235\u039D\u03A0\u03AE\u03B7\u03DE\u040D\u0418\u0419\u041B\u041F\u0438\u0439\u043B\u043F\u045D\u048A\u048B\u04C5\u04C6\u04E2\u04E3\u04E4\u04E5\u03C0",o:"\xD2\xD3\xD4\xD5\xD6\xD8\xF0\xF2\xF3\xF4\xF5\xF6\xF8\u014C\u014D\u014E\u014F\u0150\u0151\u019F\u01A0\u01A1\u01D1\u01D2\u01EA\u01EB\u01EC\u01ED\u01FE\u01FF\u020C\u020D\u020E\u020F\u022A\u022B\u022C\u022D\u022E\u022F\u0230\u0231\u038C\u0398\u039F\u03B8\u03BF\u03C3\u03CC\u03D5\u03D8\u03D9\u03EC\u03ED\u03F4\u041E\u0424\u043E\u0472\u0473\u04E6\u04E7\u04E8\u04E9\u04EA\u04EB\xA4\u018D\u038F",p:"\u01A4\u01BF\u03A1\u03C1\u03F7\u03F8\u03FC\u0420\u0440\u048E\u048F\xDE",q:"\u024A\u024B",r:"\u0154\u0155\u0156\u0157\u0158\u0159\u01A6\u0210\u0211\u0212\u0213\u024C\u024D\u0403\u0413\u042F\u0433\u044F\u0453\u0490\u0491",s:"\u015A\u015B\u015C\u015D\u015E\u015F\u0160\u0161\u01A7\u01A8\u0218\u0219\u023F\u03C2\u03DA\u03DB\u03DF\u03E8\u03E9\u0405\u0455",t:"\u0162\u0163\u0164\u0165\u0166\u0167\u01AB\u01AC\u01AD\u01AE\u021A\u021B\u0236\u023E\u0393\u03A4\u03C4\u03EE\u03EF\u0422\u0442\u0482\u04AC\u04AD",u:"\xB5\xD9\xDA\xDB\xDC\xF9\xFA\xFB\xFC\u0168\u0169\u016A\u016B\u016C\u016D\u016E\u016F\u0170\u0171\u0172\u0173\u01AF\u01B0\u01B1\u01B2\u01D3\u01D4\u01D5\u01D6\u01D7\u01D8\u01D9\u01DA\u01DB\u01DC\u0214\u0215\u0216\u0217\u0244\u03B0\u03BC\u03C5\u03CB\u03CD\u03D1\u040F\u0426\u0427\u0446\u045F\u04B4\u04B5\u04B6\u04B7\u04CB\u04CC\u04C7\u04C8",v:"\u03BD\u0474\u0475\u0476\u0477",w:"\u0174\u0175\u019C\u03C9\u03CE\u03D6\u03E2\u03E3\u0428\u0429\u0448\u0449\u0461\u047F",x:"\xD7\u03A7\u03C7\u03D7\u03F0\u0425\u0445\u04B2\u04B3\u04FC\u04FD\u04FE\u04FF",y:"\xDD\xFD\xFF\u0176\u0177\u0178\u01B3\u01B4\u0232\u0233\u024E\u024F\u038E\u03A5\u03AB\u03B3\u03C8\u03D2\u03D3\u03D4\u040E\u0423\u0443\u0447\u045E\u0470\u0471\u04AE\u04AF\u04B0\u04B1\u04EE\u04EF\u04F0\u04F1\u04F2\u04F3",z:"\u0179\u017A\u017B\u017C\u017D\u017E\u01A9\u01B5\u01B6\u0224\u0225\u0240\u0396\u03B6"},C={};Object.keys(_).forEach(function(V){_[V].split("").forEach(function(E){C[E]=V})});N.exports=(V)=>{let E=V.split("");return E.forEach((z,D)=>{C[z]&&(E[D]=C[z])}),E.join("")}},{}],185:[function($,N){"use strict";const _=$("./renderHtml"),C=$("../../paths").fns,j={text:function(E){return E.whitespace.before+E._text+E.whitespace.after},normal:function(E){return E.normal},root:function(E){return E.root||E.normal},html:function(E){return _(E)},tags:function(E){return{text:E.text,normal:E.normal,tags:Object.keys(E.tag)}},debug:function(E){let z=Object.keys(E.tag).map((M)=>{return C.printTag(M)}).join(", "),D=E.text;D="'"+C.yellow(D||"-")+"'",E.dirty;let O="";E.silent_term&&(O="["+E.silent_term+"]"),D=C.leftPad(D,25),D+=C.leftPad(O,5),console.log("   "+D+"        - "+z)}};N.exports=(E)=>{return E.prototype.out=function(z){return j[z]||(z="text"),j[z](this)},E}},{"../../paths":192,"./renderHtml":186}],186:[function($,N){"use strict";const _=(V)=>{const E={"<":"&lt;",">":"&gt;","&":"&amp;","\"":"&quot;","'":"&#39;"," ":"&nbsp;"};return V.replace(/[<>&"' ]/g,function(z){return E[z]})},C=(V)=>{const z=/<(?:!--(?:(?:-*[^->])*--+|-?)|script\b(?:[^"'>]|"[^"]*"|'[^']*')*>[\s\S]*?<\/script\s*|style\b(?:[^"'>]|"[^"]*"|'[^']*')*>[\s\S]*?<\/style\s*|\/?[a-z](?:[^"'>]|"[^"]*"|'[^']*')*)>/gi;let D;do D=V,V=V.replace(z,"");while(V!==D);return V.replace(/</g,"&lt;")};N.exports=function(V){let E=Object.keys(V.tag).filter((O)=>"Term"!==O);E=E.map((O)=>"nl-"+O),E=E.join(" ");let z=C(V.text);z=_(z);let D="<span class=\""+E+"\">"+z+"</span>";return _(V.whitespace.before)+D+_(V.whitespace.after)}},{}],187:[function($,N){"use strict";N.exports=(C)=>{const j={endPunctuation:function(){let V=this.text.match(/[a-z]([,:;\/.(\.\.\.)\!\?]+)$/i);if(V){if({",":"comma",":":"colon",";":"semicolon",".":"period","...":"elipses","!":"exclamation","?":"question"}[V[1]])return V[1]}return null},setPunctuation:function(V){return this.text=this.text.replace(/[a-z]([,:;\/.(\.\.\.)\!\?]+)$/i,""),this.text+=V,this},hasComma:function(){return"comma"===this.endPunctuation()},killPunctuation:function(){return this.text=this._text.replace(/([,:;\/.(\.\.\.)\!\?]+)$/,""),this}};return Object.keys(j).forEach((V)=>{C.prototype[V]=j[V]}),C}},{}],188:[function($,N){"use strict";const _=$("./setTag"),C=$("./unTag"),j=$("./paths").tags;N.exports=(E)=>{const z={tagAs:function(D,O){_(this,D,O)},unTag:function(D,O){C(this,D,O)},canBe:function(D){D=D||"",D=D.replace(/^#/,"");let O=j[D].not||[];for(let M=0;M<O.length;M++)if(this.tag[O[M]])return!1;return!0}};return Object.keys(z).forEach((D)=>{E.prototype[D]=z[D]}),E}},{"./paths":189,"./setTag":190,"./unTag":191}],189:[function($,N,A){arguments[4][99][0].apply(A,arguments)},{"../../paths":192,dup:99}],190:[function($,N){"use strict";const _=$("./paths"),C=_.log,j=_.tags,V=$("./unTag"),E=(O,M,F)=>{if(j[M]){let S=j[M].not||[];for(let W=0;W<S.length;W++)V(O,S[W],F)}},z=(O,M,F)=>{O.tag[M]||(F=F||"",E(O,M,F),C.tagAs(O,M,F),O.tag[M]=!0)};N.exports=function(O,M,F){if(O&&M&&"string"==typeof M&&(M=M||"",M=M.replace(/^#/,""),z(O,M,F),j[M])){let S=j[M].parents||[];for(let W=0;W<S.length;W++)z(O,S[W],"-")}}},{"./paths":189,"./unTag":191}],191:[function($,N){"use strict";const _=$("./paths"),C=_.log,j=_.tags,V=(z,D,O)=>{z.tag[D]&&(C.tell("   --"+D+" "+(O||"")),delete z.tag[D])};N.exports=(z,D,O)=>{if(z&&D&&(V(z,D,O),j[D])){let M=j[D].children||[];for(let F=0;F<M.length;F++){V(z,M[F],O);let S=j[M[F]].children||[];for(let W=0;W<S.length;W++)V(z,S[W],O)}}}},{"./paths":189}],192:[function($,N){N.exports={fns:$("../fns"),log:$("../log"),data:$("../data"),tags:$("../tags")}},{"../data":6,"../fns":21,"../log":23,"../tags":175}],193:[function($,N){"use strict";N.exports=(C)=>{let j={before:"",after:""},V=C.match(/^(\s|-+|\.\.+)+/);return V&&(j.before=V[0],C=C.replace(/^(\s|-+|\.\.+)+/,"")),V=C.match(/(\s+|-+|\.\.+)$/),V&&(C=C.replace(/(\s+|-+|\.\.+)$/,""),j.after=V[0]),{whitespace:j,text:C}}},{}],194:[function($,N){"use strict";const _=$("../term"),C={"-":!0,"--":!0,"...":!0};N.exports=function(V){let E=[];V=V||"","number"==typeof V&&(V=""+V);let z=V.split(/(\S+)/),D=[];for(let M=0;M<z.length;M++){let F=z[M],S=F.match(/^([a-z]+)(-)([a-z0-9].*)/i);if(S){let W=F.split("-");for(let q=0;q<W.length;q++)q===W.length-1?D.push(W[q]):D.push(W[q]+"-")}else D.push(F)}let O="";for(let M=0;M<D.length;M++)D[M].match(/\S/)&&!C[D[M]]?(E.push(O+D[M]),O=""):O+=D[M];return O&&0<E.length&&(E[E.length-1]+=O),E.map((M)=>new _(M))}},{"../term":177}],195:[function($,N){"use strict";const _=$("../tagger"),C=$("./build");class j{constructor(V,E,z,D){this.terms=V,this.lexicon=E,this.refText=z,this._refTerms=D,this.count=void 0,this.get=(O)=>{return this.terms[O]}}get found(){return 0<this.terms.length}get length(){return this.terms.length}get isA(){return"Terms"}get refTerms(){return this._refTerms||this}set refTerms(V){return this._refTerms=V,this}set dirty(V){this.terms.forEach((E)=>{E.dirty=V})}posTag(){return _(this),this}firstTerm(){return this.terms[0]}lastTerm(){return this.terms[this.terms.length-1]}get parent(){return this.refText||this}set parent(V){return this.refText=V,this}get parentTerms(){return this.refTerms||this}set parentTerms(V){return this.refTerms=V,this}all(){return this.parent}data(){return{text:this.out("text"),normal:this.out("normal")}}get whitespace(){return{before:(V)=>{return this.firstTerm().whitespace.before=V,this},after:(V)=>{return this.lastTerm().whitespace.after=V,this}}}static fromString(V,E){let z=C(V),D=new j(z,E,null);return D.terms.forEach((O)=>{O.parentTerms=D}),D.posTag(),D}}j=$("./match")(j),j=$("./match/not")(j),j=$("./methods/tag")(j),j=$("./methods/loops")(j),j=$("./methods/delete")(j),j=$("./methods/insert")(j),j=$("./methods/misc")(j),j=$("./methods/out")(j),j=$("./methods/replace")(j),j=$("./methods/split")(j),j=$("./methods/transform")(j),N.exports=j},{"../tagger":140,"./build":194,"./match":196,"./match/not":202,"./methods/delete":203,"./methods/insert":204,"./methods/loops":205,"./methods/misc":206,"./methods/out":207,"./methods/replace":208,"./methods/split":209,"./methods/tag":210,"./methods/transform":211}],196:[function($,N){"use strict";const _=$("./lib/syntax"),C=$("./lib/startHere"),j=$("../../result/index");N.exports=(E)=>{const z=function(F,S){let W=F.terms.filter((q)=>S[q.normal]);return W=W.map((q)=>{return new E([q],F.lexicon,F.refText,F.refTerms)}),new j(W,F.lexicon,F.parent)},D=function(F,S){let W=S.reduce((q,G)=>{return q[G]=!0,q},{});return z(F,W)},O=function(F,S,W){let q=[],G=_(S);for(let L,I=0;I<F.terms.length&&!(G[0]&&G[0].starting&&0<I);I++)if(L=C(F,I,G,W),L){q.push(L);let R=L.length-1;I+=R}return q=q.map((I)=>{return new E(I,F.lexicon,F.refText,F.refTerms)}),new j(q,F.lexicon,F.parent)},M={match:function(F,S){if("string"==typeof F)return O(this,F,S);if("object"==typeof F){let W=Object.prototype.toString.call(F);if("[object Array]"===W)return D(this,F,S);if("[object Object]"===W)return z(this,F,S)}return this},matchOne:function(F){let S=_(F);for(let q,W=0;W<this.terms.length&&!(S[0]&&S[0].starting&&0<W);W++)if(q=C(this,W,S),q)return q;return null},has:function(F){let S=this.matchOne(F);return!!S}};return Object.keys(M).forEach((F)=>{E.prototype[F]=M[F]}),E}},{"../../result/index":25,"./lib/startHere":200,"./lib/syntax":201}],197:[function($,N){"use strict";const _=$("./paths").fns,C=(V,E)=>{if(!V||!E)return!1;if(E.anyOne)return!0;if(E.tag){for(let D,z=0;z<E.tag.length;z++)if(D=E.tag[z],V.tag[D])return!0;return!1}if(E.oneOf){for(let D,z=0;z<E.oneOf.length;z++)if(D=E.oneOf[z],D.match(/^#/)){let O=D.replace(/^#/,"");if(O=_.titleCase(O),V.tag[O])return!0}else if(V.normal===D||V.text===D)return!0;return!1}if(E.normal){if(V.normal===E.normal||V.text===E.normal||V.root===E.normal)return!0;if(V.silent_term===E.normal)return!0}return!1};N.exports=(V,E,z)=>{let D=C(V,E,z);return E.negative&&(D=!!!D),D}},{"./paths":199}],198:[function($,N){"use strict";const _=$("./paths").fns,C=(V,E)=>{return _.startsWith(E.normal,V)};N.exports=function(V,E,z){let D=E[z].normal;if(C(D,V))for(++z;z<E.length;z++){if(D+=" "+E[z].normal,D===V.normal)return z;if(!C(D,V))return null}return null}},{"./paths":199}],199:[function($,N){N.exports={fns:$("../../../fns"),log:$("../../../log")}},{"../../../fns":21,"../../../log":23}],200:[function($,N){"use strict";const _=$("./lumpMatch"),C=$("./isMatch"),j=(z,D,O)=>{for(D=D;D<z.length;D++){let M=z.terms[D];if(C(M,O))return D}return null},V=(z,D,O,M)=>{for(D=D;D<z.length;D++){let F=z.terms[D];if(M&&C(F,M))return D;if(!C(F,O))return D}return D};N.exports=(z,D,O,M)=>{let F=D;for(let S=0;S<O.length;S++){let W=z.terms[F],q=O[S],G=O[S+1];if(!W){if(q.optional)continue;return null}if(q.starting&&0<F)return null;if(q.ending&&F!==z.length-1&&!q.minMax)return null;if(O[S].astrix){if(!G)return z.terms.slice(D,z.length);let L=j(z,F,O[S+1]);if(!L)return null;F=L+1,S+=1;continue}if(O[S].minMax){if(!G){let B=z.length,U=O[S].minMax.max+D;return O[S].ending&&U<B?null:(U<B&&(B=U),z.terms.slice(D,B))}let L=j(z,F,G);if(!L)return null;let R=O[S].minMax;if(L<R.min||L>R.max)return null;F=L+1,S+=1;continue}if(q.optional){let L=O[S+1];F=V(z,F,q,L);continue}if(C(W,q,M)){if(F+=1,q.consecutive){let L=O[S+1];F=V(z,F,q,L)}continue}if(W.silent_term&&!W.normal){if(0===S)return null;F+=1,S-=1;continue}let I=_(W,O,S);if(I){S=I,F+=1;continue}if(!q.optional)return null}return z.terms.slice(D,F)}},{"./isMatch":197,"./lumpMatch":198}],201:[function($,N){"use strict";const _=$("./paths").fns,C=function(V){V=V||"",V=V.trim();let E={optional:!1};if(_.startsWith(V,"!")&&(V=V.substr(1,V.length),E.negative=!0),_.startsWith(V,"^")&&(V=V.substr(1,V.length),E.starting=!0),_.endsWith(V,"$")&&(V=V.replace(/\$$/,""),E.ending=!0),_.endsWith(V,"?")&&(V=V.replace(/\?$/,""),E.optional=!0),_.endsWith(V,"+")&&(V=V.replace(/\+$/,""),E.consecutive=!0),_.startsWith(V,"#")&&(V=V.replace(/^\#/,""),E.tag=[_.titleCase(V)],V=null),_.startsWith(V,"(")&&_.endsWith(V,")")&&(V=V.replace(/\)$/,""),V=V.replace(/^\(/,""),E.oneOf=V.split(/\|/g),V=null),_.startsWith(V,"{")&&_.endsWith(V,"}")){let z=V.match(/\{([0-9]+), ?([0-9]+)\}/);E.minMax={min:parseInt(z[1],10),max:parseInt(z[2],10)},V=null}return"."===V&&(E.anyOne=!0,V=null),"*"===V&&(E.astrix=!0,V=null),E.normal=V,E.normal&&(E.normal=E.normal.toLowerCase()),E};N.exports=function(V){return V=V||"",V=V.split(/ +/),V.map(C)}},{"./paths":199}],202:[function($,N){"use strict";const _=$("./lib/syntax"),C=$("./lib/startHere"),j=$("../../result/index");N.exports=(E)=>{const z={notObj:function(D,O){let M=[],F=[];return D.terms.forEach((S)=>{O.hasOwnProperty(S.normal)?(F.length&&M.push(F),F=[]):F.push(S)}),F.length&&M.push(F),M=M.map((S)=>{return new E(S,D.lexicon,D.refText,D.refTerms)}),new j(M,D.lexicon,D.parent)},notString:function(D,O,M){let F=[],S=_(O),W=[];for(let G,q=0;q<D.terms.length;q++){if(G=C(D,q,S,M),G){0<W.length&&(F.push(W),W=[]),q+=G.length-1;continue}W.push(D.terms[q])}return 0<W.length&&F.push(W),F=F.map((q)=>{return new E(q,D.lexicon,D.refText,D.refTerms)}),new j(F,D.lexicon,D.parent)}};return z.notArray=function(D,O){let M=O.reduce((F,S)=>{return F[S]=!0,F},{});return z.notObj(D,M)},E.prototype.not=function(D,O){if("object"==typeof D){let M=Object.prototype.toString.call(D);if("[object Array]"===M)return z.notArray(this,D,O);if("[object Object]"===M)return z.notObj(this,D,O)}return"string"==typeof D?z.notString(this,D,O):this},E}},{"../../result/index":25,"./lib/startHere":200,"./lib/syntax":201}],203:[function($,N){"use strict";const _=$("../mutate");N.exports=(j)=>{const V={delete:function(E){if(!this.found)return this;if(!E)return this.parentTerms=_.deleteThese(this.parentTerms,this),this;let z=this.match(E);if(z.found){let D=_.deleteThese(this,z);return D}return this.parentTerms}};return Object.keys(V).forEach((E)=>{j.prototype[E]=V[E]}),j}},{"../mutate":212}],204:[function($,N){"use strict";const _=$("../mutate"),C=(V,E)=>{return V.terms.length&&V.terms[E]?(V.terms[E].whitespace.before=" ",V):V};N.exports=(V)=>{const E=function(D){return"Terms"===D.isA?D:"Term"===D.isA?new V([D]):V.fromString(D)},z={insertBefore:function(D,O){let M=this.terms.length,F=E(D);O&&F.tagAs(O);let S=this.index();return C(this.parentTerms,S),0<S&&C(F,0),this.parentTerms.terms=_.insertAt(this.parentTerms.terms,S,F),this.terms.length===M&&(this.terms=F.terms.concat(this.terms)),this},insertAfter:function(D,O){let M=this.terms.length,F=E(D);O&&F.tagAs(O);let S=this.terms[this.terms.length-1].index();return C(F,0),this.parentTerms.terms=_.insertAt(this.parentTerms.terms,S+1,F),this.terms.length===M&&(this.terms=this.terms.concat(F.terms)),this},insertAt:function(D,O,M){0>D&&(D=0);let F=this.terms.length,S=E(O);return M&&S.tagAs(M),0<D&&C(S,0),this.parentTerms.terms=_.insertAt(this.parentTerms.terms,D,S),this.terms.length===F&&Array.prototype.splice.apply(this.terms,[D,0].concat(S.terms)),0===D&&(this.terms[0].whitespace.before="",S.terms[S.terms.length-1].whitespace.after=" "),this}};return Object.keys(z).forEach((D)=>{V.prototype[D]=z[D]}),V}},{"../mutate":212}],205:[function($,N){"use strict";N.exports=(C)=>{return[["toUpperCase","UpperCase"],["toLowerCase"],["toTitleCase","TitleCase"]].forEach((V)=>{let E=V[0],z=V[1];C.prototype[E]=function(){let O=arguments;return this.terms.forEach((M)=>{M[E].apply(M,O)}),z&&this.tagAs(z,E),this}}),C}},{}],206:[function($,N){"use strict";N.exports=(C)=>{const j={term:function(V){return this.terms[V]},first:function(){let V=this.terms[0];return new C([V],this.lexicon,this.refText,this.refTerms)},last:function(){let V=this.terms[this.terms.length-1];return new C([V],this.lexicon,this.refText,this.refTerms)},slice:function(V,E){let z=this.terms.slice(V,E);return new C(z,this.lexicon,this.refText,this.refTerms)},endPunctuation:function(){return this.last().terms[0].endPunctuation()},canBe:function(V){V=V||"",V=V.replace(/^#/,"");for(let E=0;E<this.terms.length;E++)if(!this.terms[E].canBe(V))return!1;return!0},index:function(){let V=this.parentTerms,E=this.terms[0];if(!V||!E)return null;for(let z=0;z<V.terms.length;z++)if(E===V.terms[z])return z;return null},termIndex:function(){let V=this.terms[0],E=this.refText||this;if(!E||!V)return null;let z=0;for(let O,D=0;D<E.list.length;D++){O=E.list[D];for(let M=0;M<O.terms.length;M++){if(O.terms[M]===V)return z;z+=1}}return z},chars(){return this.terms.reduce((V,E)=>{return V+=E.whitespace.before.length,V+=E.text.length,V+=E.whitespace.after.length,V},0)},wordCount(){return this.terms.length},toCamelCase:function(){return this.toTitleCase(),this.terms.forEach((V,E)=>{0!==E&&(V.whitespace.before=""),V.whitespace.after=""}),this.tagAs("#CamelCase","toCamelCase"),this}};return Object.keys(j).forEach((V)=>{C.prototype[V]=j[V]}),C}},{}],207:[function($,N){"use strict";const _=$("../paths").fns,C={text:function(V){return V.terms.reduce((E,z)=>{return E+=z.out("text"),E},"")},normal:function(V){let E=V.terms.filter((z)=>{return z.text});return E=E.map((z)=>{return z.normal}),E.join(" ")},grid:function(V){var E="  ";return E+=V.terms.reduce((z,D)=>{return z+=_.leftPad(D.text,11),z},""),E+"\n\n"},color:function(V){return V.terms.reduce((E,z)=>{return E+=_.printTerm(z),E},"")},root:function(V){return V.terms.filter((E)=>E.text).map((E)=>E.root).join(" ").toLowerCase()},html:function(V){return V.terms.map((E)=>E.render.html()).join(" ")},debug:function(V){V.terms.forEach((E)=>{E.out("debug")})}};C.plaintext=C.text,C.normalize=C.normal,C.normalized=C.normal,C.colors=C.color,C.tags=C.terms;N.exports=(V)=>{return V.prototype.out=function(E){return C[E]?C[E](this):C.text(this)},V.prototype.debug=function(){return C.debug(this)},V}},{"../paths":213}],208:[function($,N){"use strict";const _=$("../mutate");N.exports=(j)=>{const V={replace:function(E,z){return void 0===z?this.replaceWith(E):(this.match(E).replaceWith(z),this)},replaceWith:function(E,z){let D=j.fromString(E);z&&D.tagAs(z,"user-given");let O=this.index();return this.parentTerms=_.deleteThese(this.parentTerms,this),this.parentTerms.terms=_.insertAt(this.parentTerms.terms,O,D),this.terms=D.terms,this}};return Object.keys(V).forEach((E)=>{j.prototype[E]=V[E]}),j}},{"../mutate":212}],209:[function($,N,A){"use strict";const _=(j,V)=>{let E=V.terms[0],z=V.terms.length;for(let D=0;D<j.length;D++)if(j[D]===E)return{before:j.slice(0,D),match:j.slice(D,D+z),after:j.slice(D+z,j.length)};return{after:j}},C=(j)=>{const V={splitAfter:function(E,z){let D=this.match(E,z),O=this.terms,M=[];return D.list.forEach((F)=>{let S=_(O,F);S.before&&S.match&&M.push(S.before.concat(S.match)),O=S.after}),O.length&&M.push(O),M=M.map((F)=>{let S=this.refText;return new j(F,this.lexicon,S,this.refTerms)}),M},splitOn:function(E,z){let D=this.match(E,z),O=this.terms,M=[];return D.list.forEach((F)=>{let S=_(O,F);S.before&&M.push(S.before),S.match&&M.push(S.match),O=S.after}),O.length&&M.push(O),M=M.filter((F)=>F&&F.length),M=M.map((F)=>new j(F,F.lexicon,F.refText,this.refTerms)),M},splitBefore:function(E,z){let D=this.match(E,z),O=this.terms,M=[];D.list.forEach((F)=>{let S=_(O,F);S.before&&M.push(S.before),S.match&&M.push(S.match),O=S.after}),O.length&&M.push(O);for(let F=0;F<M.length;F++)for(let S=0;S<D.length;S++)D.list[S].terms[0]===M[F][0]&&M[F+1]&&(M[F]=M[F].concat(M[F+1]),M[F+1]=[]);return M=M.filter((F)=>F&&F.length),M=M.map((F)=>new j(F,F.lexicon,F.refText,this.refTerms)),M}};return Object.keys(V).forEach((E)=>{j.prototype[E]=V[E]}),j};N.exports=C,A=C},{}],210:[function($,N){"use strict";N.exports=(C)=>{const j={tagAs:function(V,E){this.terms.forEach((z)=>{z.tagAs(V,E)})},unTag:function(V,E){this.terms.forEach((z)=>{z.unTag(V,E)})},canBe:function(V,E){this.terms.forEach((z)=>{z.canBe(V,E)})}};return Object.keys(j).forEach((V)=>{C.prototype[V]=j[V]}),C}},{}],211:[function($,N){"use strict";N.exports=(C)=>{const j={clone:function(){let V=this.terms.map((E)=>{return E.clone()});return new C(V,this.lexicon,this.refText,null)},hyphenate:function(){return this.terms.forEach((V,E)=>{E!==this.terms.length-1&&(V.whitespace.after="-"),0!==E&&(V.whitespace.before="")}),this},dehyphenate:function(){return this.terms.forEach((V)=>{"-"===V.whitespace.after&&(V.whitespace.after=" ")}),this}};return Object.keys(j).forEach((V)=>{C.prototype[V]=j[V]}),C}},{}],212:[function($,N,A){"use strict";const _=(C)=>{let j=[];return"Terms"===C.isA?j=C.terms:"Text"===C.isA?j=C.flatten().list[0].terms:"Term"===C.isA&&(j=[C]),j};A.deleteThese=(C,j)=>{let V=_(j);return C.terms=C.terms.filter((E)=>{for(let z=0;z<V.length;z++)if(E===V[z])return!1;return!0}),C},A.insertAt=(C,j,V)=>{V.dirty=!0;let E=_(V);return 0<j&&E[0]&&(E[0].whitespace.before=" "),Array.prototype.splice.apply(C,[j,0].concat(E)),C}},{}],213:[function($,N){N.exports={data:$("../data/index"),lexicon:$("../data/lexicon"),fns:$("../fns"),log:$("../log"),Term:$("../term")}},{"../data/index":6,"../data/lexicon":7,"../fns":21,"../log":23,"../term":177}],214:[function($,N,A){(function(_){(function(C){if("object"==typeof A&&"undefined"!=typeof N)N.exports=C();else if("function"==typeof y&&y.amd)y([],C);else{var j;j="undefined"==typeof window?"undefined"==typeof _?"undefined"==typeof self?this:self:_:window,j.unpack=C()}})(function(){return function E(z,D,O){function M(W,q){if(!D[W]){if(!z[W]){var G="function"==typeof $&&$;if(!q&&G)return G(W,!0);if(F)return F(W,!0);var I=new Error("Cannot find module '"+W+"'");throw I.code="MODULE_NOT_FOUND",I}var L=D[W]={exports:{}};z[W][0].call(L.exports,function(R){var B=z[W][1][R];return M(B?B:R)},L,L.exports,E,z,D,O)}return D[W].exports}for(var F="function"==typeof $&&$,S=0;S<O.length;S++)M(O[S]);return M}({1:[function(E,z){"use strict";z.exports={NODE_SEP:";",STRING_SEP:",",TERMINAL_PREFIX:"!",NOT_ALLOWED:/[0-9A-Z,;!]/,BASE:36}},{}],2:[function(E,z){"use strict";var O=E("./config"),M="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ",F=M.split("").reduce(function(I,L,R){return I[L]=R,I},{});z.exports={toAlphaCode:function(L){if(M[L]!==void 0)return M[L];for(var R=1,B=O.BASE,U="";L>=B;L-=B,R++,B*=O.BASE);for(;R--;){var H=L%O.BASE;U=String.fromCharCode((10>H?48:55)+H)+U,L=(L-H)/O.BASE}return U},fromAlphaCode:function(L){if(F[L]!==void 0)return F[L];for(var R=0,B=1,U=O.BASE,H=1;B<L.length;R+=U,B++,U*=O.BASE);for(var Y,Q=L.length-1;0<=Q;Q--,H*=O.BASE)Y=L.charCodeAt(Q)-48,10<Y&&(Y-=7),R+=Y*H;return R},unique:function(L){L.sort();for(var R=1;R<L.length;R++)L[R-1]===L[R]&&L.splice(R,1)},commonPrefix:function(L,R){for(var U,B=Math.min(L.length,R.length);0<B;){if(U=L.slice(0,B),U===R.slice(0,B))return U;B-=1}return""}}},{"./config":1}],3:[function(E,z){"use strict";var O=E("./ptrie");z.exports=function(S){return new O(S)}},{"./ptrie":5}],4:[function(E,z){"use strict";z.exports=function(F,S){if(F===S)return!0;var W=F.length;return!(W>=S.length)&&(1===W?F===S[0]:S.slice(0,W)===F)}},{}],5:[function(E,z){"use strict";function O(I,L){if(!(I instanceof L))throw new TypeError("Cannot call a class as a function")}var M=function(){function I(L,R){for(var U,B=0;B<R.length;B++)U=R[B],U.enumerable=U.enumerable||!1,U.configurable=!0,"value"in U&&(U.writable=!0),Object.defineProperty(L,U.key,U)}return function(L,R,B){return R&&I(L.prototype,R),B&&I(L,B),L}}(),F=E("../config"),S=E("../fns"),W=E("./prefix"),q=E("./unravel"),G=function(){function I(L){O(this,I),this.nodes=L.split(F.NODE_SEP),this.syms=[],this.symCount=0,this._cache=null,L.match(":")&&this.initSymbols()}return M(I,[{key:"initSymbols",value:function(){for(var U,R=/([0-9A-Z]+):([0-9A-Z]+)/,B=0;B<this.nodes.length;B++){if(U=R.exec(this.nodes[B]),!U){this.symCount=B;break}this.syms[S.fromAlphaCode(U[1])]=S.fromAlphaCode(U[2])}this.nodes=this.nodes.slice(this.symCount,this.nodes.length)}},{key:"has",value:function(R){var B=this;if(!R)return!1;if(this._cache)return this._cache[R]||!1;return function H(Q,Y){var Z=B.nodes[Q];if("!"===Z[0]){if(Y===R)return!0;Z=Z.slice(1)}for(var K=Z.split(/([A-Z0-9,]+)/g),X=0;X<K.length;X+=2){var J=K[X],ee=K[X+1];if(J){var te=Y+J;if(","===ee||void 0===ee){if(te===R)return!0;continue}if(W(te,R))return Q=B.indexFromRef(ee,Q),H(Q,te);continue}}return!1}(0,"")}},{key:"indexFromRef",value:function(R,B){var U=S.fromAlphaCode(R);return U<this.symCount?this.syms[U]:B+U+1-this.symCount}},{key:"toArray",value:function(){return this._cache?Object.keys(this._cache):Object.keys(q(this))}},{key:"cache",value:function(){this._cache=q(this),this.nodes=null,this.syms=null}}]),I}();z.exports=G},{"../config":1,"../fns":2,"./prefix":4,"./unravel":6}],6:[function(E,z){"use strict";z.exports=function(F){var S={};return function q(G,I){var L=F.nodes[G];"!"===L[0]&&(S[I]=!0,L=L.slice(1));for(var R=L.split(/([A-Z0-9,]+)/g),B=0;B<R.length;B+=2){var U=R[B],H=R[B+1];if(U){var Q=I+U;if(","===H||void 0===H){S[Q]=!0;continue}var Y=F.indexFromRef(H,G);q(Y,Q)}}}(0,""),S}},{}]},{},[3])(3)})}).call(this,"undefined"==typeof global?"undefined"==typeof self?"undefined"==typeof window?{}:window:self:global)},{}],215:[function($,N){"use strict";const _=$("./efrt-unpack");let C="./_packed/_";const j={Adjective:$(C+"adjectives"),Adverb:$(C+"adverbs"),Place:$(C+"airports"),City:$(C+"cities"),Country:$(C+"countries"),Demonym:$(C+"demonyms"),Expression:$(C+"expressions"),FemaleName:$(C+"female"),FirstName:$(C+"firstnames"),Holiday:$(C+"holidays"),LastName:$(C+"lastnames"),MaleName:$(C+"male"),Noun:$(C+"nouns"),Organization:$(C+"organizations"),SportsTeam:$(C+"sportsTeams"),Actor:$(C+"professions"),Preposition:$(C+"prepositions")},V={orgWords:$(C+"orgWords"),uncountable:$(C+"uncountables"),phrasals:$(C+"phrasals")},E=Object.keys(j);E.forEach((O)=>{j[O]=_(j[O]),j[O].cache()}),Object.keys(V).forEach((O)=>{V[O]=_(V[O]),V[O].cache()});N.exports={lookup:function(O){if(V.uncountable.has(O))return"Noun";if(V.orgWords.has(O))return"Noun";for(let M=0;M<E.length;M++)if(j[E[M]].has(O))return E[M];return null},utils:V,lookupMulti:function(O){const M={Adjective:!0,Place:!0,Demonyms:!0,FemaleName:!0,LastName:!0,MaleName:!0,Professions:!0};if(V.orgWords.has(O))return"Noun";for(let F=0;F<E.length;F++)if(!M[E[F]]&&j[E[F]].has(O))return E[F];return null}}},{"./efrt-unpack":214}]},{},[22])(22)});

